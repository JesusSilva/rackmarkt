%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: server_isometric_09.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: root
%%CreationDate: 11/19/2017
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 13050 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD42FFA87DFD
%7CFF7E53525252A8FD79FF7D7D5259527D527DA8FD74FFA87E5252525352
%52525352527DFD72FF7E5952595253525952535259525352A8FD6EFFA852
%535252525352525253525252535252527DA8FD6AFFA87D527D5259527D52
%59527D5259527D5259527D52597DFD68FF7D535252525352525253525252
%535252525352525253525252A8FD64FFA852535259525352595253525952
%53525952535259525352595253527D7DFD62FF2EFD045253525252535252
%5253525252535252525352525253FD0452FD62FF532752527D5259527D52
%59527D5259527D5259527D5259527D5259272E52FD62FF52282727275952
%525253525252535252525352525253FD045227272752FD62FF5327522728
%27525253525952535259525352595253527D52282728272728FD62FF5228
%272E272705285252525352525253525252535252FD042705272752FD62FF
%592752272E282E2728277D5259527D5259527D5252272E2728272E272852
%FD62FF5228272E27282752272727FD04525352532728272705FD04272827
%2EFD08FFA87D52A8FD56FF59272E2752272E27522728272E525352522728
%2728272827282727272852FD07FF7D535259527DA8FD54FF522827282728
%27282728272705FD07270527272705FD042752FD04FFA87D525352525253
%525253FD53FF7D272E2752272E2752272E27522728272E2728272E272827
%2E2728272E52FFFFFF847D527D5259527D5259527D5284FD51FF522E2728
%272E2728272E2728272E272705FD08272827272752FFA852535252525352
%5252535252525352537DFD4FFF7C4B52272E2752272E2752272E272E2728
%2728272727282728272827272E7D52535259525352595253525952535259
%525352FD4EFF769F742E27282728272827282728FD042705FD0727052728
%525253525252535252525352525253525252535252527DA8FD4BFF7D9FC1
%9F7C2752272E2752272E27522728272E2728272E272827525259527D5259
%527D5259527D5259527D5259527D5259527D52597EFD4AFF522E75C19E9F
%512E2728272E2728FD052728FD05272E5253525252535252525352525253
%525252535252525352525253525252FD49FF599952519F9FC17552272E27
%52272E2728272827282728272827282E5952535259525352595253525952
%535259525352595253527D2853FD49FF529F9E7527759F9F757527282728
%FD06270527272705FD0427FD045253525252535252525352525253525252
%535252272752FD49FF7D9FC19F9F515275A09F9F5152272E272E2728272E
%27282728282827282752527D5259527D5259527D5259527D5259527D522E
%272E272EFD49FF52769F9F759F9952277B9FC17552272705282727052727
%27052875FD05272853525252535252525352525253525227282727052752
%FD49FF532752759F9FC19F9F27529F9F99762728272827272728272827C1
%9F75272E272827535253525952535259525352522728272827282753FD49
%FF52282728277598C19E9F512E517B51272727002727270527272875C19E
%9F4B2E2727052E5252525352525253FD062705FD0427FD09FFA87DA8FD3D
%FF7D2752275227769FC19FC79F522752272827282728272E27282752279F
%9FC19F5227282728287D52595253272827282728272E27282753FD08FF7D
%59527D84FD3CFF5228272E27282752759F9EC19F9F272827270527272705
%272728997527519EC175752728272727525228272827272728FD062752FD
%06FF7E52535252525352A8FD3AFF59272E2752272E27522E9F9EC1C17527
%282728272827282728279F9F9F752E75A07B9F5152272827282728272827
%282728272827282753FD04FF847D5253525952535259527DA8FD38FF5228
%272827282728272E275175C151FD0527052727270528759F989F75522775
%9FC17452272705FD072705FD052752FFFFA9535252535252525352525253
%52527DFD37FF7D272E2752272E2752272E2852757627282728272E272827
%2E282E51C19FC19F9F28529FA69F9F27282728272E2728272E2728272E27
%52A9845259527D5259527D5259527D5259527D53A8FD35FF522E2728272E
%2728272E2728272E27272728FD0727289951279F9F9F9EC1512E519F7B9F
%272827270528272727282727052852525253525252535252525352525253
%525252535259A8FD33FF7C7552272E2752272E2752272E272E2728272827
%282728272827C19F9F27529FC19E9F9F7627769F28272827282728272827
%2827525259525352595253525952535259525352595253525952537DFD32
%FF52C1985227282728272827282728FD042705FD06272875C19E9F512E51
%9F75C79E9FFD042705FD0827FD0452535252525352525253525252535252
%5253525252535252527EFD30FF7D9FC19F9F4B52272E2752272E27522728
%272E2728272E27282752279F9FC19F52287C9FC19FC17528272E27282728
%272827522E53527D5259527D5259527D5259527D5259527D5259527D5259
%527D28FD30FF522851C19E9F752E2728272E2728FD052728272705272728
%987B27519FC1997527529F9F9E9F2727272827272728FD05275252535252
%52535252525352525253525252535252525352522728FD30FF599F52279F
%C1C17576272E2752272E27282728272827282728279F999F755251A07B9F
%755251C19F28272827282728272827282728272E52595253525952535259
%52535259525352595253522E272827FD30FF529F9F7527529F9F747B2728
%2728FD062705FD042728759F989F995127759FC774522751FD0427052727
%2700272728FD05275352525253525252535252525352525253FD0627FD30
%FF7D9FC19F9F755251A07B9F7552272E272E2728272E2728272E2828519F
%9FC19F9F522E7BA69F9F4B282728272827282728272E2752272827282752
%527D5259527D5259527D5259525227282728272827FD30FF52527B9F759F
%987527527BC775762727272827272728FD07277B9F9F9EC1752E4B7B7B9F
%272827270527272705282728272E2728FD04275253525252535252525328
%272728272727282727FD30FF532852519F99C1C19F27527B9F7B76272827
%282728272827282728272727529FC19E9F9F7527769F2827282727272827
%282752282E2752272E27282728277D525352595253272827282728272827
%2827FD30FF52282752277598C19E9F7452277B51FD04272EFD0527280527
%052705284B9F75C79E9F4B27272705272727052705272728272827282728
%272E272705FD045228272705FD07270527FD30FF7D2752275227529FC19F
%C79F7B2752272827525152272E27282728272827282728277C9FC19FC775
%2827282728272827282752272E2752272E27522752272827282E2E272827
%282728272E2728272E27FD30FF5228272E27282752519F98C19F9F4B2827
%27279F9952272E2852282E2727052727270552759F9E9F27272728272727
%282727272E2728272E2728272E27282728FD0727282727052827272728FD
%30FF59272E2752272E2752287B9FC1C175272827289FC19F9F2E5352522E
%52272727282727272E279F9F28272827282728272827282752272E275227
%2E2752272E272E272727282728272827282728272827FD30FF5228272827
%2827282728275251C151FD052751C1989F75522E52285228270527052705
%27272705FD072705272752272827282728272827282728FD1027FD30FF59
%272E2752272E2752272E27525152272827287552279F9FC175765253FD04
%5227282728272827282728272E2728272E272E9F9F272E2752272E275227
%2E2752272827282728272E27282728272827FD2EFFA8FF522E2728272E27
%28272E2728272E27272728279F989F2751FD049F28522E522852272705FD
%0427282727272827272728279F98C17528272E2728272E27282728272727
%2827272728272727282727FD2DFFA8FFFF522752272E2752272E2752272E
%272E272827289FC19F9F752E27A0C79F755352522E525252272827282728
%2728272827282752277B9FC19F762752272E2752272E2728272827282728
%27282728272827FD2AFFA8FFA8FFA8FF2E27055227282728272827282728
%FD04270552999F989F7552277B9F9F74752E5228522852FD0D279F272775
%C19E754B2827282728FD062705272727052705272727FD29FFA8FFFFFFA8
%FFFF532728272E2852272E2752272E27522728272E272E519F9FC19F9F4B
%5275A09F9F5253525252535228272E27282728272827529F9F7552519F75
%C19F522752272E272E27282728272827282728272E27FD26FFA8FFA8FFA8
%FFA8FFA8FF522727282727272E2728272E27282728272727282727277B98
%C19E9F7528277BC15228522E52282E27272728272727282727279F9F9F99
%7527527BC79975272EFD0A2705FD042728FD27FFA8FFFFFFA8FFFFFFA8A8
%2828272E27272752272E2752272E272827282728272827529FC17BC79F75
%277652522E52282E27282728272827282728272851FD049FC1512E75A59F
%9F7552272727282728272827272728272827FD28FFA8FFA8FFA8FFA8FFA8
%FF7D2827272728052727282728FD0A270528517B9EC1989F275228522728
%272705FD0A27282775999F98C17552277B759F7427272705272727002727
%2705270527FD2BFFA8FFFFFFA8FFFFFFA87D2728272E27282752272E2728
%2728272E2728272E5228277C9FC17BC152522728272E4B282728272E2728
%272E272E2752272E51C19FC1759F28527BC72728272E2728272827282728
%272827FD2CFFA8FFA8FFA8FFA8FFA8A82828FD0527282727272827272728
%27527D7D9E752752759F985227272752759F272827272728272727282728
%272E2728279F9E9F9EC151285128FD072728272727282727FD2DFFA8FFFF
%FFA8FFFFFFA8FF7D2E272E2728272827282728272827A8FFFF7DC19F9F4B
%2E519F282E27754B52752827282728272827282752282E27522752277C7B
%C19EC17552272827282728272727282728272827FD2EFFA8FFA8FFA8FFA8
%FFA8FFA87D2728FD082759A8A8FFA87D279F9EC17428275251C19E9F5128
%FD062705FD042728272827282728272E75C1989F9EFD052705FD07270527
%FD35FFA8FFFFFFA8A9522E275227282753A8FFA8FFFFFF7D7C28769FC19F
%7628769FC19FC79F28272E2728272827282752272E2752272E2752275227
%9F9FC1272E27282728272827282728272E27FD32FFA8FFA8FFA8FFA8FFA8
%FF7D52272827A8A8FFA8FFA8FFA87D999F512875C1759F5152759F9E9FFD
%0727282727272E2728272E2728272E272E27529FFD062728272727282727
%2728FD37FFA8FFFFFFA8FFFF597DFFFFFFA8FFFFFFA8FF7DFD049F52277C
%7B9F9F52289F9F282727272827282728272E2752272E2752272E2752272E
%282E272727282728272827282728272827FD36FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA87D519F749F9F9F275275C79875272805FD07270527
%2775272827282728272827282728FD042705FD0B27FD3BFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FF5952287C9FC19FC1755251A09F9F7528272827282728
%272E272E9FC1752E2752272E2752272E2752272827282728272E27282728
%272827FD3AFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D272827527B9F9EC1
%75512776759F27282727272827272728279F98C19952272E2728272E2728
%27282727272827272728272727282727FD3DFFA8FFFFFFA8FFFFFFA8FFFF
%FF7D282728275275C198A0C19F275275282728272827282728275227519F
%C19F9F2752272E2752272E272827282728272727282728272827FD3EFFA8
%FFA8FFA8FFA8FFA8FFA87D05272727052E277B75C19E9F7528FD0B279F4B
%2751C19E75752827282728FD062705FD0927FD41FFA8FFFFFFA8FFFFFF7D
%2E27282728272E27529FC19FC79F28272E27282728272827529F9F9F5227
%9F75A59F522752272E272E2728272E2728272E2728272E27FD40FFA8FFA8
%FFA8FFA8FFA8FF7D2E2728FD05272E519F9E9F2727272827272728272727
%9F9F9F999F275275C79F75272EFD0727282727272827272728FD43FFA8FF
%FFFFA8FFFFFFA87D2728272E27272752287B9F282727272827282728272E
%27FD049FC17552519F7B9F7552272727282728272827282728272827FD44
%FFA8FFA8FFA8FFA8FFA8A85227272827272728272805FD082752522E2752
%759F98C198512775759F98FD0B2705272727FD47FFA8FFFFFFA8FFFFFFA8
%52272827522728272E2728272E27282784FF7D2752285251C19FC19F9F51
%5251C72728272E2728272E27282728272827FD48FFA8FFA8FFA8FFA8FFA8
%7EFD0727282727272853AFA8FF7D28272E272E279F9E9F9FC1752E272827
%272728FD0727282727FD49FFA8FFFFFFA8FFFFFFA8FF532E272827282728
%2752A8FFFFFFA87D282E27522752275275C19EC19F752728272827282727
%27282728272827FD4AFFA8FFA8FFA8FFA8FFA8FFA8522728272727A8A8FF
%A8FFA8FF5328272827282728272E519F989F9EFD052705FD0927FD4DFFA8
%FFFFFFA8FFFFFFA8A82E2E7DFFFFFFA8FFFFFFA87E272E2752272E275227
%52287C9FC1272E2728272E272827282728272E27FD4EFFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FF7D2E2728272E2728272E2728275275FD06
%27282727272827272728A8FD52FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF7D
%2752272E2752272E2752272E272E272827282728272827282728272827FD
%52FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF522827282728272827282728
%2728FD042705FD072705272727A8FFA8FFA8FD52FFA8FFFFFFA8FFFFFFA8
%FFFF7D272828522752272E2752272E2752272827282728272E2728272827
%2827FFFFFFA8FD52FFA8FFA8FFA8FFA8FFA8FFA8FF7DFD04272E272E2728
%272E2728272827272728FD0727282727A8FFA8FFA8FFA8FD52FFA8FFFFFF
%A8FFFFFFA87D2728272E27282852272E2752272E27282728272827272728
%2728272827FFA8FFFFFFA8FD52FFA8FFA8FFA8FFA8FFA8FF8452FD07272E
%27282728FD062705FD08277DA8FFA8FFA8FFA8FFA8FFA8FD52FFA8FFFFFF
%A8FFFF8427522728272E27522752272E272E2728272E2728272E272852FF
%FFFFA8FFFFFFA8FD56FFA8FFA8FFA8FFA8FFA8FF5328272727282727272E
%FD072728272727527DFFA8FFA8FFA8FFA8FFA8FD58FFA8FFFFFFA8FFFFFF
%A85327282728272827522728272827282728277DA8FFFFFFA8FFFFFFA8FD
%5CFFA8FFA8FFA8FFA8FFA8A82727052827270528FD062752FFA8FFA8FFA8
%FFA8FFA8FD60FFA8FFFFFFA8FFFFFF7D522728272E2728272E2753A8FFFF
%FFA8FFFFFFA8FD64FFA8FFA8FFA8FFA8FFA87D2727272E27272784A8FFA8
%FFA8FFA8FFA8FD66FFA8FFFFFFA8FFFFFFA8A8522827527DFFA8FFFFFFA8
%FD6CFFA8FFA8FFA8FFA8FFA8FF7D52A8FFA8FFA8FFA8FFA8FD6EFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FD74FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD78FFA8
%FFFFFFA8FD78FFA8FFA8FFA8FFA8FFA8FDFBFFA8FDFCFFFDFCFFFDFCFFFD
%FCFFFDFCFFFDFCFFFDFCFFFD42FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 9 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">server_isometric</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2017-11-19T21:09:39+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2017-11-19T21:09:39+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2017-11-19T21:09:38+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq+ePzG8++ZdR1G402aY2mnI7RraxVQPxNKSt+2SCDxrTcbZkeHwgFojlEiR3N/l&#xA;j+bOrQ+ZdN8rNc/pC1vJRAFkq5gFK/DJWvtxNR8shKLYC+gYru1mlmhimjkmtyFnjRgzRlhUBwDV&#xA;SRvvlTNVxVKvNOsyaLoF5qcUQmkt1BSNjxUlmCCp8Byrk4R4jTDJPhFvDbP87vN9prTTXbLeRSMB&#xA;LpvphFjUGnwt9qMjfdia/wCVkzjrZjGd7h7F5U/MLy35mrHYzGK8FSbKcBJaDutCysP9UmnfKjEh&#xA;sBZLgS7FXYq8w85fnbpunq9t5djXUrsbG6J/0df9XceofpA9zkxBiZMC0H86PNllqLzXM/6Ut5X5&#xA;XFtMAgUVofTIA9PpsAKe3fJGIRZez+T/AMwNA80IUsnMV9GnqTWMu0iqCAWBGzLVgKj2rSuVmNMg&#xA;bZLgS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+ZfOKxtd6oOKlK3FB8JFFdmY7U&#xA;X7X+xB3bk3wjaj6B7vx+PvLqCf3h/rfj8fcN3j9jdXem3SXtlO9vdxNyinjJR0LbVUjcGh65hOyf&#xA;TX/ONOnarbeVtTur+CWJb67E1vLMrKZU9NayKW3YE/td8qmzi9gyDJjn5iMq+TtQYryp6JC+J9dK&#xA;D78u0/1ho1P92XzibaCW+vQ7Mx+r2/DiaH4XlofmwQf8FmwMQSb7nXCZABHef0JYRLp9p+lGd24+&#xA;pWZG+JQkzqvFRxC/3QO3elcxpYqFhzIZgTR5/se7/kJ5y1jzT5XvLjUpWlNpdfV7d5CGk9MRo3xt&#xA;QFjVupr88xZinKiXpuQZOxV8mX3l+IzIliwtC4JaBg3pEqAQpX7SV702r1rnN6TtbJjieP1xHz/a&#xA;7nUaCEyOH0lBnR9TkQ84VtI4q0nLBq8f98hdyDTq1PkembPJ21iocHqkfs97hQ7OnvxbAfb7nq35&#xA;K6VZ2Pmi6MKl5GsXElw3xO372E/E3QV6hRtmH2brMmbMTM/w8vj3fZbka3Twx4xwjrz+D2nN66t2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrJZo4hVj8h3OKvmTzNdx3NzqsiuCVeZZACS&#xA;VdWZQp5Cobl02r/IOr5tYkGHw/H4+Xe6icSMnx/H4+fc878kWUOpearDT3hFz9ZZ4xAaULGNuPXY&#xA;HlShOYR5OyD7MtrjV9RlEgQafYKd0ej3Um3cKSkQ+lmP+ScoGzYRaaoiovFRQb+/XfviTagUl+u6&#xA;Jb6xp8tjcs/ozABgjtGwKkMpVkIYEMAcYyINhZRBFF4n5j/K/XtBuri+slfVbN440BRR9ZjWFiyF&#xA;o1AEoqwqYwDRfs5mYtTvu4WXS7el53fen/hKb0t0PrVB6gNOTuD7CP78uP0bfjdpAPii/L7v7Xq/&#xA;/OL08Q8p6qhahOoGnh/cx5gZObsovasrZLJZViXkwJ+WKvlyz1Oxvb6EQPxlhEizQyBkmiYKOQZD&#xA;8asN/EVzjc+lyYYyEx3e47/L7jT0ePPDIYmJ/X+PsRNxxW0mqOOz7EcQQFG1a7ig7bbZj47Mx8Pv&#xA;/Hnu2y2ifx0/HlszL8ntYtLjzfepbFriOCydJ7iFeUCu0sRRDIPg5GjEKtdgfDN72RpMkCZyFAjr&#xA;z+X6/hzdX2hqISAiDZD2vN66t2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtOiOKMKjF&#xA;WF+cvyv0LzEkk3E2upMhjW/g+GWhFKOPsyL4hu3QjJxmY8mMoCXNf5H/ACt8reUrcLp9qPrLCk15&#xA;LR7h/Gr0+Ef5K0GRMiUgMxVVUUUUHgMCW8VdirTorijCoxVhnm78qvLHmVme6iaGaSgnnt29KSRA&#xA;QeMhoQ4+ECpFR2IyUZkMTAFPfLnlTQfLmnpYaRZx2tsm/BB1bpyYmrM232mJOAm2Sb4Fd1xViHnD&#xA;8rvK3mcm5uIDa6oFpFqdqfSuU6U+MfapSlGBGCQEhRFjuKQSDY2LCdI/InUpb4r5j1n65pUD1S1t&#xA;ohbm56UNywJNKbFE2PWuYuLQ4ccuKMd/Pevd+Lb8mqyTFE7fK3q+j6HpWj2UdlptrHa20QokUShV&#xA;H0Due5zLcdHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq5mCgsxAUCpJ6AYq0rK&#xA;6hlIZWFVYbgg9xireKuxV2KuxVb6ic+HIc6Vp7HbDSLF0uwJQes6iumaRfakyGVbK3luDGDQsIkL&#xA;8a70rxwgWrwz/obXT/8AqW5v+kpf+qWXeB5seJ3/AENrp/8A1Lc3/SUv/VLHwPNeJVi/5yrtpo5Z&#xA;IvK87pCA0pF0vwhmCD/dXdmAw/lygzAUv+htdP8A+pbm/wCkpf8Aqlg8DzTxMo/Ln8/LTzr5mTQo&#xA;tGksneKSb12nWQD0xWnEIvX55GeKhagu85fnw/l3zdqPlu38t3Oqy6cImlnt5OqzRJKCUEblQPVC&#xA;9cMMJkLCJZBHmxqb/nK61glaKfyvcRSr9qN7kKw77gxVyXgFRMHks/6G10//AKlub/pKX/qlg8Dz&#xA;TxO/6G10/wD6lub/AKSl/wCqWPgea8Tv+htdP/6lub/pKX/qlj4HmvE9/wAoZOxV2KuxV2KuxV2K&#xA;vNfzv86a/wCWdJsTpBKi8aVbuWNeUyRxqp5ITso+KhPyoRjxxBAJ58l4ZEbDk8//ACt/O25i1Waw&#xA;1a7mudFhgeUzzBpJRKCOEcZ+0eVf2jTbt1y2UWAL27yx518v+ZYS+mXFZkHKW1kHCZB0qVqaj3Uk&#xA;ZWRTIFPMCXYq7FXzr+afnvzPNrmoaVeu1potvPJDAIarFIiPwBnb7VT/AJXw+GQw6nHKRgD6h+Px&#xA;9rLJhmIiX8JS78vPzO1bSfMmlaHaXRubLULy3tZbZ/jiRZ5VRmQ/ssOVfh2r1zJlFpBfTeUtjsVY&#xA;75kXzKbsfoq2eeEwgFluVgAfk37JB7U3y2GQAcg1ZMfEeZHuTbSZ9Tnslk1K1WzuyzBoEcSgAMQp&#xA;5DxXfKi2se1vzHpcWvQIbuL0bRkF5Jz+GFuR2cjZTQ716d8zcMLxSLgZ51liGVxyRyIskbB43AZH&#xA;Uggg9CCMwnPSjzr/AMobr3/bOu/+TD4Y81L4j8tarZ6fPM91b2twsihVF3AbhVO+6gFaHfNgJV0t&#xA;x8mPi6ke5CavJZ3F689qEUTMzGCJDHGlTsqKS2304LtlEUKZt+Umi/WNQvZplIEUIaNgoPxK4JAJ&#xA;y/AN3C1s6AYHeWj2zem6FXFeVfw2yhzIl6Z/zjT/AOTQg/5hLn/iIyrN9LZFr86tZudL/OPzHLbt&#xA;IplS0jb05HiqPqcBoSh3G3TDiJ4dixnEHmGBr63mHVIYVXhdS8zJO7FywROXxFv5VTLACfNiSIjy&#xA;T6Dy1pC2hQr6pYVM5NG+YpsMp4yyYxf6dDDOy2s4uIh+0Ox8Ceh+jLYm0E0gSCDQ4Uv0OzXtrsVd&#xA;irsVdirsVdiryT/nIKdorPRDHeixlMs4ilfeNm4pSOQHbi3ielMwtbj4oi4ccev84eY/ZzcnTSo/&#xA;Vwn7Pi8B8vW1nbSX0+rxmCO9l/0S+iqI1aN5FcCQE8QWp9sUI6+9Wqy5aj4BswHqj1ogVY6/Dryb&#xA;MGOG/ijaXI9OvX9a7yR511rQry91KK4lhlvIzYm9ChlROSyMq7EKTxH2f7c29gmurr6NX0fQP5I/&#xA;mfqXm+TUdOvCLgaZHEyXxXg8nqFhRh3px+1Qe+RkKTEvVsgydir5783hT5h1MGnBry6+FqFT8bA8&#xA;SKAGnKo6+J7Zx+tP+ETrv/V+z9A6vQ6Yfuo/j8fiy8l/L8geffLZJoBqtkST/wAxCZ28jsXmhzfb&#xA;2UNild3dvaQGe4cRxLQFjU9TQdMlCBkaHNhOYiLPJAf4n0H/AJa1/wCBf+mXflcnc0/nMXel/mHz&#xA;Fo82galDDeUmktZ0jKI5YM0bAcQBua5KGlnYsbMZ6zHRo7vm3WvNOteXdOkht+DwTOyxAgEx1JNC&#xA;fir3Fa70NPHMmUpwFA7ONCEMpsj1fe9R/wCcdvNEJ8kXf6VuuM41KX00YNRYzDCQFABoOVcxPAnL&#xA;cBzJZ4Q2kaeieYr+z1Pylr0VhIJ5BYXKlQCN3hcKPiA60yJwyiRY5so54SBIPJ8cf8qz88/9WmT/&#xA;AIOL/mvM7wZdzR+bx96uv5dedhbNEdFYuWBEnOKoH/B4fClXJj+Zx3fEzGbWNT8tWk9zZcPQEac7&#xA;dkClWKqBQfFT+anYUr1pgJlAXFpAjlNSG7BltPNPm+eea3tjdSxkM6pwQKG6faK1rTKsYlIlypTh&#xA;jAB2D0j8gfJ3mXRvzGtrrU7Fra3a3uI1kZkI5lKgfCxPRTgz45CNkMsWeEjQLFf+cgv/ACb2vf8A&#xA;Rp/1BQ5HF9IbZc2NeRCP8UWYNOJEvItxoAInJPxkL27/AHHpl+Pm4+p+gsg8724SyRogY3lkKzU5&#xA;AHatGqa1HU8qtvVuOy5HPEc2rTSJ2/H4+zuvmxK3kaGNoVpv8Ram/htlAkQKcoxF2hLwg3D08T+v&#xA;Lkh+hGa9udirsVdirsVdirsVYt58/LrQPOmnra6osiyQktbXMTlZImagJXqprTcMCMINIIt455u/&#xA;LL/BPlu1t1N/qdi3rHU79FVktxVGUrCvJ44z8RZlLUPXqM1+r00pTGXGBxj7f0befzDl6fNERMJ3&#xA;wn7Px5fJ5n5es9Vt9IlX92qXZeWHTLuNlFxCFp6sTsBy+JeIp3G/TBrxHjiZCQr+OPQ9xHd5/JOk&#xA;vhIBB/onr7vP8F6P/wA4mCmqeY9z/cW1R/s5M2k3Bi+ir6+trK3M9w3GMGgoKkk9AMwtVqseCHHM&#xA;0G/FilklUUhuJdc12CSO2J02xkVl+st/eEEUqNx+FPnmjGbV636B4WHvPM/jy+bsBHDgNy9c+7p+&#xA;PxTxPWLe3s9TvbSCb10trmWBnLcgWjYhVcfEVbpt7/CvfMHPpziyGHdy6H3jl+BvLo5+PN4keLv+&#xA;I9x/HuHV5Z5NtYrvzfodpMxWK41C1ikZeoV51UkVrvQ52+fGJwlE8pAj5vNYpmExIdDb69tItb0C&#xA;2ii5HU9PiUKH/wB2KAKf5X8R8s5a9Xov9uw/aPx8R7nbSOHUG/on9ibRy6ZrtgybvCSPUjNVYEbg&#xA;Gmbzs/tGGYceM8vsdbqtIR6ZhDf4P0H/AHy3/Bv/AFzZ/ncne4P5HF3IDzB5X0O20HUrhYyjRWsz&#xA;qzSuoBWNiKkGoyUNXkJAJYz0WMRJA3fMXn0Usoh/xeR/L0Uj7PtsKfs7L1rl+fk06Tn8Px+OvN6v&#xA;/wA446FpmoeSL6W6QvKupyoKMV+EW8B6A+JzGGonDYOXPTQyG5B6ZrumWmkeU9fmsVMchsLhySS2&#xA;8cLlftV8chLPKZF9GUNPCAIA5vkb/lbnnn/lsj/5Exf805nePJx/yWPud/yt3zzT/e2P/kRF/wA0&#xA;4+PJfyWPuZH5qbloVyaihSKlCQKFlO1dyCanfdt26Bccv0/j8fi3HwfWPx+P0cu9hWlebNa8vNI+&#xA;lzLC1yAJeSK9QlSPtA/zZThmY8nNyYYz+p6p+RHnvzLr35h21lqdwstutvPKFWNEPNUoDVQD0Y46&#xA;jLIxoow6aEJWAw7/AJyC/wDJva9/0af9QUOQxfSG+XNjHkV1XzZYAmjVk4gda+k9KUDGvhQV8N8u&#xA;x/U0an6CyjzsaWFuBQAyUoOIFADsKV+FT2X4Qe7NU45+X4/H46uPpeZ/H4+/3BglxLRqI1GIofll&#xA;EXOWwSWyRSl4xJMRRC7EKAQQaKBuw6irU9jloQbfoPmvbnYq7FXYq7FXYq7FXYq0yqwowqPA4q83&#xA;/ND8mdO85Rx3VtcvY6raw+jav9qEoCWCPH4VJ+JaEe/TJRlSCEX+Vv5R6V5EtpnhuZLvUbsILu4b&#xA;4FISpCogrxX4vEn3xlK1ApnU1vBOFWZBIqsGUMKio6GmU5MMMgAkLo2zjMx5Gl0kSSLxYbZYxeW+&#xA;e/yTtNUvZ9c0C6fSdelq0sq1eCdqdJojXrtUr8ypyGXHDJHhmLDKE5QNxNFCfl1+QWk6FLb6nq8n&#xA;1/VoWWWIiqwQyKagxrszlT0Z/nxGXSnbWIvXYokjXiv05BktitoIWdoo1QyGsnEUqfE5VjwwgSYg&#xA;Di5spTMqs8lTLWKX6zpX6Rsbm0aV40uYnhZo24uokUqWRuzCuxwg0bQRYp4R5u/I/wA1Xt5b6fZ3&#xA;cUtg8hd7+aiSRKAQFkjFfUO/wlKCtagVrmQc/EKLRDTiMrD1b8uvy9tfJuhjTLS4llDytcTzy0Dv&#xA;K6qrEKPsrRBtvmOTbeBScedf+UN17/tnXf8AyYfGPNJfBOZ7UsljLjY09u2AhWQHzrezaXNYX45s&#xA;6gJP1aqkHcmta8R77Dem2Jkapp8CIlYY9I8twQTVVBqCeuREW56x/wA40Cn5n24rX/RLnc/6oyOb&#xA;6WUeaX/85Bf+Te17/o0/6gocOL6QiXN5yqvHKJoW4Sqag9cmQhNL3zRqF7YLZ3amSRG5LJ3O1Nz1&#xA;O229famCRJ2LCOMA2EpMbOQ0nboo6DERZqmSV9e/9DJflj/v+7/6R2/rmH4RbuEu/wChkvyx/wB/&#xA;3f8A0jt/XHwivCXf9DI/ll/v+7/6R2/rj4RTwl3/AEMl+WP+/wC7/wCkdv64+EUcJTXyx+dvkXzL&#xA;rltomly3DX13z9FZISi/u42larE7fChwHGQLWme5BDsVdirsVdirsVSPzj5y0TyjpI1XWGkS0aVY&#xA;AYkMjc3BI2H+qcMY2kBhP/QyX5Y/7/u/+kdv65PwivCWz/zkh+WQJBmuwRsQbZv64+EU8Ja/6GS/&#xA;LH/f93/0jt/XHwijhLv+hkvyx/3/AHf/AEjt/XHwivCWXeSfzA8u+c7W5udEeV4rRxFMZYzGeTDk&#xA;KA9dsjKJHNSGSZFDq16Yq4gEgkbjocVdiqH1Gxt9Q0+5sLgE293E8EwU0PCRSjUPbY4gq8z/AOha&#xA;fyv/AN8Xf/SS39Mt8aSOF3/QtP5X/wC+Lv8A6SW/pj40l4Wj/wA40flcesF2f+jhv6Y+NJeEN/8A&#xA;QtP5X/74u/8ApJb+mPjSXhTryh+THkjynrK6xo8Vwl6kbxAyzF14uKN8JGRlkJCgKXmn8jvIfmfX&#xA;brXNViuWv7vh6zRzFF/dRrEtFA2+FBhjkIFLSVf9C0/lf/vi7/6SW/ph8aS8Lv8AoWn8r/8AfF3/&#xA;ANJLf0x8aS8Lv+hafyv/AN8Xf/SS39MfGkvC7/oWn8r/APfF3/0kt/THxpLwvk3MhuRujaadSv4r&#xA;QSGL1SR6gQyEUBb7K7npmNq9R4WMzq686Z48fGaumTP+XVwFYi9kZRQBvqkm9c0o7eH80f6cOUdB&#xA;LvP+lUfKGqaBp8F7FqpQGRkaEtbic/CG6NUceuZPaenz5TE4ul36uH+1jgnCIPF9zJPyc/RZ/OjQ&#xA;n02RpIZBdu4ZOAV2tLiqqP5QKUzOw+J4VZBRHx223cbNw36X1rgaENFqmmzXstjFdQyXsADTWyup&#xA;kQHuyg1GNKq3Fzb20D3FxKkMEY5SSyMFVQO5Y7DFWrS8tby3S5tJknt5RWOaNgysPYjbFVO81TTb&#xA;J4UvLqG2e4bhAsrqhdvBeRFcaVE4q8l/5yb/APJcRf8AbRg/5Ny5bi5sovlVI2c0GXk02AWzH8y9&#xA;Cj0/XYljCIJ7f6w7ryIZnllPJieRLHYVzRdg6s5cJu9pV8hFzNXi4ZfBiNoLQ3cIvWaOz9RfrLxi&#xA;rrHyHMqD3C1pm7ymQgeD6q2vv6OHGr35IjVT5eVoRpNxNNy5er66haUpxpQD3rlGmlmN+IIjuplP&#xA;h/hfQ3/OKf8Ayj+u/wDMXF/ybyebm0ye55SxSfy9eNcrcAluMTBAG2A61oM0nY2pOUT51EgObrMX&#xA;DXmjdW1ODTbJ7ydkWJCAzSOsajkabs22bXPklCNxiZHuDi44gmiaUdI17TdUT/RrmCSWhb04pklP&#xA;Hb4vhPTfHBklONyjwnuWcQDQNpjlzB2KqX1qIXf1U19QoJB4EVI/hlPjx8Tw/wCKrZ+GeHi6KtR9&#xA;3XLrYOxV2KuxV2KuxV2KuxV+fOZram/laWOLWbZ3cLQtWvpig4HvKVT7zmB2lEywyAHd39/9Gy3Y&#xA;DUh+z9OzP31GyZGH1qhPbnYU/GXOWjgmD9P/AE1/4l2Mske//pn/AMU8umndwE24qSRtvU++dtGN&#xA;buqMrDPPyB/8m3oP/R3/ANQU2DJ9LCXJ9UeeWuF8pambe4e1mMPFLiJgroWYDkpPffMDNkMISkP4&#xA;QT8gjHDikI95D5UvtS1XRdctYYZ6XLSJIl6hZJArPToPsv4mpx0Gr/MY+Kq6J1Wn8KdXb1v/AJyG&#xA;fXGvdLj0+T1II4JJbmxL0EnxgK6p4qAd/cdcGTWQxSEZ2OLrW3zWGnlMEx6dOrHv+cafMuo6j5x1&#xA;S0aQx2C2DSrZqxKeoJ41DnxYKxFcyptEUj/Ne7vbPXNY1Jrv68ovZ4UjmepipK4VFYE/AgoOGxGa&#xA;7S68yzSxSjVXR8vx1czNpRHGMgPN7P8AkHql/qn5a2N3fTtPMZrhAzEkqiSlVQV7KBtmfLm4seSU&#xA;f85N/wDkuIv+2jB/yblyeLmzi+d/JthLcyTzx28d2bMq5tpPh5Bq14sD9r4RQH8MxO0tVHEAJEx4&#xA;9uIdHLwYpT+neunenfn3zlZazIkS6d6M8Cek7u1WWlaqKUqAScxOx+zfy8SePjEt+VD399o1OrM5&#xA;AcPDTAWpyNNx45vg0FrFX0n/AM4p/wDKP67/AMxcX/JvKM3NhJlf5ya95j0+1soNEnEYlErXsQPB&#xA;5FThREkHxIfi6Dr45rNVrIY9pGr2sdLb8GnlPcdN673lS/m1qdvr+m22mRSafc+rFb3aM3JaO4Uq&#xA;ykFGoDsaHxBzH7J7N8ASmJ8cZ78vwb+TLWanjIiY8JD6TurOx1Oy9C8hS5tpQGaKQBlNNxtmzxz4&#xA;gCOriyFGlOw0LR9PfnY2cVs4T0g0ahTw2PHbtsMnaKR2BXEgCp6YCaV4pd/nrp1vdnVLq2NvPH+5&#xA;GlvzExhNTy5U4luVfiHw9vfNRHFky6wZYgHFwcN8Xx5c78vtc2Uoww8ErE7uqeyWc4uIUnSvCQVo&#xA;e3T2Fc2mOV8uX6vg4khSvljF2KuxV2KuxV2KuxV8g/4k/Jr/AKl+7+4f9lGaH8j2t/q0Px/mO28b&#xA;T/zT+Piq2mt/lvc3kEOh6TcWWpMx9K4koqgBSW39Sfqu32DlefSa+ECc2SMsfUD+yP3sseTCZDhi&#xA;Qfx7/uT15nETA3IAH7HqCo/5IZqYxF/T9n/H3NkTXP8AH+lY4nmT8nuC+poF20lBzag3buf96M3Z&#xA;0Pat7ZYV+P6Drxm0/wDNP4+LMfyk1v8ALO5/MLSoNF0e4tdTf6x9XuJAOK0tpS9f30nVAR9nL9Lp&#xA;O0IZAc2SMsfUD7P4R182rPkwmBEYkH8eb278wJIYvJuqyzHjDHDzkbwVWBJOzdAK9M2GoiTjkBzM&#xA;T9zh4SBME8rD5R82yJL5h02SNg8TrGyOp5KQZmNQRsRv2zD7DiRikDz4v0Bye1DeQEd36S9Y/wCc&#xA;i7jS4db0MXzTQyPBKbW8hYhomV15bAbhqivWnhvmRqceWQuHDIdYn+L8fgtOCcAfVYPSQ6MM/wCc&#xA;Y7OO98z69ZvVUudIlhaQdQJJY1NPvzMzw4omPe4+KXDK+5j/AOZuk2lndaiLWZGa2u3tr9o2YGSS&#xA;ORkUvGC3E/AT8X0Fq1zWaGc45DjyXIj6SR0679enInzpzdTGMoccNgfqA7/x+C98/wCccf8AyVWn&#xA;7U/f3Pjv++bNnPm4UeSYfnPrGj6R5UgvNXtTd2YvY1MKokp5NHJQ8ZCq7Zru0dLmz4+HFLhlfOyP&#xA;ucrSZIwnchYp43beZvK+uCX9CaebEWyH6xziiiDc/s/3TMaDi1W7fTnOZ9BqdPXjT4+I7bk8vePd&#xA;t1+DuMObHO+EVt+OX3sAvbq2tPObXV3GZbW3vVlniorFo0kDMvE0XdRShzqNPjlPRiMTUjjoe8h0&#xA;uaQGoJPLi/Szn/lZv5Zf9WCT/pEtP+qmc9/IHaH+qj/Tz/U7T85h/m/YHf8AKzfyy/6sEn/SJaf9&#xA;VMf5A7Q/1Uf6ef6l/OYf5v2B6b+U+qaX5k0XWX8t2501FlgjYMiQVdeTE/uS/wCyQMy49lauOnlj&#xA;lkuciKPFLb41bjz1OLxBLh9I8gh/zI0rUrL6i17OswkWfjR2elDFWoYA9D1HTNVk0GfALyy4uIjq&#xA;T394/tc3BqMeQ+kVQ/HJ4RqAd/PUaoaM11bhTXoTwpnV6CJOkAHPhP6XTas/vyfMPqweWfMYFBfK&#xA;AOgEsv8AzTnLjsPXD/KD/TS/U7L89g/m/YG/8N+ZP+W5f+Rsv/NOH+RNd/qo/wBNL9S/ncH837Am&#xA;2g6bqVl6/wBdnE3qcPTo7PTjyr9oDxGbjsnRZ8HF4suK6rcnv73C1efHkrgFUq65BqE1oi2LhJhI&#xA;CSf5aEeB8cu7VxZp4wMJqXF9lFhpZwjL18qfIv5hmo04joRNT708Mp7B55P839Lk9q8ofH9D6a0v&#xA;TfNf6OtTHdKkZiQovPsVFOgIzVx0XaNemYA9/wCxsOfTdY7or9GecP8AlsX/AIM/804fyPaf+qD5&#xA;/sXx9N/NbTTfN3NeV4pWo5Dmen/A5KOi7SsXkFe/9iDn01fT9ieWkd2rEz0rShoxYGlKUqAfHN/p&#xA;oZAfX99/o/Hn0wMhieSKzLaXYq7FXYq/PnM1tRmk6pJpl/FeRqJHiJIjYkAkqV7UP7WY+r04zYzA&#xA;9WUMhgeIMmP5mXTIytp8JY9X9SSppt45pB2BEHacvkHJPaMiN4D7WG1rnRuI9B/IH/ybeg/9Hf8A&#xA;1BTZDJ9KJcn2HJHHLG0cih43BV0YAqykUIIPUHMVrYnpf5Tfl/peuSazZ6RDHduQ0cZq0ML1JLwx&#xA;GqRk7dBtTam9TxFFJv5m8p+XvM+nHT9cso7y3ryj5bPG380ci0dG91OINJIWeVfJnlvyrp4sdDsk&#xA;tY6D1ZAKyykftSSH4mP6u2JNqAl3mX8rPInmTUodS1bSo5b2JgzzIWiMwUUCzcCvqAbfa8KdKjEF&#xA;FMls7O0srWO0s4I7a1hXjFBEoREUdlVQABgS8r/5yc/8lxF/20IP+TcuW4ubKL5j0DzJeaHcSuka&#xA;SxT8RIp2NFNRwcbqfvHiMo1+hjqIgE0Ry/aPwfNyMOoliNjdT1nU4Ly9ubiEEC4ZmRNqry8aZbpc&#xA;Jx44xPQNGU8czIdSgU58fi65lMl2KvpP/nFP/lH9d/5i4v8Ak3lGbmwky782vLnmvVrOzuNFSC4m&#xA;sWkMlnKeHqxvxNI5OiuCg+1tmv1WkjnjUiRXJtwaiWI2Hi3lz8svOfmPzaNQbT5NKtbe4jeeS9Uo&#xA;3KEryVFArIaqfiG3uMv0uPwsQgd6as8/EmZDq+qoPW4fvaV7eP05NiqYq7FWmXkpWpFe42OKvI5/&#xA;+cc9BuNZiln1O6l0KCrQ6U5q6sxFVFwT6np0UAKdx/NkceOMCTEUZc2U5ykACbAetQxJDEkSV4IA&#xA;qgmuw2GSYr8VdirsVdirsVdirsVeCf8AQqGn/wDUxy/9Iq/9Vcu8byZcTv8AoVDT/wDqY5f+kVf+&#xA;quPjeS8Tv+hUNP8A+pjl/wCkVf8Aqrj43kvE7/oVDT/+pjl/6RV/6q4+N5LxJ/5E/wCcfLPyl5rs&#xA;fMEetyXb2Xq0t2t1jDerC8P2hI1KepXpglksUpkzTUvzP8gaZfzWF/rltb3lu3CeBy3JW8DtkBAo&#xA;pDf8rh/LH/qYrT/gm/ph4D3LRd/yuH8sf+pitP8Agm/pjwHuWi7/AJXD+WP/AFMVp/wTf0x4D3LR&#xA;d/yuH8sf+pitP+Cb+mPAe5aK+H82/wAtp5o4YvMFq8srBI0DNUsxoANu5wcBWkj/ADpfyPq2lReW&#xA;fMHmKLQrhnjv0Lr6jsi+pGPhquxPLv2yWO+YCAaeN/8AKtPyf/8ALjQ/9I3/ADflvFLuTxtL+WX5&#xA;Or0/MaEf9G//ADfjxS7l42/+Vafk/wD+XHh/6R/+b8eKXcvG7/lWn5P/APlx4f8ApH/5vx4pdy8b&#xA;0b8rtY/KjyFYX1pD5ztr8Xsqyl3QxceK8aUBeuQmJS6IMrexWV5aX9lBe2kizWl1Gk1vKv2XjkUM&#xA;jD2KmuUlVRIo0rxUCvXFV2KuxV2KuxV2KuxVZI5Gy9fcgCp2APfc+2EBBKU/p+x/xD9R+uRcfT9M&#xA;pzWn1jlX0+v2+G/Hwy7w/wB3xf0v0NHifveH+j+lOcoch2KuxV2KuxV2KuxV2KuxV2Kviv8AOAFv&#xA;zP8AMIHU3ZA/4Fcy4fS2BW1fyy0f5faRfGBluxJIJ24fEsXORlqetDyGaLTa29dkx36aHXrQtzp4&#xA;f3MZMIKMFDEfCSQD8uub+3DprFDsVTDy7/ykGmf8xcH/ACcXE8kPTf8AnKr/AMmFp/8A2yIf+om4&#xA;yGDk0SeM5cxdirYBJoBU4qzPyH5Wu9Rh1iWS3LRHTZxb8lBDTNxMVK96ioPjluKN37nF1OUR4f6z&#xA;Eru2ltp2hkQo67FW61ypyQX3N+XP/kvfK/8A2yLD/qGjzBnzLaGRZFLsVdirsVQt5fx2u70CAVck&#xA;0pXp4+HTv275ZDGZNWTII80ibz3aAkfVXNNqhhTMz+T5d7hfylHua/x5af8ALLJ/wS4/yfLvX+Uo&#xA;9xQWtedoJtJu444JI5DE/Bww2ND4YY6Ex3sMZdoCW1F82+c9a1ywij0y1uitpMzu60AKlHK0Ujtt&#xA;tjmJG17M9OIy9VervfV/lXVk1LSo5FRl9IIh5GpJ4Ak9/HMXPh4C5OnzDICe5OMoch2KuxV2KuxV&#xA;2KuxV2KuxV8x+ffImj3nnnWNXn163inN28jaY6oXJjNBGSZVPx8f5e+abU9s5YSliGGVcuLf5/T0&#xA;97ssOliYiRkPd+Cw/wA1pKmrWejR3kkGmTFT6buWiiMkhRmALfZFK05U98s7LzGWGWUgSyDrW8qF&#xA;0T+Pcw12IQyxiNon5DdHn8qfLxNf8YWn/ARf9lGY3+iLP/yjz+Z/4hv/ACUP54/Hxa/5VR5e/wCp&#xA;wtP+Ai/7KMf9EWf/AJR5/M/8Qv5KH88fj4u/5VR5e/6nC0/4CL/sox/0RZ/+UefzP/EL+Sh/PH4+&#xA;KJ038stCtdRtbqPzXazyQTRypAqRguUYMEFJ23alOmSh7QZ5EA6eYvzP/EMZaKAH1j8fFm3/ADkB&#xA;p/5e3PnKzfzHqdzZXw06JY4oFZlMXrzEMaQy78iw651elEOHc9Xn9RLKJegAj8ebzL9C/kr/ANX+&#xA;/wD+Ab/slzI4cfefx8GjxNR/NH4+Lv0L+Sv/AFf7/wD4Bv8Aslx4cfefx8F8TUfzR+Pivi0n8mYn&#xA;Dx+YL9XHQhG/7JcIjj7z+Pggz1B/hH4+Ktrv1S18uiTQ7uY26oIbe6JKu8LOKcxxT/K/ZGVZQOGw&#xA;nFKRnUko0TTPy1n02J9e1i7ttTqwliiVmUDkeJqIJeo/yscQhw7ndsyyzCXpAI/Hm+wfJSWUfk3Q&#xA;UsJGlsU060W1lfZmiECBGbZdytD0Ga/JXEa73NhfCL5pzkGTsVdirsVaKq1KitDUfPG1pr0Yv5F+&#xA;4YeIo4Q16MP8i/cMeIrwhBa1ZmfS7qCCJGkmidFJAoGZSAeh75KMyDbGUART5Z81+S/OOreYLfSr&#xA;bR5xqH7x5UYARIjsP3hm/uyhYNQ138K5lZcolu42DDKFgvqvSoXhsYYnQIyIqmnQkAA9cwybcsAB&#xA;F4EuxV2KuxV2KuxV2KuxV2Kvi382riW2/NbXLmIBnhvvUUNWhKcSOhB7eOZBgJ4zE9RTbA1RDH9f&#xA;8yvrM0dxJD6VwsfpuqklS3ItyHLcD4u5PzzE0Gh/LxMQbF2z1OY5ZAkVQSpa0+Lr7ZsGDeKuxVMP&#xA;Lv8AykGmf8xcH/JxcTyQ9N/5yq/8mFp//bIh/wCom4yGDk0SeM5cxdirjWhp17Yqng82cvLw0m4h&#xA;4vCEEEq1IYIxO433PLBKR4aafBqfEkReWSQu2ynseuCIpufd35c/+S98r/8AbIsP+oaPMOfMtgZF&#xA;kUuxV2KuxV2KuxV2KuxVb6UfPnxHLxxVdirsVdirsVdirsVdirsVdirsVeX+ZP8AlQP6dvf0/wDo&#xA;39Meofrvrc/U9Sgryp3ywcVbJ3S3/rGT/tU/8lMPrTu7/rGT/tU/8lMfWu7v+sZP+1T/AMlMfWu7&#xA;v+sZP+1T/wAlMfWu6tZf9C2/XIPqn6L+teon1fjz5epyHCnvXH1runv5gf8AKm/0zD/jb6j+lfq6&#xA;+h9b5c/q/N+NOP7PPngjxVswNMZ/6xf/AO1T/wAlMl60bO/6xf8A+1T/AMlMfWuzv+sX/wDtU/8A&#xA;JTH1rs1/1i9/2qP+SmPrXZv/AKxf/wC1T/yUx9a7PWdF/Rf6GsP0Tw/RX1eL9H+n9j6vwHpca/s8&#xA;KUyo82SMwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:33390f2a-89d7-ba45-a31a-6e55b53a9ffb</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:33390f2a-89d7-ba45-a31a-6e55b53a9ffb</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:ddd2da98-f41e-134f-8d36-21f1c6c04d51</stRef:instanceID>
            <stRef:documentID>xmp.did:ddd2da98-f41e-134f-8d36-21f1c6c04d51</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:33390f2a-89d7-ba45-a31a-6e55b53a9ffb</stEvt:instanceID>
                  <stEvt:when>2017-11-19T21:09:39+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>350.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Белый</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Черный</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Оттенки серого</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Цветовая группа 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=221 G=130 B=31</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>221</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>31</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=191 B=48</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>48</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=43 G=50 B=61</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>43</xmpG:red>
                           <xmpG:green>50</xmpG:green>
                           <xmpG:blue>61</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=104 G=111 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>104</xmpG:red>
                           <xmpG:green>111</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=59 G=66 B=79</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>59</xmpG:red>
                           <xmpG:green>66</xmpG:green>
                           <xmpG:blue>79</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=53 G=43 B=68</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>53</xmpG:red>
                           <xmpG:green>43</xmpG:green>
                           <xmpG:blue>68</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=64 G=51 B=79</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>64</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>79</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Цветовая группа 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=95 G=179 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>95</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=201 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>201</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=40 G=47 B=58</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>40</xmpG:red>
                           <xmpG:green>47</xmpG:green>
                           <xmpG:blue>58</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=104 G=111 B=122 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>104</xmpG:red>
                           <xmpG:green>111</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=81 G=89 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>81</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=59 G=66 B=79 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>59</xmpG:red>
                           <xmpG:green>66</xmpG:green>
                           <xmpG:blue>79</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=35 G=40 B=61</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>40</xmpG:green>
                           <xmpG:blue>61</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=50 B=76</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>50</xmpG:green>
                           <xmpG:blue>76</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
151.736 330.296 mo
53.4695 273.562 li
151.733 216.83 li
249.999 273.564 li
151.736 330.296 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0842908 .057557 .0689097 0 cmyk
f
146.734 123.622 mo
159.407 128.336 li
152.209 306.804 li
148.56 298.329 li
146.734 123.622 li
.787228 .642512 .490364 .524193 cmyk
f
152.208 145.242 mo
152.208 135.191 li
150.888 134.429 li
150.888 131.407 li
96.6433 100.089 li
96.6433 103.11 li
95.323 102.348 li
95.323 112.399 li
96.6433 113.161 li
96.6433 115.37 li
95.323 114.608 li
95.323 130.962 li
96.6433 131.725 li
96.6433 133.934 li
150.888 165.252 li
150.888 163.043 li
152.208 163.805 li
152.208 147.451 li
150.888 146.689 li
150.888 144.48 li
152.208 145.242 li
cp
.762356 .621912 .461616 .445838 cmyk
f
152.209 176.066 mo
95.323 143.223 li
95.323 133.172 li
152.209 166.015 li
152.209 176.066 li
cp
f
150.888 177.513 mo
96.6433 146.194 li
96.6433 143.985 li
150.888 175.303 li
150.888 177.513 li
cp
.814298 .671229 .505364 .569116 cmyk
f
150.888 196.076 mo
96.6433 164.758 li
96.6433 162.548 li
150.888 193.866 li
150.888 196.076 li
cp
f
120.778 156.172 mo
97.302 142.618 li
97.302 136.062 li
120.778 149.615 li
120.778 156.172 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
125.883 159.119 mo
122.919 157.408 li
122.919 150.852 li
125.883 152.563 li
125.883 159.119 li
cp
f
130.752 161.931 mo
127.788 160.219 li
127.788 153.663 li
130.752 155.374 li
130.752 161.931 li
cp
f
135.621 164.741 mo
132.657 163.03 li
132.657 156.474 li
135.621 158.186 li
135.621 164.741 li
cp
f
140.49 167.553 mo
137.527 165.842 li
137.527 159.285 li
140.49 160.996 li
140.49 167.553 li
cp
f
145.36 170.364 mo
142.396 168.653 li
142.396 162.097 li
145.36 163.808 li
145.36 170.364 li
cp
f
150.229 173.176 mo
147.265 171.464 li
147.265 164.908 li
150.229 166.619 li
150.229 173.176 li
cp
f
120.778 150.514 mo
97.302 136.96 li
97.302 136.062 li
120.778 149.615 li
120.778 150.514 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
125.883 153.461 mo
122.919 151.75 li
122.919 150.852 li
125.883 152.563 li
125.883 153.461 li
cp
f
130.752 156.273 mo
127.788 154.562 li
127.788 153.663 li
130.752 155.374 li
130.752 156.273 li
cp
f
135.621 159.084 mo
132.657 157.372 li
132.657 156.474 li
135.621 158.186 li
135.621 159.084 li
cp
f
140.49 161.896 mo
137.527 160.184 li
137.527 159.285 li
140.49 160.996 li
140.49 161.896 li
cp
f
145.36 164.706 mo
142.396 162.995 li
142.396 162.097 li
145.36 163.808 li
145.36 164.706 li
cp
f
150.229 167.518 mo
147.265 165.807 li
147.265 164.908 li
150.229 166.619 li
150.229 167.518 li
cp
f
100.409 142.656 mo
98.6365 141.633 li
98.6365 139.212 li
100.409 140.234 li
100.409 142.656 li
cp
f
103.581 144.487 mo
101.809 143.465 li
101.809 141.043 li
103.581 142.066 li
103.581 144.487 li
cp
f
106.754 146.319 mo
104.982 145.296 li
104.982 142.875 li
106.754 143.899 li
106.754 146.319 li
cp
f
109.927 148.151 mo
108.154 147.128 li
108.154 144.706 li
109.927 145.73 li
109.927 148.151 li
cp
f
113.099 149.983 mo
111.326 148.959 li
111.326 146.538 li
113.099 147.562 li
113.099 149.983 li
cp
f
116.271 151.815 mo
114.499 150.791 li
114.499 148.37 li
116.271 149.393 li
116.271 151.815 li
cp
f
119.444 153.646 mo
117.672 152.623 li
117.672 150.201 li
119.444 151.225 li
119.444 153.646 li
cp
f
152.209 194.629 mo
95.323 161.786 li
95.323 145.432 li
152.209 178.275 li
152.209 194.629 li
cp
.762356 .621912 .461616 .445838 cmyk
f
99.8538 153.856 mo
97.7102 152.617 li
97.7102 150.143 li
99.8538 151.38 li
99.8538 153.856 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
99.8538 152.355 mo
97.7102 151.117 li
97.7102 150.143 li
99.8538 151.38 li
99.8538 152.355 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
99.8538 157.463 mo
97.7102 156.225 li
97.7102 153.749 li
99.8538 154.987 li
99.8538 157.463 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
99.8538 155.962 mo
97.7102 154.725 li
97.7102 153.749 li
99.8538 154.987 li
99.8538 155.962 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
99.8538 161.07 mo
97.7102 159.832 li
97.7102 157.357 li
99.8538 158.595 li
99.8538 161.07 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
99.8538 159.569 mo
97.7102 158.332 li
97.7102 157.357 li
99.8538 158.595 li
99.8538 159.569 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
103.581 156.008 mo
101.437 154.77 li
101.437 152.294 li
103.581 153.532 li
103.581 156.008 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
103.581 154.507 mo
101.437 153.27 li
101.437 152.294 li
103.581 153.532 li
103.581 154.507 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
103.581 159.614 mo
101.437 158.377 li
101.437 155.901 li
103.581 157.14 li
103.581 159.614 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
103.581 158.114 mo
101.437 156.876 li
101.437 155.901 li
103.581 157.14 li
103.581 158.114 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
103.581 163.222 mo
101.437 161.984 li
101.437 159.509 li
103.581 160.746 li
103.581 163.222 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
103.581 161.722 mo
101.437 160.483 li
101.437 159.509 li
103.581 160.746 li
103.581 161.722 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
107.309 158.159 mo
105.165 156.922 li
105.165 154.446 li
107.309 155.684 li
107.309 158.159 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
107.309 156.659 mo
105.165 155.421 li
105.165 154.446 li
107.309 155.684 li
107.309 156.659 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
107.309 161.767 mo
105.165 160.529 li
105.165 158.054 li
107.309 159.291 li
107.309 161.767 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
107.309 160.266 mo
105.165 159.028 li
105.165 158.054 li
107.309 159.291 li
107.309 160.266 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
107.309 165.374 mo
105.165 164.136 li
105.165 161.661 li
107.309 162.899 li
107.309 165.374 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
107.309 163.873 mo
105.165 162.636 li
105.165 161.661 li
107.309 162.899 li
107.309 163.873 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
111.036 160.312 mo
108.892 159.073 li
108.892 156.598 li
111.036 157.836 li
111.036 160.312 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
111.036 158.811 mo
108.892 157.573 li
108.892 156.598 li
111.036 157.836 li
111.036 158.811 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
111.036 163.919 mo
108.892 162.681 li
108.892 160.205 li
111.036 161.443 li
111.036 163.919 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
111.036 162.418 mo
108.892 161.181 li
108.892 160.205 li
111.036 161.443 li
111.036 162.418 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
111.036 167.526 mo
108.892 166.288 li
108.892 163.813 li
111.036 165.051 li
111.036 167.526 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
111.036 166.025 mo
108.892 164.787 li
108.892 163.813 li
111.036 165.051 li
111.036 166.025 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
114.763 162.463 mo
112.619 161.226 li
112.619 158.75 li
114.763 159.988 li
114.763 162.463 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
114.763 160.963 mo
112.619 159.725 li
112.619 158.75 li
114.763 159.988 li
114.763 160.963 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
114.763 166.07 mo
112.619 164.833 li
112.619 162.358 li
114.763 163.595 li
114.763 166.07 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
114.763 164.57 mo
112.619 163.332 li
112.619 162.358 li
114.763 163.595 li
114.763 164.57 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
114.763 169.678 mo
112.619 168.441 li
112.619 165.965 li
114.763 167.202 li
114.763 169.678 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
114.763 168.178 mo
112.619 166.94 li
112.619 165.965 li
114.763 167.202 li
114.763 168.178 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
128.589 167.97 mo
116.271 160.858 li
116.271 170.549 li
128.589 177.66 li
128.589 167.97 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
128.589 167.97 mo
116.271 160.858 li
116.271 161.833 li
128.589 168.945 li
128.589 167.97 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
142.752 176.148 mo
130.435 169.036 li
130.435 178.726 li
142.752 185.837 li
142.752 176.148 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
142.752 176.148 mo
130.435 169.036 li
130.435 170.011 li
142.752 177.122 li
142.752 176.148 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
150.229 180.464 mo
144.598 177.213 li
144.598 186.903 li
150.229 190.154 li
150.229 180.464 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
150.229 180.464 mo
144.598 177.213 li
144.598 178.188 li
150.229 181.44 li
150.229 180.464 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
119.958 170.525 mo
117.099 168.875 li
117.099 170.122 li
119.958 171.773 li
119.958 170.525 li
cp
f
119.982 168.649 mo
117.124 166.999 li
117.124 168.245 li
119.982 169.896 li
119.982 168.649 li
cp
f
119.982 166.759 mo
117.124 165.108 li
117.124 166.355 li
119.982 168.005 li
119.982 166.759 li
cp
f
119.982 164.868 mo
117.124 163.218 li
117.124 164.465 li
119.982 166.114 li
119.982 164.868 li
cp
f
123.818 172.754 mo
120.959 171.104 li
120.959 172.351 li
123.818 174.001 li
123.818 172.754 li
cp
f
123.818 170.863 mo
120.959 169.213 li
120.959 170.46 li
123.818 172.11 li
123.818 170.863 li
cp
f
127.678 174.983 mo
124.82 173.332 li
124.82 174.579 li
127.678 176.23 li
127.678 174.983 li
cp
f
127.678 173.092 mo
124.82 171.441 li
124.82 172.689 li
127.678 174.339 li
127.678 173.092 li
cp
f
127.678 171.201 mo
124.82 169.552 li
124.82 170.798 li
127.678 172.448 li
127.678 171.201 li
cp
f
134.163 178.727 mo
131.304 177.076 li
131.304 178.323 li
134.163 179.974 li
134.163 178.727 li
cp
f
138.023 180.955 mo
135.164 179.305 li
135.164 180.552 li
138.023 182.202 li
138.023 180.955 li
cp
f
138.023 179.065 mo
135.164 177.414 li
135.164 178.661 li
138.023 180.312 li
138.023 179.065 li
cp
f
138.023 177.174 mo
135.164 175.524 li
135.164 176.771 li
138.023 178.421 li
138.023 177.174 li
cp
f
141.883 183.184 mo
139.025 181.533 li
139.025 182.78 li
141.883 184.431 li
141.883 183.184 li
cp
f
141.883 181.293 mo
139.025 179.643 li
139.025 180.89 li
141.883 182.54 li
141.883 181.293 li
cp
f
141.883 179.402 mo
139.025 177.753 li
139.025 178.999 li
141.883 180.65 li
141.883 179.402 li
cp
f
148.843 187.202 mo
145.985 185.552 li
145.985 186.799 li
148.843 188.449 li
148.843 187.202 li
cp
f
148.843 185.312 mo
145.985 183.661 li
145.985 184.908 li
148.843 186.559 li
148.843 185.312 li
cp
f
148.843 183.421 mo
145.985 181.771 li
145.985 183.018 li
148.843 184.668 li
148.843 183.421 li
cp
f
141.883 177.513 mo
139.025 175.862 li
139.025 177.108 li
141.883 178.759 li
141.883 177.513 li
cp
f
152.208 206.889 mo
152.208 196.838 li
95.323 163.995 li
95.323 174.046 li
96.6433 174.809 li
96.6433 177.018 li
95.323 176.256 li
95.323 192.609 li
96.6433 193.372 li
96.6433 195.581 li
150.888 226.9 li
150.888 224.691 li
152.208 225.452 li
152.208 209.099 li
150.888 208.336 li
150.888 206.127 li
152.208 206.889 li
cp
.762356 .621912 .461616 .445838 cmyk
f
152.209 237.713 mo
95.323 204.87 li
95.323 194.818 li
152.209 227.662 li
152.209 237.713 li
cp
f
150.888 239.16 mo
96.6433 207.842 li
96.6433 205.632 li
150.888 236.95 li
150.888 239.16 li
cp
.814298 .671229 .505364 .569116 cmyk
f
150.888 257.723 mo
96.6433 226.405 li
96.6433 224.195 li
150.888 255.514 li
150.888 257.723 li
cp
f
120.778 217.819 mo
97.302 204.266 li
97.302 197.709 li
120.778 211.263 li
120.778 217.819 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
125.883 220.767 mo
122.919 219.056 li
122.919 212.499 li
125.883 214.21 li
125.883 220.767 li
cp
f
130.752 223.578 mo
127.788 221.866 li
127.788 215.31 li
130.752 217.022 li
130.752 223.578 li
cp
f
135.621 226.389 mo
132.657 224.678 li
132.657 218.121 li
135.621 219.832 li
135.621 226.389 li
cp
f
140.49 229.2 mo
137.527 227.489 li
137.527 220.933 li
140.49 222.644 li
140.49 229.2 li
cp
f
145.36 232.012 mo
142.396 230.301 li
142.396 223.744 li
145.36 225.455 li
145.36 232.012 li
cp
f
150.229 234.823 mo
147.265 233.111 li
147.265 226.555 li
150.229 228.267 li
150.229 234.823 li
cp
f
120.778 212.161 mo
97.302 198.608 li
97.302 197.709 li
120.778 211.263 li
120.778 212.161 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
125.883 215.108 mo
122.919 213.398 li
122.919 212.499 li
125.883 214.21 li
125.883 215.108 li
cp
f
130.752 217.92 mo
127.788 216.209 li
127.788 215.31 li
130.752 217.022 li
130.752 217.92 li
cp
f
135.621 220.732 mo
132.657 219.02 li
132.657 218.121 li
135.621 219.832 li
135.621 220.732 li
cp
f
140.49 223.542 mo
137.527 221.831 li
137.527 220.933 li
140.49 222.644 li
140.49 223.542 li
cp
f
145.36 226.354 mo
142.396 224.643 li
142.396 223.744 li
145.36 225.455 li
145.36 226.354 li
cp
f
150.229 229.165 mo
147.265 227.454 li
147.265 226.555 li
150.229 228.267 li
150.229 229.165 li
cp
f
100.409 204.304 mo
98.6365 203.28 li
98.6365 200.858 li
100.409 201.882 li
100.409 204.304 li
cp
f
103.581 206.135 mo
101.809 205.111 li
101.809 202.691 li
103.581 203.714 li
103.581 206.135 li
cp
f
106.754 207.967 mo
104.982 206.943 li
104.982 204.523 li
106.754 205.546 li
106.754 207.967 li
cp
f
109.927 209.799 mo
108.154 208.775 li
108.154 206.354 li
109.927 207.377 li
109.927 209.799 li
cp
f
113.099 211.63 mo
111.326 210.607 li
111.326 208.186 li
113.099 209.209 li
113.099 211.63 li
cp
f
116.271 213.462 mo
114.499 212.439 li
114.499 210.018 li
116.271 211.04 li
116.271 213.462 li
cp
f
119.444 215.293 mo
117.672 214.27 li
117.672 211.849 li
119.444 212.872 li
119.444 215.293 li
cp
f
152.209 256.276 mo
95.323 223.434 li
95.323 207.079 li
152.209 239.922 li
152.209 256.276 li
cp
.762356 .621912 .461616 .445838 cmyk
f
99.8538 215.503 mo
97.7102 214.265 li
97.7102 211.789 li
99.8538 213.027 li
99.8538 215.503 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
99.8538 214.002 mo
97.7102 212.765 li
97.7102 211.789 li
99.8538 213.027 li
99.8538 214.002 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
99.8538 219.11 mo
97.7102 217.872 li
97.7102 215.397 li
99.8538 216.635 li
99.8538 219.11 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
99.8538 217.609 mo
97.7102 216.372 li
97.7102 215.397 li
99.8538 216.635 li
99.8538 217.609 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
99.8538 222.717 mo
97.7102 221.48 li
97.7102 219.004 li
99.8538 220.242 li
99.8538 222.717 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
99.8538 221.217 mo
97.7102 219.979 li
97.7102 219.004 li
99.8538 220.242 li
99.8538 221.217 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
103.581 217.654 mo
101.437 216.417 li
101.437 213.941 li
103.581 215.18 li
103.581 217.654 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
103.581 216.154 mo
101.437 214.916 li
101.437 213.941 li
103.581 215.18 li
103.581 216.154 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
103.581 221.262 mo
101.437 220.025 li
101.437 217.549 li
103.581 218.786 li
103.581 221.262 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
103.581 219.762 mo
101.437 218.524 li
101.437 217.549 li
103.581 218.786 li
103.581 219.762 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
103.581 224.869 mo
101.437 223.632 li
101.437 221.156 li
103.581 222.394 li
103.581 224.869 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
103.581 223.369 mo
101.437 222.131 li
101.437 221.156 li
103.581 222.394 li
103.581 223.369 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
107.309 219.807 mo
105.165 218.569 li
105.165 216.094 li
107.309 217.331 li
107.309 219.807 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
107.309 218.307 mo
105.165 217.068 li
105.165 216.094 li
107.309 217.331 li
107.309 218.307 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
107.309 223.414 mo
105.165 222.176 li
105.165 219.701 li
107.309 220.939 li
107.309 223.414 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
107.309 221.913 mo
105.165 220.676 li
105.165 219.701 li
107.309 220.939 li
107.309 221.913 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
107.309 227.022 mo
105.165 225.783 li
105.165 223.308 li
107.309 224.546 li
107.309 227.022 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
107.309 225.521 mo
105.165 224.283 li
105.165 223.308 li
107.309 224.546 li
107.309 225.521 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
111.036 221.959 mo
108.892 220.721 li
108.892 218.245 li
111.036 219.483 li
111.036 221.959 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
111.036 220.458 mo
108.892 219.221 li
108.892 218.245 li
111.036 219.483 li
111.036 220.458 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
111.036 225.566 mo
108.892 224.328 li
108.892 221.853 li
111.036 223.091 li
111.036 225.566 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
111.036 224.066 mo
108.892 222.828 li
108.892 221.853 li
111.036 223.091 li
111.036 224.066 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
111.036 229.173 mo
108.892 227.936 li
108.892 225.46 li
111.036 226.698 li
111.036 229.173 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
111.036 227.673 mo
108.892 226.435 li
108.892 225.46 li
111.036 226.698 li
111.036 227.673 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
114.763 224.11 mo
112.619 222.873 li
112.619 220.398 li
114.763 221.635 li
114.763 224.11 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
114.763 222.61 mo
112.619 221.372 li
112.619 220.398 li
114.763 221.635 li
114.763 222.61 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
114.763 227.718 mo
112.619 226.481 li
112.619 224.005 li
114.763 225.242 li
114.763 227.718 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
114.763 226.218 mo
112.619 224.98 li
112.619 224.005 li
114.763 225.242 li
114.763 226.218 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
114.763 231.325 mo
112.619 230.088 li
112.619 227.612 li
114.763 228.85 li
114.763 231.325 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
114.763 229.824 mo
112.619 228.587 li
112.619 227.612 li
114.763 228.85 li
114.763 229.824 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
128.589 229.617 mo
116.271 222.506 li
116.271 232.196 li
128.589 239.308 li
128.589 229.617 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
128.589 229.617 mo
116.271 222.506 li
116.271 223.481 li
128.589 230.592 li
128.589 229.617 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
142.752 237.795 mo
130.435 230.684 li
130.435 240.373 li
142.752 247.484 li
142.752 237.795 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
142.752 237.795 mo
130.435 230.684 li
130.435 231.658 li
142.752 238.77 li
142.752 237.795 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
150.229 242.111 mo
144.598 238.86 li
144.598 248.551 li
150.229 251.802 li
150.229 242.111 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
150.229 242.111 mo
144.598 238.86 li
144.598 239.835 li
150.229 243.086 li
150.229 242.111 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
119.958 232.173 mo
117.099 230.523 li
117.099 231.77 li
119.958 233.42 li
119.958 232.173 li
cp
f
119.982 230.296 mo
117.124 228.646 li
117.124 229.893 li
119.982 231.543 li
119.982 230.296 li
cp
f
119.982 228.405 mo
117.124 226.756 li
117.124 228.002 li
119.982 229.652 li
119.982 228.405 li
cp
f
119.982 226.516 mo
117.124 224.865 li
117.124 226.111 li
119.982 227.762 li
119.982 226.516 li
cp
f
123.818 234.401 mo
120.959 232.751 li
120.959 233.998 li
123.818 235.649 li
123.818 234.401 li
cp
f
123.818 232.511 mo
120.959 230.86 li
120.959 232.108 li
123.818 233.758 li
123.818 232.511 li
cp
f
127.678 236.63 mo
124.82 234.98 li
124.82 236.227 li
127.678 237.877 li
127.678 236.63 li
cp
f
127.678 234.739 mo
124.82 233.089 li
124.82 234.336 li
127.678 235.986 li
127.678 234.739 li
cp
f
127.678 232.849 mo
124.82 231.198 li
124.82 232.445 li
127.678 234.096 li
127.678 232.849 li
cp
f
134.163 240.374 mo
131.304 238.724 li
131.304 239.971 li
134.163 241.621 li
134.163 240.374 li
cp
f
138.023 242.603 mo
135.164 240.952 li
135.164 242.199 li
138.023 243.85 li
138.023 242.603 li
cp
f
138.023 240.712 mo
135.164 239.062 li
135.164 240.309 li
138.023 241.959 li
138.023 240.712 li
cp
f
138.023 238.821 mo
135.164 237.171 li
135.164 238.418 li
138.023 240.068 li
138.023 238.821 li
cp
f
141.883 244.831 mo
139.025 243.181 li
139.025 244.428 li
141.883 246.078 li
141.883 244.831 li
cp
f
141.883 242.941 mo
139.025 241.29 li
139.025 242.537 li
141.883 244.188 li
141.883 242.941 li
cp
f
141.883 241.05 mo
139.025 239.4 li
139.025 240.647 li
141.883 242.297 li
141.883 241.05 li
cp
f
148.843 248.85 mo
145.985 247.199 li
145.985 248.446 li
148.843 250.097 li
148.843 248.85 li
cp
f
148.843 246.959 mo
145.985 245.309 li
145.985 246.556 li
148.843 248.206 li
148.843 246.959 li
cp
f
148.843 245.068 mo
145.985 243.418 li
145.985 244.665 li
148.843 246.316 li
148.843 245.068 li
cp
f
141.883 239.159 mo
139.025 237.51 li
139.025 238.756 li
141.883 240.406 li
141.883 239.159 li
cp
f
152.208 268.536 mo
152.208 258.485 li
95.323 225.643 li
95.323 235.693 li
96.6433 236.456 li
96.6433 238.582 li
95.323 237.903 li
95.323 254.257 li
96.6433 255.02 li
96.6433 257.229 li
150.888 288.547 li
150.888 286.338 li
152.208 287.1 li
152.208 270.746 li
150.888 269.9 li
150.888 267.775 li
152.208 268.536 li
cp
.762356 .621912 .461616 .445838 cmyk
f
152.209 306.804 mo
95.323 273.961 li
95.323 256.466 li
152.209 289.31 li
152.209 306.804 li
f
152.209 132.17 mo
95.323 99.3272 li
95.323 89.0782 li
152.209 121.922 li
152.209 132.17 li
cp
f
100.797 274.362 mo
98.9714 273.309 li
98.9714 261.332 li
100.797 262.386 li
100.797 274.362 li
.814298 .671229 .505364 .569116 cmyk
f
103.923 276.167 mo
102.097 275.112 li
102.097 263.136 li
103.923 264.191 li
103.923 276.167 li
f
107.048 277.971 mo
105.222 276.917 li
105.222 264.94 li
107.048 265.994 li
107.048 277.971 li
f
114.635 282.352 mo
112.809 281.297 li
112.809 269.32 li
114.635 270.375 li
114.635 282.352 li
f
117.76 284.155 mo
115.934 283.102 li
115.934 271.125 li
117.76 272.179 li
117.76 284.155 li
f
120.885 285.96 mo
119.06 284.906 li
119.06 272.93 li
120.885 273.983 li
120.885 285.96 li
f
128.472 290.34 mo
126.646 289.286 li
126.646 277.31 li
128.472 278.363 li
128.472 290.34 li
f
131.597 292.145 mo
129.772 291.091 li
129.772 279.114 li
131.597 280.168 li
131.597 292.145 li
f
134.722 293.949 mo
132.897 292.896 li
132.897 280.919 li
134.722 281.973 li
134.722 293.949 li
f
142.309 298.329 mo
140.484 297.275 li
140.484 285.299 li
142.309 286.353 li
142.309 298.329 li
f
145.434 300.134 mo
143.609 299.08 li
143.609 287.103 li
145.434 288.157 li
145.434 300.134 li
f
148.56 301.939 mo
146.734 300.884 li
146.734 288.907 li
148.56 289.961 li
148.56 301.939 li
f
152.209 294.418 mo
148.56 292.311 li
148.56 289.962 li
152.209 292.068 li
152.209 294.418 li
146.734 291.257 mo
145.434 290.507 li
145.434 288.157 li
144.824 287.805 li
146.734 288.908 li
146.734 291.257 li
143.609 289.453 mo
142.309 288.702 li
142.309 286.353 li
140.484 285.299 li
140.484 287.648 li
134.722 284.322 li
134.722 281.973 li
132.897 280.919 li
132.897 283.268 li
131.597 282.517 li
131.597 280.168 li
129.772 279.114 li
129.772 281.464 li
128.472 280.713 li
128.472 278.363 li
143.609 287.103 li
143.609 289.453 li
126.646 279.659 mo
120.885 276.333 li
120.885 273.983 li
119.06 272.93 li
119.06 275.279 li
117.76 274.529 li
117.76 272.179 li
126.822 277.411 li
126.646 277.31 li
126.646 279.659 li
115.934 273.475 mo
114.635 272.724 li
114.635 270.375 li
112.809 269.32 li
112.809 271.67 li
107.048 268.344 li
107.048 265.994 li
116.55 271.48 li
115.934 271.125 li
115.934 273.475 li
105.222 267.29 mo
103.923 266.539 li
103.923 264.191 li
102.097 263.136 li
102.097 265.485 li
100.797 264.735 li
100.797 262.386 li
98.9714 261.332 li
98.9714 263.681 li
95.323 261.574 li
95.323 259.225 li
106.277 265.549 li
105.222 264.94 li
105.222 267.29 li
.797971 .654963 .48838 .522667 cmyk
f
100.797 264.735 mo
98.9714 263.681 li
98.9714 261.332 li
100.797 262.386 li
100.797 264.735 li
.814298 .671229 .505364 .569116 cmyk
f
103.923 266.539 mo
102.097 265.485 li
102.097 263.136 li
103.923 264.191 li
103.923 266.539 li
f
107.048 268.344 mo
105.222 267.29 li
105.222 264.94 li
106.277 265.549 li
107.048 265.994 li
107.048 268.344 li
f
114.635 272.724 mo
112.809 271.67 li
112.809 269.32 li
114.635 270.375 li
114.635 272.724 li
f
117.76 274.529 mo
115.934 273.475 li
115.934 271.125 li
116.55 271.48 li
117.76 272.179 li
117.76 274.529 li
f
120.885 276.333 mo
119.06 275.279 li
119.06 272.93 li
120.885 273.983 li
120.885 276.333 li
f
128.472 280.713 mo
126.646 279.659 li
126.646 277.31 li
126.822 277.411 li
128.472 278.364 li
128.472 280.713 li
f
131.597 282.517 mo
129.772 281.464 li
129.772 279.114 li
131.597 280.168 li
131.597 282.517 li
f
134.722 284.322 mo
132.897 283.268 li
132.897 280.919 li
134.722 281.973 li
134.722 284.322 li
f
142.309 288.702 mo
140.484 287.648 li
140.484 285.299 li
142.309 286.353 li
142.309 288.702 li
f
145.434 290.507 mo
143.609 289.453 li
143.609 287.103 li
144.824 287.805 li
145.434 288.157 li
145.434 290.507 li
f
148.56 292.311 mo
146.734 291.257 li
146.734 288.907 li
148.56 289.962 li
148.56 292.311 li
f
150.664 124.195 mo
96.8674 93.1358 li
96.8674 91.6768 li
150.664 122.735 li
150.664 124.195 li
cp
f
150.664 126.884 mo
96.8674 95.8243 li
96.8674 94.3653 li
150.664 125.424 li
150.664 126.884 li
cp
f
150.664 129.572 mo
96.8674 98.5128 li
96.8674 97.0538 li
150.664 128.112 li
150.664 129.572 li
cp
f
152.209 121.922 mo
152.209 306.804 li
209.094 273.961 li
209.094 261.575 li
209.094 89.0782 li
152.209 121.922 li
cp
.787228 .642512 .490364 .524193 cmyk
f
209.094 89.0792 mo
152.208 56.2364 li
95.3235 89.0782 li
152.209 121.922 li
209.094 89.0792 li
cp
.598474 .456001 .367803 .224399 cmyk
f
96.6433 257.229 mo
95.323 256.466 li
96.6433 255.704 li
96.6433 255.855 li
96.6433 257.229 li
cp
f
96.6433 238.665 mo
95.323 237.903 li
96.6433 237.141 li
96.6433 237.291 li
96.6433 238.665 li
cp
f
96.6433 226.405 mo
95.323 225.643 li
96.6433 224.88 li
96.6433 225.03 li
96.6433 226.405 li
cp
f
96.6433 207.842 mo
95.323 207.079 li
96.6433 206.316 li
96.6433 206.467 li
96.6433 207.842 li
cp
f
96.6433 195.581 mo
95.323 194.818 li
96.6433 194.057 li
96.6433 194.207 li
96.6433 195.581 li
cp
f
96.6433 177.018 mo
95.323 176.256 li
96.6433 175.493 li
96.6433 175.644 li
96.6433 177.018 li
cp
f
96.6433 164.758 mo
95.323 163.995 li
96.6433 163.233 li
96.6433 163.383 li
96.6433 164.758 li
cp
f
96.6433 146.194 mo
95.323 145.432 li
96.6433 144.67 li
96.6433 144.819 li
96.6433 146.194 li
cp
f
96.6433 133.934 mo
95.323 133.172 li
96.6433 132.409 li
96.6433 132.56 li
96.6433 133.934 li
cp
f
96.6433 115.37 mo
95.323 114.608 li
96.6433 113.846 li
96.6433 113.996 li
96.6433 115.37 li
cp
f
96.6433 103.11 mo
95.323 102.348 li
96.6433 101.586 li
96.6433 101.735 li
96.6433 103.11 li
cp
f
209.094 102.354 mo
152.208 135.196 li
152.208 132.175 li
209.094 99.3321 li
209.094 102.354 li
cp
.814298 .671229 .505364 .569116 cmyk
f
209.094 114.608 mo
152.208 147.451 li
152.208 145.265 li
209.094 112.422 li
209.094 114.608 li
cp
f
209.094 133.041 mo
152.208 165.884 li
152.208 163.698 li
209.094 130.856 li
209.094 133.041 li
cp
f
209.094 163.802 mo
152.208 196.645 li
152.208 193.623 li
209.094 160.78 li
209.094 163.802 li
cp
f
209.094 176.057 mo
152.208 208.9 li
152.208 206.713 li
209.094 173.87 li
209.094 176.057 li
cp
f
209.094 194.489 mo
152.208 227.332 li
152.208 225.147 li
209.094 192.304 li
209.094 194.489 li
cp
f
209.094 225.25 mo
152.208 258.093 li
152.208 255.071 li
209.094 222.229 li
209.094 225.25 li
cp
f
209.094 237.505 mo
152.208 270.348 li
152.208 268.161 li
209.094 235.318 li
209.094 237.505 li
cp
f
209.094 255.938 mo
152.208 288.781 li
152.208 286.595 li
209.094 253.752 li
209.094 255.938 li
cp
f
162.751 181.534 mo
161.081 182.498 li
161.081 167.384 li
162.751 166.42 li
162.751 181.534 li
cp
.826596 .685328 .51046 .591333 cmyk
f
167.531 178.775 mo
165.862 179.738 li
165.862 164.624 li
167.531 163.66 li
167.531 178.775 li
cp
f
172.312 176.014 mo
170.642 176.978 li
170.642 161.864 li
172.312 160.9 li
172.312 176.014 li
cp
f
177.092 173.254 mo
175.423 174.218 li
175.423 159.105 li
177.092 158.141 li
177.092 173.254 li
cp
f
181.873 170.494 mo
180.203 171.458 li
180.203 156.344 li
181.873 155.38 li
181.873 170.494 li
cp
f
186.653 167.734 mo
184.984 168.698 li
184.984 153.584 li
186.653 152.62 li
186.653 167.734 li
cp
f
191.433 164.974 mo
189.764 165.938 li
189.764 150.824 li
191.433 149.86 li
191.433 164.974 li
cp
f
196.214 162.214 mo
194.545 163.178 li
194.545 148.065 li
196.214 147.101 li
196.214 162.214 li
cp
f
200.994 159.454 mo
199.325 160.418 li
199.325 145.304 li
200.994 144.34 li
200.994 159.454 li
cp
f
250.001 387.029 mo
151.736 330.296 li
249.999 273.564 li
348.264 330.297 li
250.001 387.029 li
.0842908 .057557 .0689097 0 cmyk
f
245 180.356 mo
257.674 185.07 li
250.474 363.537 li
246.825 355.064 li
245 180.356 li
.814298 .671229 .505364 .569116 cmyk
f
250.474 201.976 mo
193.589 169.133 li
193.589 159.082 li
250.474 191.925 li
250.474 201.976 li
cp
.762356 .621912 .461616 .445838 cmyk
f
249.154 203.423 mo
194.909 172.105 li
194.909 169.896 li
249.154 201.213 li
249.154 203.423 li
cp
.814298 .671229 .505364 .569116 cmyk
f
249.154 191.162 mo
194.909 159.844 li
194.909 156.823 li
249.154 188.142 li
249.154 191.162 li
cp
f
249.154 221.986 mo
194.909 190.668 li
194.909 188.458 li
249.154 219.776 li
249.154 221.986 li
cp
f
219.044 182.082 mo
195.568 168.528 li
195.568 161.972 li
219.044 175.525 li
219.044 182.082 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
224.149 185.029 mo
221.185 183.318 li
221.185 176.762 li
224.149 178.473 li
224.149 185.029 li
cp
f
229.018 187.841 mo
226.054 186.129 li
226.054 179.573 li
229.018 181.284 li
229.018 187.841 li
cp
f
233.887 190.651 mo
230.924 188.941 li
230.924 182.384 li
233.887 184.096 li
233.887 190.651 li
cp
f
238.757 193.463 mo
235.793 191.752 li
235.793 185.195 li
238.757 186.906 li
238.757 193.463 li
cp
f
243.626 196.275 mo
240.662 194.564 li
240.662 188.007 li
243.626 189.718 li
243.626 196.275 li
cp
f
248.495 199.086 mo
245.531 197.374 li
245.531 190.818 li
248.495 192.529 li
248.495 199.086 li
cp
f
219.044 176.424 mo
195.568 162.87 li
195.568 161.972 li
219.044 175.525 li
219.044 176.424 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
224.149 179.371 mo
221.185 177.66 li
221.185 176.762 li
224.149 178.473 li
224.149 179.371 li
cp
f
229.018 182.183 mo
226.054 180.472 li
226.054 179.573 li
229.018 181.284 li
229.018 182.183 li
cp
f
233.887 184.994 mo
230.924 183.282 li
230.924 182.384 li
233.887 184.096 li
233.887 184.994 li
cp
f
238.757 187.806 mo
235.793 186.094 li
235.793 185.195 li
238.757 186.906 li
238.757 187.806 li
cp
f
243.626 190.616 mo
240.662 188.905 li
240.662 188.007 li
243.626 189.718 li
243.626 190.616 li
cp
f
248.495 193.428 mo
245.531 191.717 li
245.531 190.818 li
248.495 192.529 li
248.495 193.428 li
cp
f
198.675 168.566 mo
196.902 167.543 li
196.902 165.122 li
198.675 166.145 li
198.675 168.566 li
cp
f
201.847 170.398 mo
200.075 169.375 li
200.075 166.953 li
201.847 167.977 li
201.847 170.398 li
cp
f
205.02 172.23 mo
203.247 171.206 li
203.247 168.785 li
205.02 169.809 li
205.02 172.23 li
cp
f
208.192 174.062 mo
206.42 173.038 li
206.42 170.616 li
208.192 171.64 li
208.192 174.062 li
cp
f
211.365 175.893 mo
209.593 174.869 li
209.593 172.448 li
211.365 173.472 li
211.365 175.893 li
cp
f
214.537 177.725 mo
212.765 176.701 li
212.765 174.28 li
214.537 175.303 li
214.537 177.725 li
cp
f
217.71 179.556 mo
215.937 178.533 li
215.937 176.111 li
217.71 177.135 li
217.71 179.556 li
cp
f
250.474 220.539 mo
193.589 187.696 li
193.589 171.342 li
250.474 204.185 li
250.474 220.539 li
cp
.762356 .621912 .461616 .445838 cmyk
f
198.12 179.766 mo
195.976 178.527 li
195.976 176.053 li
198.12 177.29 li
198.12 179.766 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 178.265 mo
195.976 177.027 li
195.976 176.053 li
198.12 177.29 li
198.12 178.265 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.12 183.373 mo
195.976 182.135 li
195.976 179.659 li
198.12 180.898 li
198.12 183.373 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 181.872 mo
195.976 180.635 li
195.976 179.659 li
198.12 180.898 li
198.12 181.872 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.12 186.981 mo
195.976 185.742 li
195.976 183.267 li
198.12 184.505 li
198.12 186.981 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 185.48 mo
195.976 184.242 li
195.976 183.267 li
198.12 184.505 li
198.12 185.48 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 181.918 mo
199.703 180.68 li
199.703 178.204 li
201.847 179.442 li
201.847 181.918 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 180.417 mo
199.703 179.18 li
199.703 178.204 li
201.847 179.442 li
201.847 180.417 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 185.525 mo
199.703 184.287 li
199.703 181.812 li
201.847 183.05 li
201.847 185.525 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 184.025 mo
199.703 182.786 li
199.703 181.812 li
201.847 183.05 li
201.847 184.025 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 189.132 mo
199.703 187.895 li
199.703 185.419 li
201.847 186.656 li
201.847 189.132 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 187.632 mo
199.703 186.394 li
199.703 185.419 li
201.847 186.656 li
201.847 187.632 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 184.069 mo
203.431 182.832 li
203.431 180.357 li
205.574 181.594 li
205.574 184.069 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 182.569 mo
203.431 181.331 li
203.431 180.357 li
205.574 181.594 li
205.574 182.569 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 187.677 mo
203.431 186.44 li
203.431 183.964 li
205.574 185.201 li
205.574 187.677 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 186.176 mo
203.431 184.939 li
203.431 183.964 li
205.574 185.201 li
205.574 186.176 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 191.284 mo
203.431 190.046 li
203.431 187.571 li
205.574 188.809 li
205.574 191.284 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 189.783 mo
203.431 188.546 li
203.431 187.571 li
205.574 188.809 li
205.574 189.783 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 186.222 mo
207.158 184.983 li
207.158 182.508 li
209.302 183.746 li
209.302 186.222 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 184.721 mo
207.158 183.483 li
207.158 182.508 li
209.302 183.746 li
209.302 184.721 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 189.829 mo
207.158 188.591 li
207.158 186.115 li
209.302 187.354 li
209.302 189.829 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 188.328 mo
207.158 187.091 li
207.158 186.115 li
209.302 187.354 li
209.302 188.328 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 193.437 mo
207.158 192.198 li
207.158 189.723 li
209.302 190.961 li
209.302 193.437 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 191.936 mo
207.158 190.697 li
207.158 189.723 li
209.302 190.961 li
209.302 191.936 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 188.373 mo
210.885 187.136 li
210.885 184.66 li
213.03 185.899 li
213.03 188.373 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 186.873 mo
210.885 185.635 li
210.885 184.66 li
213.03 185.899 li
213.03 186.873 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 191.981 mo
210.885 190.743 li
210.885 188.268 li
213.03 189.505 li
213.03 191.981 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 190.481 mo
210.885 189.242 li
210.885 188.268 li
213.03 189.505 li
213.03 190.481 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 195.588 mo
210.885 194.351 li
210.885 191.875 li
213.03 193.112 li
213.03 195.588 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 194.088 mo
210.885 192.85 li
210.885 191.875 li
213.03 193.112 li
213.03 194.088 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
226.855 193.88 mo
214.537 186.769 li
214.537 196.459 li
226.855 203.57 li
226.855 193.88 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
226.855 193.88 mo
214.537 186.769 li
214.537 187.743 li
226.855 194.856 li
226.855 193.88 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
241.018 202.058 mo
228.701 194.946 li
228.701 204.636 li
241.018 211.747 li
241.018 202.058 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
241.018 202.058 mo
228.701 194.946 li
228.701 195.921 li
241.018 203.032 li
241.018 202.058 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
248.495 206.374 mo
242.864 203.123 li
242.864 212.814 li
248.495 216.065 li
248.495 206.374 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
248.495 206.374 mo
242.864 203.123 li
242.864 204.098 li
248.495 207.35 li
248.495 206.374 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
218.224 196.436 mo
215.365 194.785 li
215.365 196.032 li
218.224 197.683 li
218.224 196.436 li
cp
f
218.248 194.559 mo
215.389 192.909 li
215.389 194.155 li
218.248 195.806 li
218.248 194.559 li
cp
f
218.248 192.669 mo
215.389 191.019 li
215.389 192.265 li
218.248 193.915 li
218.248 192.669 li
cp
f
218.248 190.778 mo
215.389 189.128 li
215.389 190.375 li
218.248 192.025 li
218.248 190.778 li
cp
f
222.084 198.664 mo
219.225 197.014 li
219.225 198.261 li
222.084 199.911 li
222.084 198.664 li
cp
f
222.084 196.774 mo
219.225 195.123 li
219.225 196.37 li
222.084 198.021 li
222.084 196.774 li
cp
f
225.944 200.893 mo
223.086 199.242 li
223.086 200.489 li
225.944 202.14 li
225.944 200.893 li
cp
f
225.944 199.002 mo
223.086 197.352 li
223.086 198.599 li
225.944 200.249 li
225.944 199.002 li
cp
f
225.944 197.111 mo
223.086 195.462 li
223.086 196.708 li
225.944 198.358 li
225.944 197.111 li
cp
f
232.428 204.637 mo
229.57 202.986 li
229.57 204.233 li
232.428 205.884 li
232.428 204.637 li
cp
f
236.289 206.865 mo
233.43 205.215 li
233.43 206.462 li
236.289 208.112 li
236.289 206.865 li
cp
f
236.289 204.975 mo
233.43 203.324 li
233.43 204.571 li
236.289 206.222 li
236.289 204.975 li
cp
f
236.289 203.084 mo
233.43 201.434 li
233.43 202.681 li
236.289 204.331 li
236.289 203.084 li
cp
f
240.149 209.094 mo
237.29 207.443 li
237.29 208.691 li
240.149 210.341 li
240.149 209.094 li
cp
f
240.149 207.203 mo
237.29 205.553 li
237.29 206.8 li
240.149 208.45 li
240.149 207.203 li
cp
f
240.149 205.313 mo
237.29 203.663 li
237.29 204.909 li
240.149 206.56 li
240.149 205.313 li
cp
f
247.109 213.112 mo
244.25 211.462 li
244.25 212.709 li
247.109 214.359 li
247.109 213.112 li
cp
f
247.109 211.222 mo
244.25 209.571 li
244.25 210.818 li
247.109 212.469 li
247.109 211.222 li
cp
f
247.109 209.331 mo
244.25 207.681 li
244.25 208.928 li
247.109 210.578 li
247.109 209.331 li
cp
f
240.149 203.423 mo
237.29 201.773 li
237.29 203.019 li
240.149 204.669 li
240.149 203.423 li
cp
f
250.474 232.8 mo
193.589 199.956 li
193.589 189.905 li
250.474 222.748 li
250.474 232.8 li
cp
.762356 .621912 .461616 .445838 cmyk
f
249.154 234.246 mo
194.909 202.928 li
194.909 200.719 li
249.154 232.037 li
249.154 234.246 li
cp
.814298 .671229 .505364 .569116 cmyk
f
219.044 212.906 mo
195.568 199.352 li
195.568 192.795 li
219.044 206.35 li
219.044 212.906 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
224.149 215.853 mo
221.185 214.142 li
221.185 207.585 li
224.149 209.297 li
224.149 215.853 li
cp
f
229.018 218.664 mo
226.054 216.953 li
226.054 210.397 li
229.018 212.108 li
229.018 218.664 li
cp
f
233.887 221.476 mo
230.924 219.765 li
230.924 213.208 li
233.887 214.919 li
233.887 221.476 li
cp
f
238.757 224.287 mo
235.793 222.575 li
235.793 216.02 li
238.757 217.731 li
238.757 224.287 li
cp
f
243.626 227.098 mo
240.662 225.387 li
240.662 218.83 li
243.626 220.542 li
243.626 227.098 li
cp
f
248.495 229.909 mo
245.531 228.198 li
245.531 221.642 li
248.495 223.353 li
248.495 229.909 li
cp
f
219.044 207.248 mo
195.568 193.694 li
195.568 192.795 li
219.044 206.35 li
219.044 207.248 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
224.149 210.195 mo
221.185 208.483 li
221.185 207.585 li
224.149 209.297 li
224.149 210.195 li
cp
f
229.018 213.006 mo
226.054 211.295 li
226.054 210.397 li
229.018 212.108 li
229.018 213.006 li
cp
f
233.887 215.817 mo
230.924 214.107 li
230.924 213.208 li
233.887 214.919 li
233.887 215.817 li
cp
f
238.757 218.629 mo
235.793 216.918 li
235.793 216.02 li
238.757 217.731 li
238.757 218.629 li
cp
f
243.626 221.441 mo
240.662 219.729 li
240.662 218.83 li
243.626 220.542 li
243.626 221.441 li
cp
f
248.495 224.252 mo
245.531 222.54 li
245.531 221.642 li
248.495 223.353 li
248.495 224.252 li
cp
f
198.675 199.39 mo
196.902 198.366 li
196.902 195.945 li
198.675 196.969 li
198.675 199.39 li
cp
f
201.847 201.222 mo
200.075 200.198 li
200.075 197.777 li
201.847 198.8 li
201.847 201.222 li
cp
f
205.02 203.053 mo
203.247 202.03 li
203.247 199.608 li
205.02 200.632 li
205.02 203.053 li
cp
f
208.192 204.885 mo
206.42 203.861 li
206.42 201.441 li
208.192 202.464 li
208.192 204.885 li
cp
f
211.365 206.717 mo
209.593 205.693 li
209.593 203.272 li
211.365 204.295 li
211.365 206.717 li
cp
f
214.537 208.548 mo
212.765 207.525 li
212.765 205.104 li
214.537 206.127 li
214.537 208.548 li
cp
f
217.71 210.38 mo
215.937 209.357 li
215.937 206.936 li
217.71 207.959 li
217.71 210.38 li
cp
f
250.474 251.362 mo
193.589 218.52 li
193.589 202.166 li
250.474 235.009 li
250.474 251.362 li
cp
.762356 .621912 .461616 .445838 cmyk
f
198.12 210.589 mo
195.976 209.352 li
195.976 206.876 li
198.12 208.113 li
198.12 210.589 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 209.089 mo
195.976 207.851 li
195.976 206.876 li
198.12 208.113 li
198.12 209.089 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.12 214.196 mo
195.976 212.959 li
195.976 210.483 li
198.12 211.721 li
198.12 214.196 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 212.696 mo
195.976 211.458 li
195.976 210.483 li
198.12 211.721 li
198.12 212.696 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.12 217.804 mo
195.976 216.566 li
195.976 214.091 li
198.12 215.328 li
198.12 217.804 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 216.303 mo
195.976 215.066 li
195.976 214.091 li
198.12 215.328 li
198.12 216.303 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 212.741 mo
199.703 211.504 li
199.703 209.028 li
201.847 210.266 li
201.847 212.741 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 211.24 mo
199.703 210.003 li
199.703 209.028 li
201.847 210.266 li
201.847 211.24 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 216.349 mo
199.703 215.11 li
199.703 212.635 li
201.847 213.873 li
201.847 216.349 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 214.848 mo
199.703 213.61 li
199.703 212.635 li
201.847 213.873 li
201.847 214.848 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 219.956 mo
199.703 218.718 li
199.703 216.242 li
201.847 217.481 li
201.847 219.956 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 218.455 mo
199.703 217.218 li
199.703 216.242 li
201.847 217.481 li
201.847 218.455 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 214.894 mo
203.431 213.655 li
203.431 211.18 li
205.574 212.418 li
205.574 214.894 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 213.393 mo
203.431 212.155 li
203.431 211.18 li
205.574 212.418 li
205.574 213.393 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 218.5 mo
203.431 217.263 li
203.431 214.787 li
205.574 216.025 li
205.574 218.5 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 217 mo
203.431 215.762 li
203.431 214.787 li
205.574 216.025 li
205.574 217 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 222.108 mo
203.431 220.87 li
203.431 218.395 li
205.574 219.632 li
205.574 222.108 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 220.608 mo
203.431 219.369 li
203.431 218.395 li
205.574 219.632 li
205.574 220.608 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 217.045 mo
207.158 215.808 li
207.158 213.332 li
209.302 214.569 li
209.302 217.045 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 215.545 mo
207.158 214.307 li
207.158 213.332 li
209.302 214.569 li
209.302 215.545 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 220.652 mo
207.158 219.415 li
207.158 216.94 li
209.302 218.177 li
209.302 220.652 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 219.152 mo
207.158 217.914 li
207.158 216.94 li
209.302 218.177 li
209.302 219.152 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 224.26 mo
207.158 223.022 li
207.158 220.547 li
209.302 221.784 li
209.302 224.26 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 222.759 mo
207.158 221.522 li
207.158 220.547 li
209.302 221.784 li
209.302 222.759 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 219.197 mo
210.885 217.959 li
210.885 215.484 li
213.03 216.722 li
213.03 219.197 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 217.696 mo
210.885 216.459 li
210.885 215.484 li
213.03 216.722 li
213.03 217.696 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 222.805 mo
210.885 221.566 li
210.885 219.091 li
213.03 220.329 li
213.03 222.805 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 221.304 mo
210.885 220.066 li
210.885 219.091 li
213.03 220.329 li
213.03 221.304 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 226.412 mo
210.885 225.174 li
210.885 222.698 li
213.03 223.937 li
213.03 226.412 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 224.911 mo
210.885 223.674 li
210.885 222.698 li
213.03 223.937 li
213.03 224.911 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
226.855 224.704 mo
214.537 217.593 li
214.537 227.282 li
226.855 234.394 li
226.855 224.704 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
226.855 224.704 mo
214.537 217.593 li
214.537 218.567 li
226.855 225.679 li
226.855 224.704 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
241.018 232.881 mo
228.701 225.77 li
228.701 235.46 li
241.018 242.571 li
241.018 232.881 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
241.018 232.881 mo
228.701 225.77 li
228.701 226.744 li
241.018 233.857 li
241.018 232.881 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
248.495 237.198 mo
242.864 233.947 li
242.864 243.637 li
248.495 246.888 li
248.495 237.198 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
248.495 237.198 mo
242.864 233.947 li
242.864 234.922 li
248.495 238.173 li
248.495 237.198 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
218.224 227.259 mo
215.365 225.608 li
215.365 226.856 li
218.224 228.506 li
218.224 227.259 li
cp
f
218.248 225.383 mo
215.389 223.733 li
215.389 224.98 li
218.248 226.63 li
218.248 225.383 li
cp
f
218.248 223.492 mo
215.389 221.842 li
215.389 223.089 li
218.248 224.739 li
218.248 223.492 li
cp
f
218.248 221.602 mo
215.389 219.951 li
215.389 221.198 li
218.248 222.849 li
218.248 221.602 li
cp
f
222.084 229.488 mo
219.225 227.838 li
219.225 229.084 li
222.084 230.734 li
222.084 229.488 li
cp
f
222.084 227.598 mo
219.225 225.947 li
219.225 227.193 li
222.084 228.844 li
222.084 227.598 li
cp
f
225.944 231.717 mo
223.086 230.066 li
223.086 231.314 li
225.944 232.963 li
225.944 231.717 li
cp
f
225.944 229.826 mo
223.086 228.176 li
223.086 229.423 li
225.944 231.073 li
225.944 229.826 li
cp
f
225.944 227.936 mo
223.086 226.285 li
223.086 227.532 li
225.944 229.183 li
225.944 227.936 li
cp
f
232.428 235.46 mo
229.57 233.81 li
229.57 235.057 li
232.428 236.707 li
232.428 235.46 li
cp
f
236.289 237.69 mo
233.43 236.039 li
233.43 237.285 li
236.289 238.936 li
236.289 237.69 li
cp
f
236.289 235.799 mo
233.43 234.149 li
233.43 235.395 li
236.289 237.045 li
236.289 235.799 li
cp
f
236.289 233.908 mo
233.43 232.258 li
233.43 233.505 li
236.289 235.155 li
236.289 233.908 li
cp
f
240.149 239.918 mo
237.29 238.268 li
237.29 239.515 li
240.149 241.164 li
240.149 239.918 li
cp
f
240.149 238.027 mo
237.29 236.377 li
237.29 237.624 li
240.149 239.275 li
240.149 238.027 li
cp
f
240.149 236.137 mo
237.29 234.486 li
237.29 235.733 li
240.149 237.384 li
240.149 236.137 li
cp
f
247.109 243.937 mo
244.25 242.286 li
244.25 243.532 li
247.109 245.183 li
247.109 243.937 li
cp
f
247.109 242.046 mo
244.25 240.396 li
244.25 241.642 li
247.109 243.292 li
247.109 242.046 li
cp
f
247.109 240.155 mo
244.25 238.505 li
244.25 239.752 li
247.109 241.402 li
247.109 240.155 li
cp
f
240.149 234.246 mo
237.29 232.596 li
237.29 233.843 li
240.149 235.493 li
240.149 234.246 li
cp
f
250.474 263.623 mo
250.474 253.572 li
249.154 252.81 li
249.154 250.601 li
194.909 219.282 li
194.909 221.491 li
197.449 222.958 li
193.589 220.729 li
193.589 230.78 li
194.909 231.542 li
194.909 233.699 li
193.589 232.989 li
193.589 249.344 li
194.909 250.106 li
194.909 252.316 li
249.154 283.633 li
249.154 281.424 li
250.474 282.187 li
250.474 265.832 li
249.154 265.07 li
249.154 262.913 li
250.474 263.623 li
cp
.814298 .671229 .505364 .569116 cmyk
f
250.474 294.446 mo
193.589 261.604 li
193.589 251.553 li
250.474 284.396 li
250.474 294.446 li
cp
.762356 .621912 .461616 .445838 cmyk
f
249.154 295.894 mo
194.909 264.575 li
194.909 262.366 li
249.154 293.685 li
249.154 295.894 li
cp
.814298 .671229 .505364 .569116 cmyk
f
249.154 314.457 mo
194.909 283.139 li
194.909 280.93 li
249.154 312.248 li
249.154 314.457 li
cp
f
219.044 274.553 mo
195.568 260.999 li
195.568 254.442 li
219.044 267.997 li
219.044 274.553 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
224.149 277.5 mo
221.185 275.789 li
221.185 269.233 li
224.149 270.943 li
224.149 277.5 li
cp
f
229.018 280.312 mo
226.054 278.601 li
226.054 272.044 li
229.018 273.755 li
229.018 280.312 li
cp
f
233.887 283.123 mo
230.924 281.411 li
230.924 274.856 li
233.887 276.566 li
233.887 283.123 li
cp
f
238.757 285.935 mo
235.793 284.223 li
235.793 277.666 li
238.757 279.378 li
238.757 285.935 li
cp
f
243.626 288.745 mo
240.662 287.034 li
240.662 280.478 li
243.626 282.189 li
243.626 288.745 li
cp
f
248.495 291.557 mo
245.531 289.846 li
245.531 283.289 li
248.495 285 li
248.495 291.557 li
cp
f
219.044 268.896 mo
195.568 255.341 li
195.568 254.442 li
219.044 267.997 li
219.044 268.896 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
224.149 271.843 mo
221.185 270.131 li
221.185 269.233 li
224.149 270.943 li
224.149 271.843 li
cp
f
229.018 274.653 mo
226.054 272.942 li
226.054 272.044 li
229.018 273.755 li
229.018 274.653 li
cp
f
233.887 277.465 mo
230.924 275.754 li
230.924 274.856 li
233.887 276.566 li
233.887 277.465 li
cp
f
238.757 280.276 mo
235.793 278.566 li
235.793 277.666 li
238.757 279.378 li
238.757 280.276 li
cp
f
243.626 283.088 mo
240.662 281.376 li
240.662 280.478 li
243.626 282.189 li
243.626 283.088 li
cp
f
248.495 285.899 mo
245.531 284.188 li
245.531 283.289 li
248.495 285 li
248.495 285.899 li
cp
f
198.675 261.037 mo
196.902 260.014 li
196.902 257.593 li
198.675 258.616 li
198.675 261.037 li
cp
f
201.847 262.869 mo
200.075 261.846 li
200.075 259.425 li
201.847 260.447 li
201.847 262.869 li
cp
f
205.02 264.7 mo
203.247 263.677 li
203.247 261.256 li
205.02 262.279 li
205.02 264.7 li
cp
f
208.192 266.532 mo
206.42 265.509 li
206.42 263.088 li
208.192 264.111 li
208.192 266.532 li
cp
f
211.365 268.364 mo
209.593 267.341 li
209.593 264.919 li
211.365 265.942 li
211.365 268.364 li
cp
f
214.537 270.195 mo
212.765 269.172 li
212.765 266.751 li
214.537 267.775 li
214.537 270.195 li
cp
f
217.71 272.027 mo
215.937 271.004 li
215.937 268.583 li
217.71 269.606 li
217.71 272.027 li
cp
f
250.474 313.01 mo
193.589 280.167 li
193.589 263.814 li
250.474 296.656 li
250.474 313.01 li
cp
.762356 .621912 .461616 .445838 cmyk
f
198.12 272.236 mo
195.976 270.999 li
195.976 268.524 li
198.12 269.761 li
198.12 272.236 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 270.736 mo
195.976 269.498 li
195.976 268.524 li
198.12 269.761 li
198.12 270.736 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.12 275.844 mo
195.976 274.607 li
195.976 272.131 li
198.12 273.368 li
198.12 275.844 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 274.344 mo
195.976 273.106 li
195.976 272.131 li
198.12 273.368 li
198.12 274.344 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.12 279.451 mo
195.976 278.213 li
195.976 275.738 li
198.12 276.976 li
198.12 279.451 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 277.95 mo
195.976 276.713 li
195.976 275.738 li
198.12 276.976 li
198.12 277.95 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 274.389 mo
199.703 273.15 li
199.703 270.676 li
201.847 271.913 li
201.847 274.389 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 272.888 mo
199.703 271.65 li
199.703 270.676 li
201.847 271.913 li
201.847 272.888 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 277.996 mo
199.703 276.758 li
199.703 274.282 li
201.847 275.521 li
201.847 277.996 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 276.495 mo
199.703 275.258 li
199.703 274.282 li
201.847 275.521 li
201.847 276.495 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 281.604 mo
199.703 280.365 li
199.703 277.89 li
201.847 279.128 li
201.847 281.604 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 280.103 mo
199.703 278.865 li
199.703 277.89 li
201.847 279.128 li
201.847 280.103 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 276.541 mo
203.431 275.303 li
203.431 272.827 li
205.574 274.066 li
205.574 276.541 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 275.04 mo
203.431 273.803 li
203.431 272.827 li
205.574 274.066 li
205.574 275.04 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 280.148 mo
203.431 278.91 li
203.431 276.435 li
205.574 277.672 li
205.574 280.148 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 278.648 mo
203.431 277.409 li
203.431 276.435 li
205.574 277.672 li
205.574 278.648 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 283.755 mo
203.431 282.518 li
203.431 280.042 li
205.574 281.279 li
205.574 283.755 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 282.255 mo
203.431 281.017 li
203.431 280.042 li
205.574 281.279 li
205.574 282.255 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 278.692 mo
207.158 277.455 li
207.158 274.98 li
209.302 276.217 li
209.302 278.692 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 277.192 mo
207.158 275.954 li
207.158 274.98 li
209.302 276.217 li
209.302 277.192 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 282.3 mo
207.158 281.063 li
207.158 278.587 li
209.302 279.824 li
209.302 282.3 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 280.799 mo
207.158 279.562 li
207.158 278.587 li
209.302 279.824 li
209.302 280.799 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 285.907 mo
207.158 284.669 li
207.158 282.193 li
209.302 283.432 li
209.302 285.907 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 284.406 mo
207.158 283.169 li
207.158 282.193 li
209.302 283.432 li
209.302 284.406 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 280.845 mo
210.885 279.607 li
210.885 277.131 li
213.03 278.369 li
213.03 280.845 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 279.344 mo
210.885 278.107 li
210.885 277.131 li
213.03 278.369 li
213.03 279.344 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 284.452 mo
210.885 283.214 li
210.885 280.738 li
213.03 281.977 li
213.03 284.452 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 282.951 mo
210.885 281.714 li
210.885 280.738 li
213.03 281.977 li
213.03 282.951 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 288.059 mo
210.885 286.821 li
210.885 284.346 li
213.03 285.584 li
213.03 288.059 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 286.559 mo
210.885 285.32 li
210.885 284.346 li
213.03 285.584 li
213.03 286.559 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
226.855 286.352 mo
214.537 279.239 li
214.537 288.93 li
226.855 296.041 li
226.855 286.352 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
226.855 286.352 mo
214.537 279.239 li
214.537 280.215 li
226.855 287.326 li
226.855 286.352 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
241.018 294.528 mo
228.701 287.417 li
228.701 297.108 li
241.018 304.219 li
241.018 294.528 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
241.018 294.528 mo
228.701 287.417 li
228.701 288.392 li
241.018 295.503 li
241.018 294.528 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
248.495 298.846 mo
242.864 295.594 li
242.864 305.284 li
248.495 308.535 li
248.495 298.846 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
248.495 298.846 mo
242.864 295.594 li
242.864 296.569 li
248.495 299.82 li
248.495 298.846 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
218.224 288.906 mo
215.365 287.256 li
215.365 288.503 li
218.224 290.153 li
218.224 288.906 li
cp
f
218.248 287.03 mo
215.389 285.38 li
215.389 286.627 li
218.248 288.277 li
218.248 287.03 li
cp
f
218.248 285.14 mo
215.389 283.489 li
215.389 284.736 li
218.248 286.387 li
218.248 285.14 li
cp
f
218.248 283.249 mo
215.389 281.599 li
215.389 282.846 li
218.248 284.496 li
218.248 283.249 li
cp
f
222.084 291.135 mo
219.225 289.484 li
219.225 290.732 li
222.084 292.382 li
222.084 291.135 li
cp
f
222.084 289.245 mo
219.225 287.595 li
219.225 288.841 li
222.084 290.491 li
222.084 289.245 li
cp
f
225.944 293.364 mo
223.086 291.714 li
223.086 292.96 li
225.944 294.61 li
225.944 293.364 li
cp
f
225.944 291.474 mo
223.086 289.823 li
223.086 291.07 li
225.944 292.72 li
225.944 291.474 li
cp
f
225.944 289.583 mo
223.086 287.933 li
223.086 289.18 li
225.944 290.83 li
225.944 289.583 li
cp
f
232.428 297.108 mo
229.57 295.457 li
229.57 296.704 li
232.428 298.355 li
232.428 297.108 li
cp
f
236.289 299.336 mo
233.43 297.686 li
233.43 298.933 li
236.289 300.583 li
236.289 299.336 li
cp
f
236.289 297.446 mo
233.43 295.796 li
233.43 297.042 li
236.289 298.692 li
236.289 297.446 li
cp
f
236.289 295.556 mo
233.43 293.905 li
233.43 295.151 li
236.289 296.802 li
236.289 295.556 li
cp
f
240.149 301.566 mo
237.29 299.915 li
237.29 301.161 li
240.149 302.812 li
240.149 301.566 li
cp
f
240.149 299.675 mo
237.29 298.025 li
237.29 299.272 li
240.149 300.921 li
240.149 299.675 li
cp
f
240.149 297.784 mo
237.29 296.134 li
237.29 297.381 li
240.149 299.031 li
240.149 297.784 li
cp
f
247.109 305.583 mo
244.25 303.933 li
244.25 305.18 li
247.109 306.83 li
247.109 305.583 li
cp
f
247.109 303.693 mo
244.25 302.043 li
244.25 303.289 li
247.109 304.94 li
247.109 303.693 li
cp
f
247.109 301.803 mo
244.25 300.152 li
244.25 301.399 li
247.109 303.049 li
247.109 301.803 li
cp
f
240.149 295.894 mo
237.29 294.243 li
237.29 295.49 li
240.149 297.141 li
240.149 295.894 li
cp
f
250.474 325.271 mo
193.589 292.428 li
193.589 282.376 li
250.474 315.22 li
250.474 325.271 li
cp
.762356 .621912 .461616 .445838 cmyk
f
249.154 326.718 mo
194.909 295.4 li
194.909 293.19 li
249.154 324.508 li
249.154 326.718 li
cp
.814298 .671229 .505364 .569116 cmyk
f
249.154 345.28 mo
194.909 313.962 li
194.909 311.753 li
249.154 343.071 li
249.154 345.28 li
cp
f
219.044 305.377 mo
195.568 291.823 li
195.568 285.267 li
219.044 298.82 li
219.044 305.377 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
224.149 308.324 mo
221.185 306.612 li
221.185 300.057 li
224.149 301.768 li
224.149 308.324 li
cp
f
229.018 311.135 mo
226.054 309.424 li
226.054 302.867 li
229.018 304.579 li
229.018 311.135 li
cp
f
233.887 313.946 mo
230.924 312.235 li
230.924 305.679 li
233.887 307.39 li
233.887 313.946 li
cp
f
238.757 316.758 mo
235.793 315.047 li
235.793 308.49 li
238.757 310.201 li
238.757 316.758 li
cp
f
243.626 319.569 mo
240.662 317.858 li
240.662 311.302 li
243.626 313.013 li
243.626 319.569 li
cp
f
248.495 322.381 mo
245.531 320.669 li
245.531 314.112 li
248.495 315.824 li
248.495 322.381 li
cp
f
219.044 299.719 mo
195.568 286.165 li
195.568 285.267 li
219.044 298.82 li
219.044 299.719 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
224.149 302.666 mo
221.185 300.955 li
221.185 300.057 li
224.149 301.768 li
224.149 302.666 li
cp
f
229.018 305.478 mo
226.054 303.766 li
226.054 302.867 li
229.018 304.579 li
229.018 305.478 li
cp
f
233.887 308.289 mo
230.924 306.577 li
230.924 305.679 li
233.887 307.39 li
233.887 308.289 li
cp
f
238.757 311.1 mo
235.793 309.389 li
235.793 308.49 li
238.757 310.201 li
238.757 311.1 li
cp
f
243.626 313.911 mo
240.662 312.2 li
240.662 311.302 li
243.626 313.013 li
243.626 313.911 li
cp
f
248.495 316.723 mo
245.531 315.012 li
245.531 314.112 li
248.495 315.824 li
248.495 316.723 li
cp
f
198.675 291.861 mo
196.902 290.838 li
196.902 288.416 li
198.675 289.44 li
198.675 291.861 li
cp
f
201.847 293.692 mo
200.075 292.669 li
200.075 290.248 li
201.847 291.272 li
201.847 293.692 li
cp
f
205.02 295.525 mo
203.247 294.501 li
203.247 292.08 li
205.02 293.103 li
205.02 295.525 li
cp
f
208.192 297.356 mo
206.42 296.333 li
206.42 293.911 li
208.192 294.935 li
208.192 297.356 li
cp
f
211.365 299.188 mo
209.593 298.164 li
209.593 295.743 li
211.365 296.767 li
211.365 299.188 li
cp
f
214.537 301.02 mo
212.765 299.996 li
212.765 297.574 li
214.537 298.598 li
214.537 301.02 li
cp
f
217.71 302.851 mo
215.937 301.827 li
215.937 299.406 li
217.71 300.43 li
217.71 302.851 li
cp
f
250.474 343.834 mo
193.589 310.991 li
193.589 294.637 li
250.474 327.48 li
250.474 343.834 li
cp
.762356 .621912 .461616 .445838 cmyk
f
198.12 303.061 mo
195.976 301.822 li
195.976 299.347 li
198.12 300.585 li
198.12 303.061 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 301.56 mo
195.976 300.322 li
195.976 299.347 li
198.12 300.585 li
198.12 301.56 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.12 306.668 mo
195.976 305.43 li
195.976 302.954 li
198.12 304.192 li
198.12 306.668 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 305.167 mo
195.976 303.929 li
195.976 302.954 li
198.12 304.192 li
198.12 305.167 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.12 310.275 mo
195.976 309.037 li
195.976 306.562 li
198.12 307.799 li
198.12 310.275 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.12 308.775 mo
195.976 307.536 li
195.976 306.562 li
198.12 307.799 li
198.12 308.775 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 305.212 mo
199.703 303.975 li
199.703 301.499 li
201.847 302.736 li
201.847 305.212 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 303.712 mo
199.703 302.474 li
199.703 301.499 li
201.847 302.736 li
201.847 303.712 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 308.819 mo
199.703 307.582 li
199.703 305.107 li
201.847 306.344 li
201.847 308.819 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 307.319 mo
199.703 306.081 li
199.703 305.107 li
201.847 306.344 li
201.847 307.319 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
201.847 312.427 mo
199.703 311.19 li
199.703 308.714 li
201.847 309.951 li
201.847 312.427 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
201.847 310.926 mo
199.703 309.689 li
199.703 308.714 li
201.847 309.951 li
201.847 310.926 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 307.364 mo
203.431 306.127 li
203.431 303.651 li
205.574 304.889 li
205.574 307.364 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 305.863 mo
203.431 304.626 li
203.431 303.651 li
205.574 304.889 li
205.574 305.863 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 310.972 mo
203.431 309.733 li
203.431 307.258 li
205.574 308.496 li
205.574 310.972 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 309.471 mo
203.431 308.233 li
203.431 307.258 li
205.574 308.496 li
205.574 309.471 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
205.574 314.579 mo
203.431 313.341 li
203.431 310.865 li
205.574 312.104 li
205.574 314.579 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
205.574 313.078 mo
203.431 311.841 li
203.431 310.865 li
205.574 312.104 li
205.574 313.078 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 309.517 mo
207.158 308.278 li
207.158 305.803 li
209.302 307.041 li
209.302 309.517 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 308.016 mo
207.158 306.778 li
207.158 305.803 li
209.302 307.041 li
209.302 308.016 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 313.123 mo
207.158 311.886 li
207.158 309.41 li
209.302 310.649 li
209.302 313.123 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 311.623 mo
207.158 310.385 li
207.158 309.41 li
209.302 310.649 li
209.302 311.623 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
209.302 316.731 mo
207.158 315.493 li
207.158 313.018 li
209.302 314.255 li
209.302 316.731 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
209.302 315.231 mo
207.158 313.992 li
207.158 313.018 li
209.302 314.255 li
209.302 315.231 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 311.668 mo
210.885 310.431 li
210.885 307.955 li
213.03 309.192 li
213.03 311.668 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 310.168 mo
210.885 308.93 li
210.885 307.955 li
213.03 309.192 li
213.03 310.168 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 315.275 mo
210.885 314.038 li
210.885 311.563 li
213.03 312.8 li
213.03 315.275 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 313.775 mo
210.885 312.537 li
210.885 311.563 li
213.03 312.8 li
213.03 313.775 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
213.03 318.883 mo
210.885 317.645 li
210.885 315.17 li
213.03 316.407 li
213.03 318.883 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
213.03 317.382 mo
210.885 316.145 li
210.885 315.17 li
213.03 316.407 li
213.03 317.382 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
226.855 317.175 mo
214.537 310.064 li
214.537 319.753 li
226.855 326.865 li
226.855 317.175 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
226.855 317.175 mo
214.537 310.064 li
214.537 311.038 li
226.855 318.15 li
226.855 317.175 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
241.018 325.353 mo
228.701 318.24 li
228.701 327.931 li
241.018 335.042 li
241.018 325.353 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
241.018 325.353 mo
228.701 318.24 li
228.701 319.216 li
241.018 326.327 li
241.018 325.353 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
248.495 329.669 mo
242.864 326.418 li
242.864 336.108 li
248.495 339.359 li
248.495 329.669 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
248.495 329.669 mo
242.864 326.418 li
242.864 327.393 li
248.495 330.644 li
248.495 329.669 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
218.224 319.731 mo
215.365 318.08 li
215.365 319.327 li
218.224 320.977 li
218.224 319.731 li
cp
f
218.248 317.854 mo
215.389 316.203 li
215.389 317.45 li
218.248 319.101 li
218.248 317.854 li
cp
f
218.248 315.963 mo
215.389 314.313 li
215.389 315.56 li
218.248 317.21 li
218.248 315.963 li
cp
f
218.248 314.072 mo
215.389 312.423 li
215.389 313.669 li
218.248 315.319 li
218.248 314.072 li
cp
f
222.084 321.959 mo
219.225 320.309 li
219.225 321.556 li
222.084 323.206 li
222.084 321.959 li
cp
f
222.084 320.068 mo
219.225 318.418 li
219.225 319.665 li
222.084 321.316 li
222.084 320.068 li
cp
f
225.944 324.188 mo
223.086 322.537 li
223.086 323.784 li
225.944 325.435 li
225.944 324.188 li
cp
f
225.944 322.297 mo
223.086 320.647 li
223.086 321.894 li
225.944 323.544 li
225.944 322.297 li
cp
f
225.944 320.406 mo
223.086 318.756 li
223.086 320.003 li
225.944 321.653 li
225.944 320.406 li
cp
f
232.428 327.932 mo
229.57 326.281 li
229.57 327.528 li
232.428 329.178 li
232.428 327.932 li
cp
f
236.289 330.16 mo
233.43 328.51 li
233.43 329.757 li
236.289 331.407 li
236.289 330.16 li
cp
f
236.289 328.27 mo
233.43 326.619 li
233.43 327.866 li
236.289 329.517 li
236.289 328.27 li
cp
f
236.289 326.379 mo
233.43 324.729 li
233.43 325.976 li
236.289 327.626 li
236.289 326.379 li
cp
f
240.149 332.389 mo
237.29 330.738 li
237.29 331.985 li
240.149 333.636 li
240.149 332.389 li
cp
f
240.149 330.498 mo
237.29 328.848 li
237.29 330.095 li
240.149 331.745 li
240.149 330.498 li
cp
f
240.149 328.608 mo
237.29 326.957 li
237.29 328.204 li
240.149 329.855 li
240.149 328.608 li
cp
f
247.109 336.407 mo
244.25 334.757 li
244.25 336.004 li
247.109 337.654 li
247.109 336.407 li
cp
f
247.109 334.517 mo
244.25 332.866 li
244.25 334.113 li
247.109 335.764 li
247.109 334.517 li
cp
f
247.109 332.626 mo
244.25 330.976 li
244.25 332.223 li
247.109 333.873 li
247.109 332.626 li
cp
f
240.149 326.717 mo
237.29 325.066 li
237.29 326.314 li
240.149 327.964 li
240.149 326.717 li
cp
f
250.474 363.537 mo
193.589 330.694 li
193.589 313.2 li
250.474 346.043 li
250.474 363.537 li
.762356 .621912 .461616 .445838 cmyk
f
250.474 188.903 mo
193.589 156.061 li
193.589 145.813 li
250.474 178.655 li
250.474 188.903 li
cp
f
199.063 331.096 mo
197.238 330.042 li
197.238 318.065 li
199.063 319.119 li
199.063 331.096 li
.814298 .671229 .505364 .569116 cmyk
f
202.188 332.901 mo
200.363 331.847 li
200.363 319.87 li
202.188 320.924 li
202.188 332.901 li
f
205.314 334.705 mo
203.488 333.651 li
203.488 321.675 li
205.314 322.729 li
205.314 334.705 li
f
212.9 339.085 mo
211.075 338.031 li
211.075 326.055 li
212.9 327.109 li
212.9 339.085 li
f
216.026 340.89 mo
214.2 339.836 li
214.2 327.859 li
216.026 328.913 li
216.026 340.89 li
f
219.151 342.694 mo
217.325 341.64 li
217.325 329.663 li
219.151 330.718 li
219.151 342.694 li
f
226.738 347.074 mo
224.912 346.021 li
224.912 334.044 li
226.738 335.098 li
226.738 347.074 li
f
229.863 348.879 mo
228.037 347.824 li
228.037 335.848 li
229.863 336.901 li
229.863 348.879 li
f
232.989 350.683 mo
231.163 349.629 li
231.163 337.652 li
232.989 338.706 li
232.989 350.683 li
f
240.575 355.064 mo
238.749 354.009 li
238.749 342.032 li
240.575 343.086 li
240.575 355.064 li
f
243.7 356.867 mo
241.875 355.814 li
241.875 343.837 li
243.7 344.891 li
243.7 356.867 li
f
246.825 358.672 mo
245 357.618 li
245 345.642 li
246.825 346.695 li
246.825 358.672 li
f
250.474 351.151 mo
246.825 349.045 li
246.825 346.695 li
245 345.642 li
245 347.991 li
243.7 347.241 li
243.7 344.891 li
250.474 348.802 li
250.474 351.151 li
241.875 346.186 mo
240.575 345.436 li
240.575 343.086 li
242.742 344.337 li
241.875 343.837 li
241.875 346.186 li
238.749 344.382 mo
232.989 341.056 li
232.989 338.706 li
238.749 342.032 li
238.749 344.382 li
231.163 340.002 mo
229.863 339.252 li
229.863 336.902 li
231.477 337.834 li
231.163 337.652 li
231.163 340.002 li
228.037 338.197 mo
226.738 337.447 li
226.738 335.098 li
224.912 334.044 li
224.912 336.393 li
219.151 333.067 li
219.151 330.718 li
218.122 330.123 li
228.037 335.848 li
228.037 338.197 li
217.325 332.013 mo
216.026 331.263 li
216.026 328.913 li
214.2 327.859 li
214.2 330.208 li
212.9 329.458 li
212.9 327.109 li
211.075 326.055 li
211.075 328.404 li
205.314 325.078 li
205.314 322.729 li
203.488 321.675 li
203.488 324.024 li
202.188 323.274 li
202.188 320.924 li
217.325 329.663 li
217.325 332.013 li
200.363 322.22 mo
199.063 321.469 li
199.063 319.12 li
200.363 319.87 li
200.363 322.22 li
197.238 320.415 mo
193.589 318.309 li
193.589 315.959 li
197.238 318.066 li
197.238 320.415 li
.797971 .654963 .48838 .522667 cmyk
f
199.063 321.469 mo
197.238 320.415 li
197.238 318.065 li
199.063 319.12 li
199.063 321.469 li
.814298 .671229 .505364 .569116 cmyk
f
202.188 323.274 mo
200.363 322.22 li
200.363 319.87 li
202.188 320.924 li
202.188 323.274 li
f
205.314 325.078 mo
203.488 324.024 li
203.488 321.675 li
205.314 322.729 li
205.314 325.078 li
f
212.9 329.458 mo
211.075 328.404 li
211.075 326.055 li
212.9 327.109 li
212.9 329.458 li
f
216.026 331.263 mo
214.2 330.208 li
214.2 327.859 li
216.026 328.913 li
216.026 331.263 li
f
219.151 333.067 mo
217.325 332.013 li
217.325 329.663 li
218.122 330.123 li
219.151 330.718 li
219.151 333.067 li
f
226.738 337.447 mo
224.912 336.393 li
224.912 334.044 li
226.738 335.098 li
226.738 337.447 li
f
229.863 339.252 mo
228.037 338.197 li
228.037 335.848 li
229.863 336.902 li
229.863 339.252 li
f
232.989 341.056 mo
231.163 340.002 li
231.163 337.652 li
231.477 337.834 li
232.989 338.706 li
232.989 341.056 li
f
240.575 345.436 mo
238.749 344.382 li
238.749 342.032 li
240.575 343.086 li
240.575 345.436 li
f
243.7 347.241 mo
241.875 346.186 li
241.875 343.837 li
242.742 344.337 li
243.7 344.891 li
243.7 347.241 li
f
246.825 349.045 mo
245 347.991 li
245 345.642 li
246.825 346.695 li
246.825 349.045 li
f
248.929 180.929 mo
195.134 149.87 li
195.134 148.41 li
248.929 179.47 li
248.929 180.929 li
cp
f
248.929 183.617 mo
195.134 152.559 li
195.134 151.099 li
248.929 182.158 li
248.929 183.617 li
cp
f
248.929 186.306 mo
195.134 155.246 li
195.134 153.787 li
248.929 184.847 li
248.929 186.306 li
cp
f
250.474 277.465 mo
224.949 294.593 li
224.949 282.579 li
250.474 267.842 li
250.474 277.465 li
cp
.652888 .514672 .41004 .30985 cmyk
f
250.474 281.528 mo
226.27 295.503 li
226.27 283.489 li
250.474 269.515 li
250.474 281.528 li
cp
.762356 .621912 .461616 .445838 cmyk
f
193.865 246.884 mo
168.34 264.012 li
168.34 251.998 li
193.865 237.261 li
193.865 246.884 li
cp
.652888 .514672 .41004 .30985 cmyk
f
193.865 250.947 mo
169.66 264.922 li
169.66 252.908 li
193.865 238.934 li
193.865 250.947 li
cp
.762356 .621912 .461616 .445838 cmyk
f
250.474 277.054 mo
226.27 291.028 li
226.27 287.965 li
250.474 273.99 li
250.474 277.054 li
cp
.814298 .671229 .505364 .569116 cmyk
f
250.474 267.842 mo
193.865 237.261 li
184.423 244.009 li
226.054 282.509 li
250.474 267.842 li
cp
.652888 .514672 .41004 .30985 cmyk
f
226.27 266.894 mo
169.384 234.051 li
169.384 244.102 li
170.704 244.864 li
170.704 247.073 li
197.827 262.733 li
169.384 246.311 li
169.384 262.665 li
170.704 263.427 li
170.704 265.637 li
224.949 296.955 li
224.949 294.745 li
223.905 294.143 li
226.27 295.508 li
226.27 279.153 li
224.949 278.392 li
224.949 276.182 li
223.905 275.579 li
226.27 276.944 li
226.27 266.894 li
cp
.598474 .456001 .367803 .224399 cmyk
f
223.098 298.028 mo
224.949 296.955 li
224.419 296.581 li
226.27 295.508 li
224.595 293.401 li
222.788 295.624 li
223.098 298.028 li
cp
f
169.384 234.051 mo
167.533 235.124 li
169.276 236.715 li
169.756 235.383 li
169.384 234.051 li
cp
f
224.419 278.018 mo
167.533 245.175 li
167.533 235.124 li
224.419 267.967 li
224.419 278.018 li
cp
.762356 .621912 .461616 .445838 cmyk
f
223.098 279.465 mo
168.854 248.147 li
168.854 245.938 li
223.098 277.255 li
223.098 279.465 li
cp
.814298 .671229 .505364 .569116 cmyk
f
223.098 298.028 mo
168.854 266.71 li
168.854 264.5 li
223.098 295.818 li
223.098 298.028 li
cp
f
192.989 258.124 mo
169.512 244.57 li
169.512 238.014 li
192.989 251.567 li
192.989 258.124 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
198.093 261.071 mo
195.129 259.36 li
195.129 252.804 li
198.093 254.515 li
198.093 261.071 li
cp
f
202.962 263.883 mo
199.998 262.171 li
199.998 255.614 li
202.962 257.326 li
202.962 263.883 li
cp
f
207.832 266.693 mo
204.868 264.983 li
204.868 258.426 li
207.832 260.138 li
207.832 266.693 li
cp
f
212.701 269.505 mo
209.737 267.794 li
209.737 261.237 li
212.701 262.948 li
212.701 269.505 li
cp
f
217.57 272.316 mo
214.606 270.606 li
214.606 264.049 li
217.57 265.76 li
217.57 272.316 li
cp
f
222.44 275.128 mo
219.476 273.416 li
219.476 266.86 li
222.44 268.571 li
222.44 275.128 li
cp
f
192.989 252.466 mo
169.512 238.912 li
169.512 238.014 li
192.989 251.567 li
192.989 252.466 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
198.093 255.413 mo
195.129 253.702 li
195.129 252.804 li
198.093 254.515 li
198.093 255.413 li
cp
f
202.962 258.225 mo
199.998 256.514 li
199.998 255.614 li
202.962 257.326 li
202.962 258.225 li
cp
f
207.832 261.036 mo
204.868 259.324 li
204.868 258.426 li
207.832 260.138 li
207.832 261.036 li
cp
f
212.701 263.847 mo
209.737 262.136 li
209.737 261.237 li
212.701 262.948 li
212.701 263.847 li
cp
f
217.57 266.658 mo
214.606 264.947 li
214.606 264.049 li
217.57 265.76 li
217.57 266.658 li
cp
f
222.44 269.47 mo
219.476 267.759 li
219.476 266.86 li
222.44 268.571 li
222.44 269.47 li
cp
f
172.619 244.608 mo
170.847 243.585 li
170.847 241.164 li
172.619 242.187 li
172.619 244.608 li
cp
f
175.792 246.44 mo
174.019 245.417 li
174.019 242.995 li
175.792 244.019 li
175.792 246.44 li
cp
f
178.964 248.272 mo
177.192 247.248 li
177.192 244.827 li
178.964 245.851 li
178.964 248.272 li
cp
f
182.136 250.104 mo
180.364 249.08 li
180.364 246.658 li
182.136 247.682 li
182.136 250.104 li
cp
f
185.309 251.935 mo
183.537 250.911 li
183.537 248.49 li
185.309 249.514 li
185.309 251.935 li
cp
f
188.482 253.767 mo
186.709 252.743 li
186.709 250.322 li
188.482 251.345 li
188.482 253.767 li
cp
f
191.654 255.598 mo
189.882 254.575 li
189.882 252.153 li
191.654 253.177 li
191.654 255.598 li
cp
f
224.419 296.581 mo
167.533 263.738 li
167.533 247.384 li
224.419 280.227 li
224.419 296.581 li
cp
.762356 .621912 .461616 .445838 cmyk
f
172.064 255.808 mo
169.92 254.569 li
169.92 252.094 li
172.064 253.332 li
172.064 255.808 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
172.064 254.307 mo
169.92 253.069 li
169.92 252.094 li
172.064 253.332 li
172.064 254.307 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
172.064 259.415 mo
169.92 258.177 li
169.92 255.701 li
172.064 256.94 li
172.064 259.415 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
172.064 257.914 mo
169.92 256.677 li
169.92 255.701 li
172.064 256.94 li
172.064 257.914 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
172.064 263.023 mo
169.92 261.784 li
169.92 259.309 li
172.064 260.547 li
172.064 263.023 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
172.064 261.522 mo
169.92 260.283 li
169.92 259.309 li
172.064 260.547 li
172.064 261.522 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
175.792 257.96 mo
173.648 256.722 li
173.648 254.246 li
175.792 255.484 li
175.792 257.96 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
175.792 256.459 mo
173.648 255.221 li
173.648 254.246 li
175.792 255.484 li
175.792 256.459 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
175.792 261.566 mo
173.648 260.329 li
173.648 257.854 li
175.792 259.091 li
175.792 261.566 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
175.792 260.066 mo
173.648 258.828 li
173.648 257.854 li
175.792 259.091 li
175.792 260.066 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
175.792 265.174 mo
173.648 263.937 li
173.648 261.461 li
175.792 262.698 li
175.792 265.174 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
175.792 263.674 mo
173.648 262.436 li
173.648 261.461 li
175.792 262.698 li
175.792 263.674 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
179.519 260.111 mo
177.375 258.874 li
177.375 256.399 li
179.519 257.636 li
179.519 260.111 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
179.519 258.611 mo
177.375 257.373 li
177.375 256.399 li
179.519 257.636 li
179.519 258.611 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
179.519 263.719 mo
177.375 262.482 li
177.375 260.006 li
179.519 261.243 li
179.519 263.719 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
179.519 262.218 mo
177.375 260.981 li
177.375 260.006 li
179.519 261.243 li
179.519 262.218 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
179.519 267.326 mo
177.375 266.088 li
177.375 263.612 li
179.519 264.851 li
179.519 267.326 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
179.519 265.825 mo
177.375 264.588 li
177.375 263.612 li
179.519 264.851 li
179.519 265.825 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
183.246 262.264 mo
181.102 261.025 li
181.102 258.55 li
183.246 259.788 li
183.246 262.264 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
183.246 260.763 mo
181.102 259.525 li
181.102 258.55 li
183.246 259.788 li
183.246 260.763 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
183.246 265.871 mo
181.102 264.633 li
181.102 262.157 li
183.246 263.396 li
183.246 265.871 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
183.246 264.37 mo
181.102 263.133 li
181.102 262.157 li
183.246 263.396 li
183.246 264.37 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
183.246 269.478 mo
181.102 268.24 li
181.102 265.765 li
183.246 267.003 li
183.246 269.478 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
183.246 267.978 mo
181.102 266.739 li
181.102 265.765 li
183.246 267.003 li
183.246 267.978 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
186.974 264.415 mo
184.83 263.178 li
184.83 260.702 li
186.974 261.941 li
186.974 264.415 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
186.974 262.915 mo
184.83 261.677 li
184.83 260.702 li
186.974 261.941 li
186.974 262.915 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
186.974 268.023 mo
184.83 266.785 li
184.83 264.31 li
186.974 265.547 li
186.974 268.023 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
186.974 266.523 mo
184.83 265.284 li
184.83 264.31 li
186.974 265.547 li
186.974 266.523 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
186.974 271.63 mo
184.83 270.393 li
184.83 267.917 li
186.974 269.154 li
186.974 271.63 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
186.974 270.13 mo
184.83 268.892 li
184.83 267.917 li
186.974 269.154 li
186.974 270.13 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
200.799 269.922 mo
188.482 262.811 li
188.482 272.501 li
200.799 279.612 li
200.799 269.922 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
200.799 269.922 mo
188.482 262.811 li
188.482 263.785 li
200.799 270.898 li
200.799 269.922 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
214.963 278.1 mo
202.645 270.988 li
202.645 280.678 li
214.963 287.789 li
214.963 278.1 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
214.963 278.1 mo
202.645 270.988 li
202.645 271.963 li
214.963 279.074 li
214.963 278.1 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
222.44 282.416 mo
216.808 279.165 li
216.808 288.856 li
222.44 292.107 li
222.44 282.416 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
222.44 282.416 mo
216.808 279.165 li
216.808 280.14 li
222.44 283.392 li
222.44 282.416 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
192.168 272.478 mo
189.309 270.827 li
189.309 272.074 li
192.168 273.725 li
192.168 272.478 li
cp
f
192.193 270.601 mo
189.334 268.95 li
189.334 270.197 li
192.193 271.848 li
192.193 270.601 li
cp
f
192.193 268.711 mo
189.334 267.061 li
189.334 268.307 li
192.193 269.957 li
192.193 268.711 li
cp
f
192.193 266.82 mo
189.334 265.17 li
189.334 266.416 li
192.193 268.066 li
192.193 266.82 li
cp
f
196.028 274.706 mo
193.17 273.056 li
193.17 274.303 li
196.028 275.953 li
196.028 274.706 li
cp
f
196.028 272.816 mo
193.17 271.165 li
193.17 272.412 li
196.028 274.063 li
196.028 272.816 li
cp
f
199.888 276.935 mo
197.03 275.284 li
197.03 276.531 li
199.888 278.182 li
199.888 276.935 li
cp
f
199.888 275.044 mo
197.03 273.394 li
197.03 274.641 li
199.888 276.291 li
199.888 275.044 li
cp
f
199.888 273.153 mo
197.03 271.503 li
197.03 272.75 li
199.888 274.4 li
199.888 273.153 li
cp
f
206.373 280.679 mo
203.514 279.028 li
203.514 280.275 li
206.373 281.926 li
206.373 280.679 li
cp
f
210.233 282.907 mo
207.375 281.257 li
207.375 282.504 li
210.233 284.154 li
210.233 282.907 li
cp
f
210.233 281.017 mo
207.375 279.366 li
207.375 280.613 li
210.233 282.264 li
210.233 281.017 li
cp
f
210.233 279.126 mo
207.375 277.476 li
207.375 278.723 li
210.233 280.373 li
210.233 279.126 li
cp
f
214.093 285.136 mo
211.235 283.485 li
211.235 284.733 li
214.093 286.383 li
214.093 285.136 li
cp
f
214.093 283.245 mo
211.235 281.595 li
211.235 282.842 li
214.093 284.492 li
214.093 283.245 li
cp
f
214.093 281.355 mo
211.235 279.704 li
211.235 280.951 li
214.093 282.602 li
214.093 281.355 li
cp
f
221.053 289.154 mo
218.195 287.504 li
218.195 288.751 li
221.053 290.401 li
221.053 289.154 li
cp
f
221.053 287.264 mo
218.195 285.613 li
218.195 286.86 li
221.053 288.511 li
221.053 287.264 li
cp
f
221.053 285.373 mo
218.195 283.723 li
218.195 284.97 li
221.053 286.62 li
221.053 285.373 li
cp
f
214.093 279.465 mo
211.235 277.815 li
211.235 279.061 li
214.093 280.711 li
214.093 279.465 li
cp
f
226.27 276.944 mo
224.419 278.018 li
224.419 276.05 li
226.27 275.639 li
226.27 276.944 li
cp
.598474 .456001 .367803 .224399 cmyk
f
250.474 178.655 mo
250.474 363.537 li
307.36 330.694 li
307.36 318.309 li
307.36 145.813 li
250.474 178.655 li
cp
.787228 .642512 .490364 .524193 cmyk
f
307.359 145.814 mo
250.473 112.971 li
193.59 145.813 li
250.475 178.655 li
307.359 145.814 li
cp
.598474 .456001 .367803 .224399 cmyk
f
194.909 313.962 mo
193.589 313.2 li
194.909 312.438 li
194.909 312.588 li
194.909 313.962 li
cp
f
194.909 295.4 mo
193.589 294.637 li
194.909 293.874 li
194.909 294.025 li
194.909 295.4 li
cp
f
194.909 283.139 mo
193.589 282.376 li
194.909 281.614 li
194.909 281.765 li
194.909 283.139 li
cp
f
194.909 264.575 mo
193.589 263.814 li
194.909 263.051 li
194.909 263.201 li
194.909 264.575 li
cp
f
194.909 252.316 mo
193.589 251.553 li
194.909 250.79 li
194.909 250.941 li
194.909 252.316 li
cp
f
194.909 233.752 mo
193.589 232.989 li
194.909 232.227 li
194.909 232.377 li
194.909 233.752 li
cp
f
194.909 221.491 mo
193.589 220.73 li
194.909 219.967 li
194.909 220.117 li
194.909 221.491 li
cp
f
194.909 202.928 mo
193.589 202.166 li
194.909 201.403 li
194.909 201.554 li
194.909 202.928 li
cp
f
194.909 190.668 mo
193.589 189.905 li
194.909 189.143 li
194.909 189.293 li
194.909 190.668 li
cp
f
194.909 172.105 mo
193.589 171.342 li
194.909 170.58 li
194.909 170.73 li
194.909 172.105 li
cp
f
194.909 159.844 mo
193.589 159.082 li
194.909 158.319 li
194.909 158.47 li
194.909 159.844 li
cp
f
307.36 158.988 mo
250.474 191.831 li
250.474 188.811 li
307.36 155.967 li
307.36 158.988 li
cp
.814298 .671229 .505364 .569116 cmyk
f
307.36 171.243 mo
250.474 204.086 li
250.474 201.9 li
307.36 169.057 li
307.36 171.243 li
cp
f
307.36 189.676 mo
250.474 222.52 li
250.474 220.333 li
307.36 187.49 li
307.36 189.676 li
cp
f
307.36 220.437 mo
250.474 253.279 li
250.474 250.259 li
307.36 217.415 li
307.36 220.437 li
cp
f
307.36 232.691 mo
250.474 265.534 li
250.474 263.349 li
307.36 230.505 li
307.36 232.691 li
cp
f
307.36 251.124 mo
250.474 283.968 li
250.474 281.781 li
307.36 248.939 li
307.36 251.124 li
cp
f
307.36 281.885 mo
250.474 314.728 li
250.474 311.707 li
307.36 278.863 li
307.36 281.885 li
cp
f
307.36 294.14 mo
250.474 326.983 li
250.474 324.797 li
307.36 291.953 li
307.36 294.14 li
cp
f
307.36 312.573 mo
250.474 345.416 li
250.474 343.23 li
307.36 310.387 li
307.36 312.573 li
cp
f
260.63 238.654 mo
258.961 239.618 li
258.961 224.504 li
260.63 223.54 li
260.63 238.654 li
cp
.826596 .685328 .51046 .591333 cmyk
f
265.41 235.894 mo
263.741 236.858 li
263.741 221.744 li
265.41 220.78 li
265.41 235.894 li
cp
f
270.191 233.134 mo
268.522 234.098 li
268.522 218.984 li
270.191 218.021 li
270.191 233.134 li
cp
f
274.971 230.374 mo
273.302 231.338 li
273.302 216.224 li
274.971 215.26 li
274.971 230.374 li
cp
f
279.752 227.614 mo
278.083 228.578 li
278.083 213.464 li
279.752 212.5 li
279.752 227.614 li
cp
f
284.532 224.855 mo
282.863 225.817 li
282.863 210.704 li
284.532 209.74 li
284.532 224.855 li
cp
f
289.313 222.094 mo
287.643 223.058 li
287.643 207.944 li
289.313 206.981 li
289.313 222.094 li
cp
f
294.094 219.334 mo
292.424 220.298 li
292.424 205.184 li
294.094 204.22 li
294.094 219.334 li
cp
f
298.874 216.574 mo
297.204 217.538 li
297.204 202.424 li
298.874 201.46 li
298.874 216.574 li
cp
f
348.267 443.764 mo
250.001 387.029 li
348.264 330.297 li
446.53 387.031 li
348.267 443.764 li
.0842908 .057557 .0689097 0 cmyk
f
343.266 237.09 mo
355.939 241.804 li
348.74 420.272 li
345.091 411.797 li
343.266 237.09 li
.787228 .642512 .490364 .524193 cmyk
f
348.74 258.709 mo
348.74 248.658 li
347.42 247.896 li
347.42 244.875 li
293.175 213.557 li
293.175 216.578 li
291.855 215.816 li
291.855 225.866 li
293.175 226.629 li
293.175 228.838 li
291.855 228.076 li
291.855 244.43 li
293.175 245.192 li
293.175 247.401 li
347.42 278.72 li
347.42 276.511 li
348.74 277.273 li
348.74 260.919 li
347.42 260.156 li
347.42 257.947 li
348.74 258.709 li
cp
.762356 .621912 .461616 .445838 cmyk
f
348.74 289.533 mo
291.855 256.691 li
291.855 246.64 li
348.74 279.483 li
348.74 289.533 li
cp
f
347.42 290.981 mo
293.175 259.662 li
293.175 257.452 li
347.42 288.771 li
347.42 290.981 li
cp
.814298 .671229 .505364 .569116 cmyk
f
347.42 309.543 mo
293.175 278.226 li
293.175 276.016 li
347.42 307.334 li
347.42 309.543 li
cp
f
317.31 269.64 mo
293.834 256.086 li
293.834 249.529 li
317.31 263.083 li
317.31 269.64 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
322.414 272.587 mo
319.45 270.876 li
319.45 264.319 li
322.414 266.03 li
322.414 272.587 li
cp
f
327.284 275.399 mo
324.32 273.687 li
324.32 267.13 li
327.284 268.842 li
327.284 275.399 li
cp
f
332.153 278.209 mo
329.189 276.498 li
329.189 269.941 li
332.153 271.652 li
332.153 278.209 li
cp
f
337.023 281.021 mo
334.058 279.31 li
334.058 272.753 li
337.023 274.464 li
337.023 281.021 li
cp
f
341.892 283.832 mo
338.928 282.121 li
338.928 275.565 li
341.892 277.275 li
341.892 283.832 li
cp
f
346.761 286.644 mo
343.797 284.932 li
343.797 278.375 li
346.761 280.087 li
346.761 286.644 li
cp
f
317.31 263.982 mo
293.834 250.428 li
293.834 249.529 li
317.31 263.083 li
317.31 263.982 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
322.414 266.929 mo
319.45 265.218 li
319.45 264.319 li
322.414 266.03 li
322.414 266.929 li
cp
f
327.284 269.74 mo
324.32 268.029 li
324.32 267.13 li
327.284 268.842 li
327.284 269.74 li
cp
f
332.153 272.552 mo
329.189 270.84 li
329.189 269.941 li
332.153 271.652 li
332.153 272.552 li
cp
f
337.023 275.362 mo
334.058 273.651 li
334.058 272.753 li
337.023 274.464 li
337.023 275.362 li
cp
f
341.892 278.174 mo
338.928 276.463 li
338.928 275.565 li
341.892 277.275 li
341.892 278.174 li
cp
f
346.761 280.985 mo
343.797 279.275 li
343.797 278.375 li
346.761 280.087 li
346.761 280.985 li
cp
f
296.941 256.124 mo
295.168 255.101 li
295.168 252.679 li
296.941 253.702 li
296.941 256.124 li
cp
f
300.113 257.955 mo
298.341 256.932 li
298.341 254.511 li
300.113 255.534 li
300.113 257.955 li
cp
f
303.285 259.787 mo
301.513 258.764 li
301.513 256.343 li
303.285 257.366 li
303.285 259.787 li
cp
f
306.458 261.619 mo
304.686 260.596 li
304.686 258.174 li
306.458 259.197 li
306.458 261.619 li
cp
f
309.631 263.45 mo
307.858 262.427 li
307.858 260.006 li
309.631 261.029 li
309.631 263.45 li
cp
f
312.803 265.282 mo
311.031 264.259 li
311.031 261.838 li
312.803 262.86 li
312.803 265.282 li
cp
f
315.976 267.113 mo
314.203 266.09 li
314.203 263.669 li
315.976 264.692 li
315.976 267.113 li
cp
f
348.74 308.097 mo
291.855 275.254 li
291.855 258.9 li
348.74 291.742 li
348.74 308.097 li
cp
.762356 .621912 .461616 .445838 cmyk
f
296.385 267.323 mo
294.242 266.085 li
294.242 263.609 li
296.385 264.848 li
296.385 267.323 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
296.385 265.822 mo
294.242 264.585 li
294.242 263.609 li
296.385 264.848 li
296.385 265.822 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
296.385 270.931 mo
294.242 269.692 li
294.242 267.217 li
296.385 268.455 li
296.385 270.931 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
296.385 269.43 mo
294.242 268.192 li
294.242 267.217 li
296.385 268.455 li
296.385 269.43 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
296.385 274.537 mo
294.242 273.3 li
294.242 270.824 li
296.385 272.063 li
296.385 274.537 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
296.385 273.037 mo
294.242 271.799 li
294.242 270.824 li
296.385 272.063 li
296.385 273.037 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
300.113 269.475 mo
297.969 268.237 li
297.969 265.762 li
300.113 267 li
300.113 269.475 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
300.113 267.975 mo
297.969 266.736 li
297.969 265.762 li
300.113 267 li
300.113 267.975 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
300.113 273.082 mo
297.969 271.845 li
297.969 269.369 li
300.113 270.607 li
300.113 273.082 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
300.113 271.582 mo
297.969 270.344 li
297.969 269.369 li
300.113 270.607 li
300.113 271.582 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
300.113 276.69 mo
297.969 275.452 li
297.969 272.977 li
300.113 274.214 li
300.113 276.69 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
300.113 275.19 mo
297.969 273.951 li
297.969 272.977 li
300.113 274.214 li
300.113 275.19 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
303.841 271.627 mo
301.697 270.39 li
301.697 267.914 li
303.841 269.151 li
303.841 271.627 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
303.841 270.127 mo
301.697 268.889 li
301.697 267.914 li
303.841 269.151 li
303.841 270.127 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
303.841 275.234 mo
301.697 273.996 li
301.697 271.522 li
303.841 272.759 li
303.841 275.234 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
303.841 273.733 mo
301.697 272.496 li
301.697 271.522 li
303.841 272.759 li
303.841 273.733 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
303.841 278.842 mo
301.697 277.604 li
301.697 275.128 li
303.841 276.366 li
303.841 278.842 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
303.841 277.341 mo
301.697 276.104 li
301.697 275.128 li
303.841 276.366 li
303.841 277.341 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
307.568 273.779 mo
305.424 272.541 li
305.424 270.066 li
307.568 271.304 li
307.568 273.779 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
307.568 272.278 mo
305.424 271.041 li
305.424 270.066 li
307.568 271.304 li
307.568 272.278 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
307.568 277.387 mo
305.424 276.149 li
305.424 273.673 li
307.568 274.911 li
307.568 277.387 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
307.568 275.886 mo
305.424 274.649 li
305.424 273.673 li
307.568 274.911 li
307.568 275.886 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
307.568 280.993 mo
305.424 279.756 li
305.424 277.28 li
307.568 278.519 li
307.568 280.993 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
307.568 279.493 mo
305.424 278.255 li
305.424 277.28 li
307.568 278.519 li
307.568 279.493 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
311.295 275.931 mo
309.151 274.693 li
309.151 272.218 li
311.295 273.456 li
311.295 275.931 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
311.295 274.431 mo
309.151 273.192 li
309.151 272.218 li
311.295 273.456 li
311.295 274.431 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
311.295 279.538 mo
309.151 278.301 li
309.151 275.825 li
311.295 277.063 li
311.295 279.538 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
311.295 278.038 mo
309.151 276.8 li
309.151 275.825 li
311.295 277.063 li
311.295 278.038 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
311.295 283.146 mo
309.151 281.908 li
309.151 279.433 li
311.295 280.67 li
311.295 283.146 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
311.295 281.646 mo
309.151 280.407 li
309.151 279.433 li
311.295 280.67 li
311.295 281.646 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
325.12 281.438 mo
312.803 274.326 li
312.803 284.017 li
325.12 291.128 li
325.12 281.438 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
325.12 281.438 mo
312.803 274.326 li
312.803 275.301 li
325.12 282.412 li
325.12 281.438 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
339.284 289.615 mo
326.966 282.504 li
326.966 292.193 li
339.284 299.305 li
339.284 289.615 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
339.284 289.615 mo
326.966 282.504 li
326.966 283.479 li
339.284 290.59 li
339.284 289.615 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
346.761 293.932 mo
341.13 290.681 li
341.13 300.371 li
346.761 303.622 li
346.761 293.932 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
346.761 293.932 mo
341.13 290.681 li
341.13 291.655 li
346.761 294.906 li
346.761 293.932 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
316.49 283.993 mo
313.631 282.343 li
313.631 283.59 li
316.49 285.24 li
316.49 283.993 li
cp
f
316.514 282.116 mo
313.656 280.466 li
313.656 281.713 li
316.514 283.363 li
316.514 282.116 li
cp
f
316.514 280.226 mo
313.656 278.576 li
313.656 279.822 li
316.514 281.473 li
316.514 280.226 li
cp
f
316.514 278.336 mo
313.656 276.686 li
313.656 277.932 li
316.514 279.582 li
316.514 278.336 li
cp
f
320.35 286.222 mo
317.491 284.571 li
317.491 285.818 li
320.35 287.469 li
320.35 286.222 li
cp
f
320.35 284.331 mo
317.491 282.681 li
317.491 283.928 li
320.35 285.578 li
320.35 284.331 li
cp
f
324.21 288.45 mo
321.351 286.8 li
321.351 288.047 li
324.21 289.697 li
324.21 288.45 li
cp
f
324.21 286.56 mo
321.351 284.909 li
321.351 286.156 li
324.21 287.807 li
324.21 286.56 li
cp
f
324.21 284.669 mo
321.351 283.019 li
321.351 284.266 li
324.21 285.916 li
324.21 284.669 li
cp
f
330.695 292.194 mo
327.836 290.544 li
327.836 291.791 li
330.695 293.441 li
330.695 292.194 li
cp
f
334.554 294.423 mo
331.696 292.773 li
331.696 294.02 li
334.554 295.67 li
334.554 294.423 li
cp
f
334.554 292.532 mo
331.696 290.882 li
331.696 292.129 li
334.554 293.779 li
334.554 292.532 li
cp
f
334.554 290.642 mo
331.696 288.991 li
331.696 290.238 li
334.554 291.889 li
334.554 290.642 li
cp
f
338.415 296.651 mo
335.556 295.001 li
335.556 296.248 li
338.415 297.899 li
338.415 296.651 li
cp
f
338.415 294.761 mo
335.556 293.11 li
335.556 294.358 li
338.415 296.008 li
338.415 294.761 li
cp
f
338.415 292.87 mo
335.556 291.22 li
335.556 292.467 li
338.415 294.117 li
338.415 292.87 li
cp
f
345.375 300.67 mo
342.516 299.02 li
342.516 300.267 li
345.375 301.917 li
345.375 300.67 li
cp
f
345.375 298.779 mo
342.516 297.129 li
342.516 298.376 li
345.375 300.026 li
345.375 298.779 li
cp
f
345.375 296.889 mo
342.516 295.238 li
342.516 296.485 li
345.375 298.136 li
345.375 296.889 li
cp
f
338.415 290.98 mo
335.556 289.33 li
335.556 290.576 li
338.415 292.227 li
338.415 290.98 li
cp
f
348.74 320.357 mo
348.74 310.306 li
291.855 277.463 li
291.855 287.514 li
293.175 288.276 li
293.175 290.485 li
291.855 289.723 li
291.855 306.077 li
293.175 306.84 li
293.175 309.049 li
347.42 340.367 li
347.42 338.158 li
348.74 338.92 li
348.74 322.566 li
347.42 321.804 li
347.42 319.595 li
348.74 320.357 li
cp
.762356 .621912 .461616 .445838 cmyk
f
348.74 351.181 mo
291.855 318.338 li
291.855 308.286 li
348.74 341.13 li
348.74 351.181 li
cp
f
347.42 352.628 mo
293.175 321.31 li
293.175 319.1 li
347.42 350.418 li
347.42 352.628 li
cp
.814298 .671229 .505364 .569116 cmyk
f
347.42 371.191 mo
293.175 339.872 li
293.175 337.663 li
347.42 368.982 li
347.42 371.191 li
cp
f
317.31 331.287 mo
293.834 317.733 li
293.834 311.177 li
317.31 324.731 li
317.31 331.287 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
322.414 334.234 mo
319.45 332.523 li
319.45 325.967 li
322.414 327.678 li
322.414 334.234 li
cp
f
327.284 337.045 mo
324.32 335.334 li
324.32 328.777 li
327.284 330.489 li
327.284 337.045 li
cp
f
332.153 339.857 mo
329.189 338.146 li
329.189 331.589 li
332.153 333.3 li
332.153 339.857 li
cp
f
337.023 342.668 mo
334.058 340.957 li
334.058 334.4 li
337.023 336.111 li
337.023 342.668 li
cp
f
341.892 345.48 mo
338.928 343.768 li
338.928 337.212 li
341.892 338.923 li
341.892 345.48 li
cp
f
346.761 348.291 mo
343.797 346.579 li
343.797 340.023 li
346.761 341.734 li
346.761 348.291 li
cp
f
317.31 325.629 mo
293.834 312.075 li
293.834 311.177 li
317.31 324.731 li
317.31 325.629 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
322.414 328.576 mo
319.45 326.865 li
319.45 325.967 li
322.414 327.678 li
322.414 328.576 li
cp
f
327.284 331.388 mo
324.32 329.676 li
324.32 328.777 li
327.284 330.489 li
327.284 331.388 li
cp
f
332.153 334.199 mo
329.189 332.487 li
329.189 331.589 li
332.153 333.3 li
332.153 334.199 li
cp
f
337.023 337.01 mo
334.058 335.299 li
334.058 334.4 li
337.023 336.111 li
337.023 337.01 li
cp
f
341.892 339.821 mo
338.928 338.11 li
338.928 337.212 li
341.892 338.923 li
341.892 339.821 li
cp
f
346.761 342.633 mo
343.797 340.922 li
343.797 340.023 li
346.761 341.734 li
346.761 342.633 li
cp
f
296.941 317.772 mo
295.168 316.748 li
295.168 314.326 li
296.941 315.35 li
296.941 317.772 li
cp
f
300.113 319.603 mo
298.341 318.579 li
298.341 316.158 li
300.113 317.182 li
300.113 319.603 li
cp
f
303.285 321.435 mo
301.513 320.411 li
301.513 317.99 li
303.285 319.013 li
303.285 321.435 li
cp
f
306.458 323.266 mo
304.686 322.243 li
304.686 319.821 li
306.458 320.845 li
306.458 323.266 li
cp
f
309.631 325.098 mo
307.858 324.074 li
307.858 321.653 li
309.631 322.677 li
309.631 325.098 li
cp
f
312.803 326.93 mo
311.031 325.906 li
311.031 323.484 li
312.803 324.508 li
312.803 326.93 li
cp
f
315.976 328.761 mo
314.203 327.737 li
314.203 325.316 li
315.976 326.34 li
315.976 328.761 li
cp
f
348.74 369.744 mo
291.855 336.901 li
291.855 320.547 li
348.74 353.39 li
348.74 369.744 li
cp
.762356 .621912 .461616 .445838 cmyk
f
296.385 328.971 mo
294.242 327.733 li
294.242 325.257 li
296.385 326.495 li
296.385 328.971 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
296.385 327.47 mo
294.242 326.233 li
294.242 325.257 li
296.385 326.495 li
296.385 327.47 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
296.385 332.578 mo
294.242 331.34 li
294.242 328.864 li
296.385 330.103 li
296.385 332.578 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
296.385 331.077 mo
294.242 329.839 li
294.242 328.864 li
296.385 330.103 li
296.385 331.077 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
296.385 336.185 mo
294.242 334.947 li
294.242 332.472 li
296.385 333.709 li
296.385 336.185 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
296.385 334.685 mo
294.242 333.446 li
294.242 332.472 li
296.385 333.709 li
296.385 334.685 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
300.113 331.122 mo
297.969 329.885 li
297.969 327.409 li
300.113 328.647 li
300.113 331.122 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
300.113 329.622 mo
297.969 328.384 li
297.969 327.409 li
300.113 328.647 li
300.113 329.622 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
300.113 334.73 mo
297.969 333.492 li
297.969 331.017 li
300.113 332.254 li
300.113 334.73 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
300.113 333.23 mo
297.969 331.991 li
297.969 331.017 li
300.113 332.254 li
300.113 333.23 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
300.113 338.337 mo
297.969 337.1 li
297.969 334.624 li
300.113 335.861 li
300.113 338.337 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
300.113 336.836 mo
297.969 335.599 li
297.969 334.624 li
300.113 335.861 li
300.113 336.836 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
303.841 333.275 mo
301.697 332.037 li
301.697 329.562 li
303.841 330.799 li
303.841 333.275 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
303.841 331.774 mo
301.697 330.536 li
301.697 329.562 li
303.841 330.799 li
303.841 331.774 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
303.841 336.882 mo
301.697 335.644 li
301.697 333.168 li
303.841 334.406 li
303.841 336.882 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
303.841 335.381 mo
301.697 334.144 li
301.697 333.168 li
303.841 334.406 li
303.841 335.381 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
303.841 340.489 mo
301.697 339.251 li
301.697 336.775 li
303.841 338.014 li
303.841 340.489 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
303.841 338.988 mo
301.697 337.751 li
301.697 336.775 li
303.841 338.014 li
303.841 338.988 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
307.568 335.427 mo
305.424 334.189 li
305.424 331.713 li
307.568 332.951 li
307.568 335.427 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
307.568 333.926 mo
305.424 332.689 li
305.424 331.713 li
307.568 332.951 li
307.568 333.926 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
307.568 339.033 mo
305.424 337.796 li
305.424 335.32 li
307.568 336.559 li
307.568 339.033 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
307.568 337.533 mo
305.424 336.295 li
305.424 335.32 li
307.568 336.559 li
307.568 337.533 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
307.568 342.641 mo
305.424 341.403 li
305.424 338.928 li
307.568 340.165 li
307.568 342.641 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
307.568 341.141 mo
305.424 339.902 li
305.424 338.928 li
307.568 340.165 li
307.568 341.141 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
311.295 337.578 mo
309.151 336.341 li
309.151 333.865 li
311.295 335.103 li
311.295 337.578 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
311.295 336.078 mo
309.151 334.84 li
309.151 333.865 li
311.295 335.103 li
311.295 336.078 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
311.295 341.186 mo
309.151 339.948 li
309.151 337.473 li
311.295 338.71 li
311.295 341.186 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
311.295 339.686 mo
309.151 338.447 li
309.151 337.473 li
311.295 338.71 li
311.295 339.686 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
311.295 344.793 mo
309.151 343.555 li
309.151 341.08 li
311.295 342.317 li
311.295 344.793 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
311.295 343.292 mo
309.151 342.055 li
309.151 341.08 li
311.295 342.317 li
311.295 343.292 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
325.12 343.085 mo
312.803 335.974 li
312.803 345.663 li
325.12 352.775 li
325.12 343.085 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
325.12 343.085 mo
312.803 335.974 li
312.803 336.948 li
325.12 344.06 li
325.12 343.085 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
339.284 351.263 mo
326.966 344.15 li
326.966 353.841 li
339.284 360.952 li
339.284 351.263 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
339.284 351.263 mo
326.966 344.15 li
326.966 345.126 li
339.284 352.237 li
339.284 351.263 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
346.761 355.579 mo
341.13 352.328 li
341.13 362.018 li
346.761 365.27 li
346.761 355.579 li
cp
.0177615 .27451 .859403 .000427253 cmyk
f
346.761 355.579 mo
341.13 352.328 li
341.13 353.303 li
346.761 356.554 li
346.761 355.579 li
cp
.105531 .557916 .950103 .0140383 cmyk
f
316.49 345.641 mo
313.631 343.99 li
313.631 345.237 li
316.49 346.887 li
316.49 345.641 li
cp
f
316.514 343.764 mo
313.656 342.113 li
313.656 343.36 li
316.514 345.011 li
316.514 343.764 li
cp
f
316.514 341.873 mo
313.656 340.223 li
313.656 341.47 li
316.514 343.12 li
316.514 341.873 li
cp
f
316.514 339.983 mo
313.656 338.333 li
313.656 339.579 li
316.514 341.23 li
316.514 339.983 li
cp
f
320.35 347.869 mo
317.491 346.219 li
317.491 347.466 li
320.35 349.116 li
320.35 347.869 li
cp
f
320.35 345.979 mo
317.491 344.328 li
317.491 345.575 li
320.35 347.226 li
320.35 345.979 li
cp
f
324.21 350.098 mo
321.351 348.447 li
321.351 349.694 li
324.21 351.345 li
324.21 350.098 li
cp
f
324.21 348.207 mo
321.351 346.557 li
321.351 347.804 li
324.21 349.454 li
324.21 348.207 li
cp
f
324.21 346.316 mo
321.351 344.666 li
321.351 345.913 li
324.21 347.564 li
324.21 346.316 li
cp
f
330.695 353.842 mo
327.836 352.191 li
327.836 353.439 li
330.695 355.088 li
330.695 353.842 li
cp
f
334.554 356.07 mo
331.696 354.42 li
331.696 355.667 li
334.554 357.317 li
334.554 356.07 li
cp
f
334.554 354.18 mo
331.696 352.529 li
331.696 353.776 li
334.554 355.427 li
334.554 354.18 li
cp
f
334.554 352.289 mo
331.696 350.639 li
331.696 351.886 li
334.554 353.536 li
334.554 352.289 li
cp
f
338.415 358.299 mo
335.556 356.649 li
335.556 357.896 li
338.415 359.546 li
338.415 358.299 li
cp
f
338.415 356.408 mo
335.556 354.758 li
335.556 356.005 li
338.415 357.655 li
338.415 356.408 li
cp
f
338.415 354.518 mo
335.556 352.867 li
335.556 354.114 li
338.415 355.765 li
338.415 354.518 li
cp
f
345.375 362.317 mo
342.516 360.667 li
342.516 361.914 li
345.375 363.565 li
345.375 362.317 li
cp
f
345.375 360.427 mo
342.516 358.776 li
342.516 360.024 li
345.375 361.674 li
345.375 360.427 li
cp
f
345.375 358.536 mo
342.516 356.886 li
342.516 358.133 li
345.375 359.783 li
345.375 358.536 li
cp
f
338.415 352.627 mo
335.556 350.977 li
335.556 352.224 li
338.415 353.874 li
338.415 352.627 li
cp
f
348.74 382.004 mo
348.74 371.953 li
291.855 339.11 li
291.855 349.161 li
293.175 349.924 li
293.175 352.05 li
291.855 351.371 li
291.855 367.725 li
293.175 368.487 li
293.175 370.696 li
347.42 402.015 li
347.42 399.806 li
348.74 400.567 li
348.74 384.214 li
347.42 383.368 li
347.42 381.242 li
348.74 382.004 li
cp
.762356 .621912 .461616 .445838 cmyk
f
348.74 420.272 mo
291.855 387.429 li
291.855 369.934 li
348.74 402.776 li
348.74 420.272 li
f
348.74 245.638 mo
291.855 212.795 li
291.855 202.546 li
348.74 235.39 li
348.74 245.638 li
cp
f
297.329 387.83 mo
295.503 386.776 li
295.503 374.8 li
297.329 375.854 li
297.329 387.83 li
.814298 .671229 .505364 .569116 cmyk
f
300.454 389.635 mo
298.629 388.58 li
298.629 376.604 li
300.454 377.658 li
300.454 389.635 li
f
303.58 391.439 mo
301.754 390.385 li
301.754 378.408 li
303.58 379.462 li
303.58 391.439 li
f
311.166 395.819 mo
309.341 394.765 li
309.341 382.788 li
311.166 383.842 li
311.166 395.819 li
f
314.292 397.623 mo
312.466 396.569 li
312.466 384.593 li
314.292 385.647 li
314.292 397.623 li
f
317.417 399.428 mo
315.591 398.374 li
315.591 386.398 li
317.417 387.451 li
317.417 399.428 li
f
325.004 403.808 mo
323.178 402.754 li
323.178 390.777 li
325.004 391.831 li
325.004 403.808 li
f
328.129 405.612 mo
326.303 404.559 li
326.303 392.582 li
328.129 393.636 li
328.129 405.612 li
f
331.254 407.417 mo
329.429 406.363 li
329.429 394.386 li
331.254 395.441 li
331.254 407.417 li
f
338.84 411.797 mo
337.015 410.743 li
337.015 398.767 li
338.84 399.82 li
338.84 411.797 li
f
341.966 413.602 mo
340.141 412.547 li
340.141 400.57 li
341.966 401.625 li
341.966 413.602 li
f
345.091 415.405 mo
343.266 414.352 li
343.266 402.375 li
345.091 403.429 li
345.091 415.405 li
f
348.74 407.886 mo
345.091 405.779 li
345.091 403.429 li
348.74 405.536 li
348.74 407.886 li
343.266 404.725 mo
341.966 403.974 li
341.966 401.625 li
341.506 401.359 li
343.266 402.375 li
343.266 404.725 li
340.141 402.921 mo
338.84 402.17 li
338.84 399.82 li
337.015 398.767 li
337.015 401.116 li
331.254 397.79 li
331.254 395.441 li
330.603 395.064 li
340.141 400.571 li
340.141 402.921 li
329.429 396.736 mo
328.129 395.985 li
328.129 393.636 li
326.303 392.582 li
326.303 394.932 li
325.004 394.181 li
325.004 391.831 li
329.429 394.386 li
329.429 396.736 li
323.178 393.127 mo
317.417 389.801 li
317.417 387.451 li
315.591 386.398 li
315.591 388.747 li
314.292 387.996 li
314.292 385.647 li
323.586 391.013 li
323.178 390.777 li
323.178 393.127 li
312.466 386.942 mo
311.166 386.192 li
311.166 383.842 li
313.275 385.06 li
312.466 384.593 li
312.466 386.942 li
309.341 385.138 mo
303.58 381.812 li
303.58 379.462 li
309.341 382.788 li
309.341 385.138 li
301.754 380.758 mo
300.454 380.007 li
300.454 377.658 li
298.629 376.604 li
298.629 378.953 li
297.329 378.203 li
297.329 375.854 li
295.503 374.8 li
295.503 377.149 li
291.855 375.042 li
291.855 372.692 li
302.929 379.086 li
301.754 378.408 li
301.754 380.758 li
.797971 .654963 .48838 .522667 cmyk
f
297.329 378.203 mo
295.503 377.149 li
295.503 374.8 li
297.329 375.854 li
297.329 378.203 li
.814298 .671229 .505364 .569116 cmyk
f
300.454 380.007 mo
298.629 378.953 li
298.629 376.604 li
300.454 377.658 li
300.454 380.007 li
f
303.58 381.812 mo
301.754 380.758 li
301.754 378.408 li
302.929 379.086 li
303.58 379.462 li
303.58 381.812 li
f
311.166 386.192 mo
309.341 385.138 li
309.341 382.788 li
311.166 383.842 li
311.166 386.192 li
f
314.292 387.996 mo
312.466 386.942 li
312.466 384.593 li
313.275 385.06 li
314.292 385.647 li
314.292 387.996 li
f
317.417 389.801 mo
315.591 388.747 li
315.591 386.398 li
317.417 387.451 li
317.417 389.801 li
f
325.004 394.181 mo
323.178 393.127 li
323.178 390.777 li
323.586 391.013 li
325.004 391.831 li
325.004 394.181 li
f
328.129 395.985 mo
326.303 394.932 li
326.303 392.582 li
328.129 393.636 li
328.129 395.985 li
f
331.254 397.79 mo
329.429 396.736 li
329.429 394.386 li
330.603 395.064 li
331.254 395.441 li
331.254 397.79 li
f
338.84 402.17 mo
337.015 401.116 li
337.015 398.767 li
338.84 399.82 li
338.84 402.17 li
f
341.966 403.974 mo
340.141 402.921 li
340.141 400.571 li
341.506 401.359 li
341.966 401.625 li
341.966 403.974 li
f
345.091 405.779 mo
343.266 404.725 li
343.266 402.375 li
345.091 403.429 li
345.091 405.779 li
f
347.195 237.663 mo
293.4 206.604 li
293.4 205.145 li
347.195 236.203 li
347.195 237.663 li
cp
f
347.195 240.352 mo
293.4 209.292 li
293.4 207.833 li
347.195 238.892 li
347.195 240.352 li
cp
f
347.195 243.039 mo
293.4 211.981 li
293.4 210.521 li
347.195 241.58 li
347.195 243.039 li
cp
f
348.74 235.39 mo
348.74 420.272 li
405.626 387.429 li
405.626 375.042 li
405.626 202.546 li
348.74 235.39 li
cp
.787228 .642512 .490364 .524193 cmyk
f
405.625 202.547 mo
348.739 169.704 li
291.855 202.546 li
348.741 235.39 li
405.625 202.547 li
cp
.598474 .456001 .367803 .224399 cmyk
f
293.175 370.696 mo
291.855 369.934 li
293.175 369.172 li
293.175 369.322 li
293.175 370.696 li
cp
f
293.175 352.133 mo
291.855 351.37 li
293.175 350.608 li
293.175 350.759 li
293.175 352.133 li
cp
f
293.175 339.872 mo
291.855 339.11 li
293.175 338.348 li
293.175 338.498 li
293.175 339.872 li
cp
f
293.175 321.31 mo
291.855 320.547 li
293.175 319.784 li
293.175 319.935 li
293.175 321.31 li
cp
f
293.175 309.049 mo
291.855 308.286 li
293.175 307.525 li
293.175 307.675 li
293.175 309.049 li
cp
f
293.175 290.485 mo
291.855 289.724 li
293.175 288.961 li
293.175 289.111 li
293.175 290.485 li
cp
f
293.175 278.226 mo
291.855 277.463 li
293.175 276.7 li
293.175 276.851 li
293.175 278.226 li
cp
f
293.175 259.662 mo
291.855 258.9 li
293.175 258.137 li
293.175 258.287 li
293.175 259.662 li
cp
f
293.175 247.401 mo
291.855 246.64 li
293.175 245.877 li
293.175 246.027 li
293.175 247.401 li
cp
f
293.175 228.838 mo
291.855 228.076 li
293.175 227.314 li
293.175 227.464 li
293.175 228.838 li
cp
f
293.175 216.578 mo
291.855 215.816 li
293.175 215.053 li
293.175 215.203 li
293.175 216.578 li
cp
f
405.626 215.821 mo
348.74 248.664 li
348.74 245.643 li
405.626 212.8 li
405.626 215.821 li
cp
.814298 .671229 .505364 .569116 cmyk
f
405.626 228.075 mo
348.74 260.919 li
348.74 258.733 li
405.626 225.89 li
405.626 228.075 li
cp
f
405.626 246.509 mo
348.74 279.352 li
348.74 277.166 li
405.626 244.323 li
405.626 246.509 li
cp
f
405.626 277.27 mo
348.74 310.112 li
348.74 307.091 li
405.626 274.248 li
405.626 277.27 li
cp
f
405.626 289.524 mo
348.74 322.367 li
348.74 320.181 li
405.626 287.338 li
405.626 289.524 li
cp
f
405.626 307.957 mo
348.74 340.8 li
348.74 338.614 li
405.626 305.772 li
405.626 307.957 li
cp
f
405.626 338.718 mo
348.74 371.561 li
348.74 368.539 li
405.626 335.696 li
405.626 338.718 li
cp
f
405.626 350.972 mo
348.74 383.816 li
348.74 381.629 li
405.626 348.786 li
405.626 350.972 li
cp
f
405.626 369.405 mo
348.74 402.248 li
348.74 400.063 li
405.626 367.22 li
405.626 369.405 li
cp
f
359.282 295.002 mo
357.613 295.966 li
357.613 280.852 li
359.282 279.888 li
359.282 295.002 li
cp
.826596 .685328 .51046 .591333 cmyk
f
364.063 292.242 mo
362.394 293.206 li
362.394 278.092 li
364.063 277.128 li
364.063 292.242 li
cp
f
368.843 289.482 mo
367.174 290.445 li
367.174 275.332 li
368.843 274.368 li
368.843 289.482 li
cp
f
373.624 286.722 mo
371.954 287.686 li
371.954 272.571 li
373.624 271.608 li
373.624 286.722 li
cp
f
378.404 283.962 mo
376.735 284.926 li
376.735 269.812 li
378.404 268.848 li
378.404 283.962 li
cp
f
383.185 281.202 mo
381.515 282.166 li
381.515 267.052 li
383.185 266.088 li
383.185 281.202 li
cp
f
387.965 278.441 mo
386.296 279.405 li
386.296 264.292 li
387.965 263.328 li
387.965 278.441 li
cp
f
392.746 275.682 mo
391.076 276.646 li
391.076 261.531 li
392.746 260.568 li
392.746 275.682 li
cp
f
397.526 272.922 mo
395.857 273.886 li
395.857 258.772 li
397.526 257.808 li
397.526 272.922 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (root) ()
%%Title: (server_isometric_09.eps)
%%CreationDate: 11/19/2017 9:09 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj]?3p\=dYrHru'odYhC2>\YL8loO:";DXd6Q;[rg=kZFl[A8LmJh6>bG7_aT]Opo>=,gCAEN6"cH4:@@3OOp26+((7DATD
%8nM58*=La6)r<Hm`-9,1pW(.fle4YOM,cI?Rc?F#$7kF'Y0JX5B/P,R)^mTp^$D?=h/>5&6)RXpesl'P8uD+,De+%i$RkO$++nmQ
%q0+/mpFB<a9lAED/_B8R\_4^j],;usd?E]A^%bk<Y(?lI4$UL5W761E?luN^WghU:hOu7VPl<WN\m9h-HDM/fG!BlFd&^cbXJbAP
%fAR)<\/b[c34`alpr+JDjc[jIk7_=g-cC1'Lh4B""eYJp+ZfM-nYP4=02Jg=gnr!I4UbMCg[E^^%=eOGJ7B/u1WA;-n(##YO\Ajb
%^36,ZY_f4#?45)$kZ(AIUDF#sr*[9]=.TuD1@df3(B9-HNJs:1=?l][7I7p"'c\f8fhcMS$hRO+G\3'>8_MO0[]]T&<Tg6rJJTC3
%f<)XA%Cg5B\rjC'7>'5qP?jc!<a6,T_Cp%Ri#8ZWG]qXq=O4RL[HLcF2RAu%Y7(Rjpo>2.]omX]psl%^jY,6R*nL;o3O:RP?i9O^
%Y9((.2/6F4eY)(f`oZ#g25i;3j-Q+u5)Pk&H2>g%*;Su[TF8omXS7gu.iDF^ntpWEj8TPA*RUO(]%79-8'UcBct/d#KMiGOb^(-p
%2riSW&-^mAQQ`r9'#P[.<j3%\3^NK.K8T$'CDXCuatf.(0m'Q])spfd<$#LZ>kUXVcFV0A'/'hJ+Q)Pj%0=4]S/-:cQ8C2*HcZ(D
%]'N^p2>e@*cZ&-l7B#bX!*&U&5+FPh>6FTsPKEjk;Us@VcSY1JEU_fUn@_X0B2'%(9bU/o'2)&`Q'TVcEd!l2?o?!@?Q_?M^10%@
%.@3JuSqhGN&*nK07kaU!XQFe1%DUj`<\"lg>+pJ5((+/A-t&Td),&.aa.\idb?1HCAf!1p)9<41egDue91?C*_WCQDeIXB]a(gEs
%^m:6/;YZ8p&1N")\-m>]M\.Uia'XW:^11*#=KH4)$K!<#p]XG<?J$d'.>%W$+_pe4Fin8X-b)QqB9[#8A>I(dFt(>#+i(m+d'<R!
%n:FZ7$N%_ULa0WD;iHhIF&p9uLL78(i[?e28Ad&L*:Y&!+bEAtn=9ZBVsk_-+cc?CR*!:#&XPe6I0s,M^^E^HXCEA.g1*!04@'p@
%4[X`$cTku'ZaL%l=;C@]FV$h^UPL&+S70^#&P%5hC/!1j7n+;<0tq-<6kCse;D'e_OcT1O,[H54&/l^9'R1r[9IPRW#i7?%1\_gS
%=jN%O'R7G2JKFt9X,6gYo;hsncMffm9Mq3g1YsnhYpRWcO,7nUrTkH4>\J&SB7a6Z*\^/%3Y4n-]f_N+U%ok@"g(.0+A@BWo^\(h
%!aGc3ka=<P0%G*(ro#4`Preq$$s"'kZ9QNA^V`k@#FF1'3u*4M5=4#kn<<g]0)P%IZ?MZ8j`7FNr+(<Q4Sp.JZ9Pk3=Ce>H:\Ij>
%Z/=LfqpXUJ\+@[.HtW@g^Vql"M)ZDS_6V8'1/^![]4I5M3L:H'7C\l'.8mHGn=JU[\`G"9<feLS_JdaYn<4RNH&H!0@Q!Z_g,o1h
%Q(X"#)tV^YoR,OD2WU+,+a1C6[[-R-H?O<;?j;U@$8;.JVnu5_`c2TQ5tqmSSb?bP+Hqo&:N?114HY0@#ggI;Q&D*]h[(O`5j[/M
%X9!;$$)9p]gr60WN08"q0O4A^LB)c/eOBN9Jd<?8#!Eq1dVoQ_5$>X<#RA&u.,emb2V_^RJ8ik=$60b(%S@%20<m\RBjgFj>k(C*
%O-##2$Z$PiR0%WXAoQZ]"<KSg$B[_bZ,)/LH:tb-W>H-_16QaB/=\!l(,SUY\9^L4D+hb1`\1tT&OE'$:e!DF@7X;<GA,[Jh@`)6
%J0+Zb\;+0@'BE?qMCC_p$bF_7!i6J';F9+HE.oLETkIer[1OrV/H\DaUgW9td3sjS6ILu5#>1.Q",,A$Ur#HJ@)%NXPp);Coekhd
%8S:AjnAZKJER@S%I4L@@o#_,p6_M1\H</F*,X5u2_i9@,S06TfN\QOG"l1\S<9*Ua%tL.OI$TM\,]Fi-"a]f;JNTa:mZeAo@LEn7
%jU-b4=(sAC"r_6<I2DR,p2!!dJ1VTM)gd>?eQ+L:E-1)#Q=SP+T5p/.(<l=P:U)9OLK<f4-GHM^Mk@#`])lKs8B4DD3GhW$MLpa'
%_RkU%Oh="tC6&g<;!@"cMV*O<_sn3'&jf/]7sh'W#GWlg)h6nGk7OWL(:'9gH!?DFEr_PdW'i>J;WfjCS^>!lU_uVSek$oH)+-9t
%=Oo^#HJ5urQbue%+($0+;AqZ0Dc(N!,4-E<.fr6*lnI3&i*M7]&M[>++f]O`\l-cf]TiRts.q%]QUjub#AA_66@>l0]I4(mW'&*r
%-8of]fRn<hXK!ZP@58[2)l!Xq3;TcfFT`rK5m``J*%4Gg)XN,K?%SYHEC"juTu*JTEeWbYQZ+tVB>dWs01)1?Y3MPL;&@.SKEB.K
%WWaQ>:fm]I(ZD)^[Q3B(-1jb;!pifCB]_EPQU.J]7l?J=*2$SR.AAea!?)EA:1]FTf0rug3=;r'"q53[F.R0,Zn3UNR2q=T;.C=Y
%gUV9BJO6JKX@/()>m0`[WQZleW1&@$DIS!XnL/qOitT@m,hXnC'H>Rr0s^mG3_YNsUm#.<L>Ch&K_e8CD/`tg4h4->*UtSKcq"IQ
%`_@c3(-&-iFjgduM89HY!iDh)<WbIcAA=/X0knR2;W.6ZF^12o:ubB<7-$&U;<d[hO@0@,p-kgm`/KBWPo.G=CQG948Y0*G"HZbK
%2E6u#_FQ*aRi"H&_1Ntfd:7p%auhJ,<1?n89X]HmZS],9/0Mt$oI!O[J9*!locZM9J!#7HOH`sU:)@@_]d2X4"(>jURBGSR!b(ea
%)GhsL?"ah]N[,n9%,p1jX:S-l/>:'2=?.2Z6Q';qk3D)sJV4V"OaPOWS+D&i@.pY*+=#CW1Z+*^*Mk1+"*ka`q^%4UpPbM4'P8jk
%no7SW#GXIcVh&6GKS"2@QV.<m;G2pinHqsk#R<FE7[sJ]ZpFQ4V;5c:8Y;t=ga%`;%abA1D5cjW^QSR:P;W"$\3uX9hJ:?Ii+'94
%j[5eWjWtf+V_A_J/!@O&=V=g8iYMs>)1$e&/l^^7dP@%7V"QLEQ\L]L(J.Vibd&FF-.P.L)#dN5.e+b+J1E1c\=>6/'KRFsM(7J;
%GM-ms7IML!/]2Q\1?sYKJ@BI(7.8N70b!Xp=YnM#iL*F*S;7l?$3bL4Ot!StPG^SgFsSITEK)'u>qhHor(1Y;Kb%=\!uS^JaC+4n
%pEb3M>m3\M?'A*0;J>*BUAE6\Cl7_O38E@oJoh)'U\lZ_&$n*[F@hfkOr6)0*;(aJd`$T+$E?`.'\.<fkt2"tC8&@G$I@PljY:sI
%KrRp^qokm6ADickGV2JFW,(IKK,(!$C"*pN6:@5m<iH]>7`'tP\YCm?2SiKaBq/ZuM\f]qfu`SlW=One5hA@0FRn3!YX<u<8]N$<
%($S)F'cLUlX(,mo/g^E*Y^(hnpdrMMQ94#`EJGmU8g8>p$l0eT7;=,($mnQ<n8XiO'>R*t4"p\(9rR$LKVcJBTA8iCZ@./\"f-9$
%l):95&<JR/SB@\Til3Y5EKs&M6K)-&O-U9-3Rph+OGQSJnO\9j>ZKC19:6XQBP39G3:I<D2V`k:F+rVZ5S1HE>pJ=E`A=p%.(`>R
%<[a$fJ>fW2idqBe1XN\Nln05Fe6%Hf.E=%c2NrQO,m-ZYVTI_o_k7<W+f-)BbU68T7eMnK<d[]!TUE;F-\0<)..rI,.@6B#Ar/nU
%JkYb?^n_,/Mjb"R]T>P9*)/c";3^q!mgA$E0:#;nNdrW^aaPUC)?l_#k*!q"\G/rB"7`AE@&\-tej/=?9$:t4U1,aB"_$DJ7Z1`;
%E2i-4;L'[P4BGXQ80&h[d;^ed>VP,EYrcPP_Qu?5YRKb]n-"91UCM3A784K@(LU'?&im&?OeA%N1.O&#*ZKd/PA1G4);.O]g]^4E
%ZnN3)C4\7p_AY/hc.rJ6[g+^I4/p42I2@D@Jq`8Rj[C@:"]52#b+/hUEt=!CB;nQ]YMpBrQ4b&:Rk\,>mm6\^5!mCC*YTM=?(QhE
%Y&m,0X^7a^AoR2_3Z'-T!&c3]E)^E.Vh('l!*X1i@7gnYFU=,%,%?1^18nh3%@*hfo[uPp^8n.cjGRW-=A7%HV?CDJh+e_+&%Ob;
%0p@$ocHISu8#;%R@EP\b]f,u-@=#g/Ct!Y,j@+gJ5!,AjM@80N(AgNM@dEe+kAh>hG(W".iq5TlMt#4dR,3c7Cq/FZ9/5<n-'I9<
%Q.Rc.3\a;8KV`6':Pmq+:^'=U0FrN:oJljBej]eh;A`XL[QI6NV6s`l7\Xgfn-P1iM12!Nb(TLTp#NcZ+ef;%UFEcSQ4@)m1dM*'
%!0rCc&gRm?PKaB0]PtBVX.(3pD+/\Fk>NZg"b$BP.h.3Umh:t2`f.G11s&HJKBtN1NA(dF'&?G3#`Z@mb,9$sUl-adU>e']96KMS
%k9h$u>(aI[&n;I]MF%N3Tn9m/dO&Cj9Xq&rY^<-:)@eJt">9+F7JIpD6+@)k2tUPpRG<^UJ_!)U-](L7@&aVKQlYO[.[DIIo.671
%(R6s4)Id)L.R#tXM!HPHK5aX(bW)c(_`Y!p9.4_k=X5ELUB-+<:<bKtR:l'3N7EH`3rt&&c;E@e%8P:W68>`:S;oq'"3b*S:uRAn
%2T?c)j@C7t_`Y&7[5\R0jqaq<l-#TM`\:Ab^.';[E1ou[PAWLD&0LQh.MEuN5Vu`(:#[p!AD2bnWk"MP*^G9ei*@jJm7%Uh[ZTWR
%d0XQEU1;2r]>UEMjV5BMSIDkE(E<d0J)WX@_8L$7%k5[!T\u#%-E)SR%L2-DdF"+>Lns!^`Ad<8P"u1>q`9=2m*iA*X\I2_Ou+]0
%'>,Js6]ETWM:aW"PBc#M6kcg:=<KmBOU.F!+n5&c!EI<grY_2*N0b'CE(n)P-oJ$7.Y`F)1p:m.'<[1#.q\M0c$Ju5Q\I_<fjW7p
%[I1;b5kN"ZRjMB:CZ)LgH[i\:Aa\f3]a'61m:NQ0ff3p,qdV?^D4Up!pHbY1CtJXqWgUQ,n*o@/B(<erN"a[f:.u%%Nm:t>`m36I
%S;2.>_"%maYQuo/_[A'oD8UXgeKG(LQMkCn>3j99i6$2W*Fr8$>YBR(cSX5iKC`^P3c*`me-lNl_F:gC2Hr[>/<0j\3[T60(U5`s
%X]"2_T\aKns/am1!:8>9L>U;'K&>qp:Uh6t92*VCKgUN((^KO8?:6dt=nF*6N.;&e&#iqHg79!uWV2Z$]nClG"f3VA=$*fZXGITh
%(K_gV:)mQ[&b8=/J87(/oj4QNp-H!i_*>c7D@`q&DWUGu3bD+A]^(!\H^W"-K1<9?qspBnFs2PM5Aa7>=hXu3?p1>p`So//ZY$o%
%\IL&s7k$\HYX4Uu$r.O3K$9[8YLFJ$'N:Y\aQPK>(?h15WmFcU<Wd?Kpc2PGOn.8_>,<8[rp4`Z<(^6]lh/t#gM^BK.[b[rf=B*F
%24O7nd+_Ar9W4AYaG7a:Uu7.`<06DoriielXFr?$KpRCLd&,5j>`[QUlnt/0N=f+,$r+;X0[`:Z&&BUEmP9=lX/O+?`[cC`E$Y_?
%5_D?p)k<ZXfWJ5QAG%1@$].[g*;rSK/3(j/KS3X:KN[=PF"`=T)eLcLTlo5R>m-@lBr4k3_14J[4W%Acn8BBQcCN\BLf"HrI9p\g
%JL6/c=uTi,W?*@@-2\`X$9#7nMIkr$R@"WSYi3J2!rEZoCXmK4?G?/hOi]O]c[)AR=)6`]Y5ft=j'+p%Bd(h\h)^-!^1DuBcN.Ya
%J3b116NUV\fM@*!Ef>sZ!sIY$O)>&^YMT0:o=[B>meu+0=QV35_4ebTd)2Z7Q*]FgkX"FkjubWor$]peQn-!M`Zq\Cq]i;^@IV1Y
%>P,/YE;8DS$+rBLYbpon!(W.m,rj%l'XRqK#k*)UTSH)LM]R&XTeA_CQbGS.+BZ!2^*L50O&D[1#IK;n0%cl@_r-;M2#5=\LEd>B
%<U94Ba,f#h5DhJ_5U<SO*.9JtmVs,F4Go8.i[B]e=tI_?Q8H"h9?KOfa7[)):XX2)5gBD`0h#/%FZ9d@F9_s("a53(*f*n'1s<*S
%$e3"5/7Nmj$a1N]ZtP`,Z46H7FW4!XI5s3j>rXrS@"FK8jCjP`LZ*b9_-oFD_&ZK;&/&Ml_'qBUHkDp"+iih"p\qsr;8ab%]Q/8_
%(LBYRZE(f7a*g$'_rP"jJh!qhH>qs$!k_-Cfe%K<>P9o"JA_!Z(m%r,4pem6+HRWO,qpC.6"Lp?#*ia-UtCEG+i,cN3@_j*?rR0f
%[[>ZeV7[:YX20@mCN?CCRDm:C2O.C/=VmkJAMu4'2+M5c5c'_u`W2Dq$.\Qh(W`Ps%u8?0"]B)n6Z>jPBk:T!ER?["c%<i&''hr0
%FUsM&:'%,!>2o!^i4Db9Egq06%_KuCLBfTn;)Kt&JM,?F$kf72M-tfKN4q3:%:Bl@#HBmTSq:3(9Cu3gGl_.].$,Ap3>Rl#LWU-k
%+;Z:/%jW,^Zq-5jaA`JB$=C4ok7a7+ALLn$?X/V3`Zu")c(jiqUGA16Uge(@i^_\Ln3nX#80bnUn*Db(_;s'c*;X,o.'Mpp;<c=o
%hE<@5T[iN\bZ=Kj-bnah#7(:nI>8sVP91Q'CuoW/77<3PiR5X(#F]?@e,k&l!<_#+,Es=^lCT+G8Z%TGH[ek;@M4AJPU@/DPbp4$
%-Oh]VW(_c(:lE3OMIeV-DHdHIW_/ZLUc(];&nNK^KX-9Z;ufL!;H0Mo#:7HedY%*XJ2p;@4HLGf5<qr)PnLDiE,\ALfs!b#*%D[_
%+F-p1\0QSE(fUPRa)/t?_DV^?5SGP1g#7L!@Ri%-kCS?=&oWuU)H0LJ"DFu!/sf7$#sB8WYWn$ePRMg"Nl&!kK<c4HU\_b9VBNf1
%Y^nRM&!%ba5>]N/:ks"lj'@L9)^n_V0_h@5K8UMlT,f5,'\RKp%sSm;.PD;rperfN_j(IhLSGit31r]53Rg8<Ep/WQlT`a"Ylggr
%3D/g/E"G8n5c?R*M3Or]cVn&/2P5L"fQ8r(kfBFE4,ubp0')7&JjU$AUP_L&"qH7LKlI@<+1Fe]U-(9o_<?P^PXEJA$]'D0Q]<:.
%.D\lWj'*Q/)]\6M6>&Bq@1f_hF@=VUXm$[*!XV8?b]ESJlU/1I6:RHoR\>_i\9'LJA2<E.,\8EaNg)h.8tM-TP*@dH@m[a4QRO(P
%!2Gc(/jYB]0Y%Ld7?nNd4sEl:OblJO&0.L;;BEItO*Xk;+H(]9!@CD@^T@Vk;um3Z*&,X64s0WN35ukEa>=lf_=9"jaIK$#ZjSWT
%^e!K6c=MW#LFO6L6oI_-2OJS?g$jZ2J4qZm0Q:-kdXe^?Ua%f`3XdV]AL\]o5&rtR5UHaWLhs*P-G;8\,c"*[UdudW.O.e>&TU2a
%7BpF@NX6XOlrRl6Cdi)43T%<lAq<X/<_M'seTMZU#Hc4eBtd:D$f"G%Fj5l2eIC+b/bl%@YVt=>/.5#&(@E1IEK0/>*dfSL6Z@N9
%Op(i)[kVP(2[hbg6W<dj6KAbXe+%G[K:1i:(CN2nn;Lq/LO_Jd!Mb1Spr.m5(UlC\4?Nelfigks<3XBk*l=3rL1-qb,B#fR1rgS>
%Rf/p+FYJ^$[9u:X_d$1+T'!"6;&&GtFARsQHV15F!M'<[_HbTBFAPWc6.NJlC2sQsQ4>CUW%JO!]XWk,10`g+?']A`(3NU@TfT3R
%X"'Xi*-W)^&\-j43ip2$'g\$LSPk6ST%)!feOCi<'9.`>&24+e4;ubeJ9()hnGb0r6I!Qd#](Re6o5mh^ap'9ra>5J6+dK[=h*MN
%AkR*i!1a<R5]Snbg,'@b,6<%O#MhF*KQ"Y&@_S$V%Ul_YJ4:%bUkR^ad-43dJX\qq$;3Bqji+u3'C.&"HtN]C0:-/8aql+jnd<,T
%D#dK5400\+E]eT*I`j81*e,iA[@kKDUbj0?B1#1O?C0\i7Zm\IF0sUS_taIElFfE\E3^aI6i!%3M3\3=Y-?j6TE?)o>^jbQ$r<N1
%dA1_f6C^;r89$Ut!6S4f,(Y>95'dJe;t\Z)Ts:@lL3Hpn/!]A8neEiVQh(&&ckd`OKO2bP;(q1j+$>iF\JM0KK-rc`\qITqGS';F
%1O"AIDJ6@FmM#Ysi#!"XV%sTTKj.C5DF';;ni3(AbUK3LAQbKBG6f22$#g&ubKNPr6b!+3Q":s3R8\nD5N.AbI39;Zl[6LgK/nT=
%kegeh_nJ*8UAcl+;7HYN&MWE-9g-!j^^g]iMVO%>KOH<R(;dj74G\)#PWp&*L7p"'5?[2!6;AD9dQfSs12WGZa@0pZ`fj=J\,8YJ
%r;oblTtM8a#aUA;GabW\6UjG?WX*K=67k/m/]]'^U*1_Sp,L+[Di#hIU1l)78OY3`n-#_,;8Nme8.W3U;H+t',E'C;S$,a#1N/U?
%GiH=Y3"IppTSY7H'qtNAab-WRjZh_,+$7]fTee'X*Pc7IH80U@&spZ(B"LWPG!ZI(+sE<p$,Q0f"="V.*!;RlD+H%d'Q^Q#mUVeL
%"OhT$<_Nk:JBQ0U2L,S*-T]m$Fg1c!C[#*)N\qjAj,UM\$,khs=BW5^d@fBlZ5j-\d85=;R'22>Q6sX`*gXsqUEjOuW0?7BaH_q@
%DgujPLJF8[?qJeI&.(tGYXD=5k3eQSS;9Fr;\:Dp9sit*ZuhQIbMY'#P$$ZLUgaCRUF?q@P/\^93BWFEUD+&[Yp5D[E*0B?mn[m?
%#@F&uj9D#jn7hG=*]lb>Nu_]t,#9$(K0(8bZ1Ha(0CVqJ0q(MmIQBPY!ls5*]1=N[6\PKJ`)5G5-BnX]"NBq($<m6#ljtuY/k\Bm
%V;-ip+H]^GVuGB?&.ntG#<okX_c72s@Eh6$I,l]S#IG<p_:>;;i$]rnnZZ3KCtll^(WJNI2i,e+[\dgW*^_W]R;NiB6QHVf9oDKd
%]'X_E_X"HaahhkGZW-I(idj!r0WaLK%=Kf;KG:UIYSI)S!1l'8&7>HL6YQVf`7^6``X376Dj5&10('8M>^k##^on9\4)^S<J:90&
%._(hWhu5X1BJm-kcZQo%L!+qSgTI+?\j>LNjr%.B[G-.[S]YNG?>ToV>/SEDhe[DP6@A+u`7]lA\CdT51R0=G4NT]MKH;$Jd4>4e
%lTK^=3CS\jC-SA3_nTf+!N&ETB+r-;[s<:/C7:MH_X?Jhg8R7SgKHH<P#uEr\7l>GOnb=GLS*%T_B?Zo;>=dE."Ki=J])+r]=@4)
%^dM.lDKPl\<P+SHYi58HV1X$H9VaD3&<5Q>?DZuf'r8*jC?8%W\(b\jNCKrhFF*U:i[QEQb^a4]HSdcrIO?PQK-.e";+Y70qs$ra
%\OQ1p>GG-67j6NYp$`hXC#gsGH]j!5Wrmp*dHIj97cG^5ruJ'2@8N#.Ob0?*GUX17Vu7=aLK\2LD2^GE=DLh*FkH&g/&;FZ!hT[l
%<!Z2.T7Htl82ONO>r@cHQ*BP,oqg$JDDaLt2JrkE\KrY;W%o9AkJc@AZT=06VE(rgk)nI^ZC=@-^P^<d,I0sN,j(6FUa*Jc3P'KD
%2gp85H.rR(W5!&t3qL^9RZ-)c[$uhoo?_BP6TZ6Z0qC4m4%M5@.!6m`s8SpG[;U[*95KJoSFT,")IL:_o>U'*:C+5E!8fHJ*rA+E
%=nLb/6*'FOaWUK2C(5BK8O8B@lK#s;C2dKp$oXUfJ%cZmh-r%^^nB2JQub7(18uf<4hm[=N94?OroCr_'Y%.AnZ+]B:,SK"1jW0$
%oWEO`5Kt#eWB;p/AFrkhbNLjsCDhB!_KYc[Kn@N^I-K6>6]S*).6K\oH7]R..t51;$`?mq'NUc,:*>7*SHTh/*.D44;Q0B`^\scR
%ctN`UY2<!BY[KC:Ki1"BD@RXpUV9qqS^UW3E!YJ_C=fFYgD!-S,Y`<Y=q(D1q$9crm#kP#ZGD$nhR`@J5j3\u+6X$T@a[.T3oc5m
%DC^4AiV,C(Rbu0s`bN)%^l9"=;kNnZ.:CW-p:$I[Rg;=qOm:]e%C/pIC!UB=OZ@8Z+@Vmc.ZNFp9i1:W,X&=8i>KHtT4$lN!XCLj
%%d%m)@F39l#S,G0G`Yig-Jlu?:Ari/[qjgCl_'`eA!u")15.=TcOQ,EGU)4&]Y0.7:6MNe62Mik@SZJ(/q[V^%s`U7H%$9Lh"Qn/
%/9.0:6Pb^(r#YG,*qK4Mo)'Oa*C93JZD"Ct*)1).^+nJ%p/@bhkP'u!pPnA1N<`Unq0h<!IH)cd%lV1@49=QY"8@dRA?`)AoCH99
%-o;ksH8O'k=R:p%\SioJ>d&Pc1#X:c/nmG<B_=sUoeWPuRt$JgY)_gETu(iH=\k;Dn%W7>@8U3dQ^2QPg/DndVL:kll@"ElV:6@,
%1M$(cfi2P(;H`cVO=%<sBsK0_P;.PtoqEH0NE$hWJlPXXg-p)UY?J7RFB@3_Fg]or)[#Qrc1>T>r7O2^Q=>*1kKg$G=`REq%1)7g
%.qSEJWB7A)ekL^Zs)7;9QYPh/=`_GoRUV7','ME%ht67n!MP(a%en[h;XF(gRT0AAjUS1fmRZoBdg@S_mC$qMotc<Y!Mn'kNqj+s
%Z11I6(Vlk;Yk1^!_PA+o(g\sn]Z_$Bo>Jg7nabR.]^R`c9>'aF%*cQ2'//sqb<5;M:V=mb0E:jdbN.HR]/.cGC(a'm4Q)Xl%+8Ec
%Q@#Bs`7/F%mbEg;\"5@DUh-"^%4fkC1,/)7<i"F8@G3ZA8Ag5YL)&/o&T.A7`OiR&qjlQFU0d0RqmD"NpA*W+`<4;j&!$8;SE>Ia
%KYjgi+!B%eh>,\_BcbNCEOoAd38K+go,X@`4#fr,9`JUL*SCq[_T60?)W>!m[KD5L`AU$!4cV(GIH$hg2W#(&%._/^nQs+$aKVc'
%JZ$>]6XncA#A`5!kJ=#^BDt"q&SK>UVAFG(gG[s_@`/g88QTuq\%P=@"fc:VW9OKjWAHT1E>GPfoG6l9U4h\)GphgM2RJ*Ob'=FP
%A%ELtGK4sq%Duhic.70RfrVIsk::1f^N-`N@AfPG^JaCs>g]jVr0s>C<b8O^PENPB'C0:#O&Fsn.r&$Q_4+"JqA!d/"1Jrlb1F!2
%VKZqWfq%gH3gY<'q01e8fsWt,Dd^;Whpebls8+S%1<GqiIm2c<Di2Tjq3HJ>)j@.91iVm@@OX+P+>@ShV'b\ZQJ6GPVIm6c?.a%-
%mdJAs^N2n-K0-[%:(!hdl0WY3Yb09lEP%dP;`#FgdG-)f4!=,0jF[Ziq$Q\<#(Js7cog"[X/q_m+J4Z_Eq:%,e$2G]^4L`Ya2L-T
%8o?gP:=nD`?U6jrKB%=_q/d%*o+g?XZ#P)8oUd-CB/,&:CQh<</)_`kHaB!ue&Ig10oE<TO'@<I-7.Yh4V0a#]tHo(HEYcis%9\k
%]39JX80.BWB>&W<8Fm+GRCUM2ePb1c47bO"\K1V3!V0rjlh/f#'Q/om@COgi%(_]@=`/ocNb\5d_AK78.HJe/4t&ht9s^-4PK'aE
%M4&1/P!d>^4e$=^Y%KS?,^kkh7e:G.*d2N:_`7<Vf*5L9))=j%(6/7"&'^s'QY2Vc"C9<Z3t/CY2A::]PE3?8aPQoR\4Pu4bjU\!
%Hl"]_=AIh+:]2m`\!LZp#Wd>4U\1jTeG^?BAE$\C1B[ADDW#k:]a!<'$$LPD!@85NS\&MCApb4W2U)l1=`gQ[-?W7*'i]9QX<sGp
%/Xgs?qC[am-u0pMK6FfV^85Ac/D_(!1+DY9FT&Oln31^g0iE?rgnm?lXV=jIf;K\5U`%:;N0]lig$FOJ`b^O#4u[)[,\?e.:(Es@
%%PA&OCAX"9H($*79VK\fGeq5GB0C.pVbOkZGpa7I9^3tj8^C<W8_g"<hK&;c4MpnoH(@a9]U^L;[fjPFiCUBOn0FRoLF-1%fgtnr
%U_N7o?/PR_1?Rc3bpWFLNAJ&.Tq9K^\2:ZcjqE1CCD2,o<jD)(fh\H*kO%DSRR*NGS"+%5.HIe&7Ojmk_kJ0Yl@,0>b^Qs'ldl&-
%ULdlaaX&13_0N/FC)]g=5i?jEC$o6+FXMlHR^#IrS*9e[7:S1CU@fmfV*/L^;C;^H@Tdi:b\AsRBiM-2l!=&KI[X50V"1>.Wn//?
%T4/2YMI3RR2Ub(^9%?KVjk'P+J#3c=n7]F_4/MDhC/3'a?T/3nltC2u.$<'s<7b&1*k.=;nJen%<-iS3M3qFQW--]MBM@Mf:O=;E
%2Xd6]c:s%=l?'D/d%mCe%p[-k@>RE^SsYPS*kH7BprIWB<H(Y*1j47Lg1cFe,Bl9Nr?!RUS#!pWGUhi\kAFGc;Ig+%]$@,p_-H0c
%3]C1(:mHjVFNr4cNATCU\i4;T^Aj:PV'&(YYL\#6o)GHDUn$DU[^g4^2C,afisu'+Ze`3/esdI)m[MHQhq0NQ1Uh`\82.N#F3?MO
%I'[;X^uF#ORl!Q5Me=i(8B<4f]L2e*:=IE5\q(`hb^LC`[P/VZ1t,AM3$fjk&o"d$RGc@9\s3JVb95UCUL_@.7d'5D2:^0rGeFu;
%(?X@Ic%=]3mK&lb[btWW=39?R?)Q-/0^Y?)h3$mPLAS@84^F]=9r=X\BjOC,0^):+B=]HqZ[.gu\\%^ZmQ4kjn0p'_a'#;O](tBf
%B-cDcJ/J8Te*,['7/;%YEP7qRNG20afVu)GT:_LHO0RTDc(A0&T+q*J"6n=I"F"`jM-KXm->ANQHUEYc"$%)9jq$OcF["$d"$,hm
%_`7,=D>!]<3WH^Dj"(DN2p(^Kc#&<7N?e$BES_lRoD(ZCD5(o1lfhFt1sP$QO^_JVI&b3)?.&IINN!oTk>O8#;`/I3JY,.Cln4'+
%\+;#[fa/%`NAJ&2\=+G8b[\&+X>\>.g6d),SC%0DHXZV\GGIQ7g)$BKo>N'ZZ'k!u-Ri)rc8-@PO*0S&NN%#Rh)g_G8;"fBUG9/2
%n#YdO4JOXWBM9@Xjr'/(7Ur%;R)Y'hh6mmhgX+VtgC1D.Nl-#[,%TJUX\EDVk3V7lm_Uk$g>0nnUdF7ZOm,CKkfhglZ+@XBfc=7`
%Wb&U6PHe`ja]R@rcQ?!1@onZ.9/\t*++!okKp[oXa[Hm-m+p/=HKJ"(R)aRFGjj8E]bF5Y4PlP;'^"rBoV(m6M"ae@eXaa-PE,B8
%0PMTr9jbDS]+76"#CQ,nD]\Dm"29&rGIIZ<Rr,*b5otJY(8&="^[K,/q5NME:3hr1Hl(ouhm(Gtom)cLBou,pe7$@g[<#D]/`68c
%FsaQAd2e+Zdg4WoGBC>H:\9B;5+7tG8^#Z>GYMYAr#IP!C%;=Hj7U0DF7-m`Oum'Xc;I'TZ_QCkfPg&`'RYWW]on6^e#jN:-4J,R
%]tgs2*oj=M]9^J:S_jbOYMBMT>/cqqJS2u@B;Se`dn0F1X9h*".udA"s8CS3i=2<R&?D3:3R]*,olnOg;VY_2>l'FL:d5BR5p]gN
%-%<t3nB7Z<%<uslig3>`ZmjQeXh%jGY(K2ff5JppOJ?C*ObnM:,@<t4P^Z?eb))!SD+(8XXJ\TVc&>f?p7]#2P<WZsUJAXn=n/Eu
%p]T=,@GI8gqj-C'T<l&d="5)WH4uSg;)L-V/.F@YrIFtu[-bN^]M:8$O&h_a02o*\gIsC52(+/H4.sm`BMA>=[FVJYQ"F81X%j#&
%'ZO<F9m$Ah+u("NB`3dEh]O:M]u-4L'1#Z7;J7nUNATWrWV!??6Y7E.(o1-&'O(05,OeWJ^fU'lQ/-&@rMYs\P<ql7+`_5374OXU
%f:*I(If43bB*rar@HdRTPcb1j3@U3<gHk=I$=,]rea)HH`RcIW=nn!1FXiZ+G$>O5JIPbKn&0+@G9E!HgngDeBonaJoYh6b6qP@P
%Bib^+7G<"KVP7&Xel7n0-=l_Y-rZ9h:SV(!1A&fc>a,r*jc%DP8L7?b58WEVp]Hen1`%GI1@r%)o=6:LMp^Z^c:-.\"*7=;)3LmW
%lgqY8e*9fVkFtY0IClP$;,YNge=3\S1`%GI1:*_Jj1J#@MfWW2naZn<2+_-"p4K\Lc1%0C@eP!#QlSZO.MS)"i(iZS8GE!;D76u:
%h<U-Wf#,+3EC<H`".YXiIr=dbMA*fRBFd!i1VS5%%C_mr)nOo_F=A9=Ib,$7$51Plh;$B%%36:sL"rQ.SX(0oC%1=H)c*$=Bf>[Y
%PqFo#]Ze^bEL*k5Epo&J/R%;BZMf([hY64DdqGe^c*JOVDtc;ZR9dSd?[t`(CKCPV;2#lg>4CkNg'(CT?M18MX?VL7?KEr9q"^+I
%Q3.7\7)?D;e-<^D(^u!-bOEf7@:aOTUG"_<G,JpLi-VOVfBs]'J(B5^BZ#"gq0.Jj6Bt[NHpVpq6>S#j66$ZQ=SMu)nD/Ws97u[k
%]\nu5?U2>EW<UnR_qK76*lt4cbT=KTHU`7-nF=^']Ocq.\;ld#Z48TOdtKG5r&.:E69IWAiDV[l@FHlaDEAp<@U!1$6Om>JH-7:Y
%iias/p)VHW%5c;qAj1^l1=^_JG^sN3*EN9UI35D=U9;YOLK%7:0q,?DIQcn<",>S0)'\,*3mi'Qh/uuC5cf(R2Xu\q/B]=Z<huml
%1P/d7,H_3g,Wbf:KXGV=/>Dpu?cJ89(Z"su^QM"W`=nu&lG,rBN7CAahr4fTg`W\<LJ,[T4".`AVS_XD]XD0tQH5A7c*g?B]PS<X
%a"BJYdktrEdk-RQ"^O+u_)e%JC0&slD>W7F@Ha,=(V6SWnh82uBMA^47i!"n)Kt)nT#Fma1s7#+\W0*,h^qXAWk.L7VC`_kpn;+l
%LP@B^2XK^piOP0k\m]gt0\^[\0Rucn=Qh/'fS/`R)SsRNko!=9S$l"(fg^dg&7XC8/V;5L[\IOBQg#'JJnu9il![X/ZtA87bHq_>
%<lPfaBNPK@!R*UA%+'\ZF9"&<63@cc>V/Hi.'/_G]-[Ul\4CtQJI^>@aXGHh[ZMOP#Pf1S;lDu5W]RAd>80EAEF%9N>cOPi(]n;@
%'n`bj[#;kQ$:'Q3b/?.C@1m0,KJhSZPdE9lcn,U%7epH1+E`bO[N:.P!U`i65aY9Y?F(Y;*E=\LdS$8=4nBXVPWIZoB-UE5#;(P;
%aX/SM1]n?<*(!nJd^$;pMb+T')&4g@+VTD_1ka/Y64UP\@saG-/sm][AACl$@=,RWPmsN15c8W0/>jb$_C_QU6UDE!fQM13W\P_$
%!,mK4"1SP;R]"QA!C"\Lknhi)r5+^mElgb`FciQ4G'fCP!:+>?'gL]G`27c@RU]5)[N*K=,Bcc-3i]\:$A-g+\1TKnapoPK7p0Hg
%T#QQrU2D^7U-V-YMr<PCaZE!p"QJp*p[d?g-:b2-GmHL>:A5R;K)!^8)Yun3"WUHEGkgn,XBET@rh&J[p735R"%TKGXRpIt:=8M3
%jVCU`M\G<]i6Opo"=KGt.%tm)TE1<hW:@W;Ak]lH$:u".LB_l/Vi-TSS^Y@OG%Yr.BEsg-?tAUUU$4spc9/)OC@n2]ULtl<>p/B?
%cqUj(RR3fNIl8%_VHSldp$0fE<A60[73N7Ca!h_;:Pb]Aqnd&.?J#+]'FQ&qN&9=\3:h'+'NY3*D\fSFF9jnd=m:(?c0Hf4J%$o%
%.if^aI2kVjd%m#Xs+T;LNa?]"^P:ohWH.2"mjX@e)6i1mHED43bkSIEi=dP&SBUSW^on87Ht;6+K(3nSm.R_n3#2Y`&=\YGCuiN9
%#0)lML@Ho"QOpK`_COH[kU7k%j6.hNTkP,JN?NrsKjh"EdnrZQ-e(j35HmHLAoeeqB?`(()`tl]GHY:FYs/X#-@X@l\/*S+ZC@EW
%Z)#k->JQ=Z'l[C_?,$_Af,0&.IN+XZ<Lu3B-$)]GW+b?PFZm(g%QZoQY97m#r6roTWjT!Z<iai`@Z8YSdks/(\P83l.JSn;r6Aa<
%?dXo]lp/9+"B?0*pF=+R:J=,gZR%.aHiu#!DJ+3F`hlUh8q_\'7@Sc+U>S[qQPh&fom3`6\IR=,1kIX'WgcieESZp'ju0osDU>r<
%*;H(Bd'!=?QP!a<JkiZ/P:I!U`bCQ.p3POqY<2"nh3Gp9"1[AM/pdLcOP+Q\HEBA(KRIssI\YB_gUMSqk+Z.^Ai^MB.uY-Hc-u^p
%^Dg_!j/%#1?JD`%**6_#I_0sXo\7ni"]pmuFK"(9dIL9>,5ikHI*lh(E(@@kQFR$m=YJ7p>JQV$NUC6kd`XO"_]@O&Tn5;1mR94!
%C,Q]"[;p)60r;)(nuFKmY5QXGs#Ii#'.2Jnh*OnS<L2jjC9*Zff>LFbfaSZS\!bA2\kOVfWR25*Y7I]]g(NUde=1*"r?,eHlCF"e
%;0>&fa$\D?B^ns+V%tBeehZt-7F+X,[$pA77VK=BBPD*@pmGNY8ER/.C4RFM1<5_=ORKltJp%MXb5qiKK!?E)40>0-4#Ci*d[['1
%.K.^)daY,774MLKn[M.VPOl6GUKu+1"FgUJ"G!o(\[4So1q6arVUKB@YN/NoW*<CVX"NDEb&*Gkosu9lH[lPR#Gh`aRFH[%N:nC"
%pGi_=62e4KKq8:RTY4Lpd,JR`6e:(-<r>!^d7A,^`Y%bR]1s'"4S<pp6q:_I-lDc>DCkqnp,au@erA-G:_:&BY$$apBRR7ee8$Xt
%F\J"s""J9k1_FSfclb_/Bi@`1reiCCc@A+RFSCZdh6b,9fbAHE#1>bg9!_e4WX5cK4FbiHhQ0tDid'`-4pTWZ<eGI#/@P\5-R^(9
%G&_qq^%U2^S`]`n[LRTqnfcTHpZ<@#fr876<"#6rZ\%#^_5a-pZ!*Jg^(o1SH@Mio(C>_Q!E`0IS8gK2.)*'#o=S*7SdZcc-[Sl]
%p'dpAhWSRPp$5F<PBt/>S_dL^(`+UDW3&8TgR[u\D(B]GfIlFk(o<AmXgbW7Y0ZB^j_@3F9!\QK]/Yl]UGu:S8/)uZI^UXWCgoKn
%C:;fuJ]Smg$.M'BMf@?cs#Z0!SSTO\nDt_+K@s>.\(^#i7X)B',CDb<]&1Y:Ne"8?m^DcAOsCDcFXiYGB=Mt1?2c]R$m7q<ZX"U&
%*j'X@7Q`uH7TJn8>NmXg<ln$I9jJWWP@^W?X_1k?.`tdtOe!b<@T@;+iJNc"ZMOu;bomira^6TjR(<B>$],'N1nHFe\-Ct5phf=7
%<^?jT2FL3(_((=&k-hkV\:6&+OL@;6CF#&`lIE$\reRf-[IgOZU-?b)$tZE>)tJG++=adRK+P<_,<An:$%ktnVr]uW?m:^b:.P*I
%&5HjZ>d>fD8]1d*N*Dj'Q$JR"Y0^thm?-\f^/1rLi(?>.F_tMD]%9pXMP==%JA#YS4#P!_%T,9AC'o=DWO1q*0nSBnTRiC0W/0<4
%.Nnls+)Ac5dB.QW_oEHLW)?Vr`qk8[Z%Gtf7TH/eCudk<<_["s)oo`dj/;[CZWd+W+5.i\g&b9Q29q]USVQWP-p'E(GNi(Y_*#HW
%$D4i]]p-s;jJ"q?Pa\&0P8`"Yjnblo5Si6g&$q\ai%.f?qH`TP:DOJ%p\%CSAH"=gBeVG%b/K!*,9;tk[G?[[CIgV'd:b#n`>LpV
%M0PaNb\LZFH]?1H3mhA!M=U\R_#IqRp"pTd9=E_EMQX/?&LIQo1gAMeW#Cr`W#D47(tDiLjs)8a[3-7LX(Wh!<NLQ3=+bZMU;a^(
%;5l4%JgB#U^`XPEL5D\>C@-0qok4l7H4d2=THa-iQ)m<8We;*iH=K?CE5%,%MP37or'NDfTFnc4U,s>,1mcE]-K.,1)i_?g.4f,-
%IU_d`Bti1*MTlK&N[QjCGq'le8`[gT)'u?S.iEqXe>Uth:^_[knS!bf;40s$6K!>J9UE#%)gq@&-YUrI7)Q'KY%fNo1)j:>!Pj7\
%m<fW)!oRTeD`,j!@?a^tD2>e[4+=)sj&^.7<=KUc"EYlPgWXKlqF"#Cqi*)?X"a00!kW1PPBYA9]o(ZlM;Lj[oVH1mqhI-!N*VaH
%[i=55d+&N.QbEA\=>\Q`<H=Jfb=,E:c1<)m@a.=0=4*Uap@Bu,?2_DT<,90_"hE7p,J8?T>p=,n?Upea<3qC^'$JchJ'[\@q18?/
%<kEkgaoY@8*^gX*\pDDmd0t)SR9G7*1smlc'&]FY9+(s+49UPhPb]n,,pZu9S;o=cP5-"2,J6%"/4HYg@Dd"(?\5J*#]WUM5S8tm
%=t&;*[=<f)IaC7h.P[l49=rH`TV9h0E.QWZ=Ogah7ek0CQ&9GYn+\jI=QpT2#tdat.IZ!/iBQu7$?dT6X9%L)IJ.N?4)kJra"Ypf
%(15(l?S#]ge807FX/#Rq>F=)R74KC9laj*\WR[6f^SAfH,g0P1>h(oA(jgRgDP)42Cg:Oj?%HaYeQZ4*p8R.4icer0n+.Y,"LRun
%J2DIPf\CT9,!]A/X!njd=*oul0<H80GeE<kGd_0Ig0;k+[l:HC="YEc\'"H;/Ntf:r+tPioBpbCH*FURDWBi]okJ($jRMYa]2p0;
%P-O=*ka(m,dlPJ:`J\B__tDQ`fr+.OcWZn4cF36_\liCr\_e11[^u9mf5Glaf<!o7:j_`<;Tr_p?c;fpWIBL18[5q469]7.Mr2;1
%X\[-dEnAR,%`h*5Ep9FlTN<aL&!->>l]7+#S)UueFdC\66fOZ#pMW9gjGjT#pOdfml`GP;?b7e;=^UE(YEt-m(4,)]NTrNG6g7VM
%G.Q9USpraIq>,F9_od9(Z<OgaTC`CX^-*rHoUR)iCTed$Z\AJD:>tNXf-YlloV8p!h7T@eG/$8c*A0Qi0H`RSeK/hmI:$6ZPUcC]
%`PSHo]"4230HVn.h`UeEZsJ"TY$;6Y:LCinH>pDuWVBQiXgV1ihmm9'le6EPZtg2eXjk(&<V,m;=-&^&9..F.cJbN?Lqo5IeZDIX
%\oCd.Ip()T.Z^d"?L4gY-eB_!C4n_<S=@'4AQ)sI>1$oFQ/Yj-4]%/$%`koS<EEphk<:S&hgMc>r%,q@ao408iT&5#H=:m^_/\_-
%BB+m$ioXn:_+R[>IU--(?i@WHS3?X6gO7aW!0geN:EL]`5!-g1gBNi+AcCtOZciUFI<A'/^HC.#553YMQ1$ASC1B14(4;s\cmmD%
%G4t*r7=Ql%/?eS^CWE8g<kn.*oSp7jHo*`IJj3pA041$:)9#Yn06fk)0@j1)hqrgXglr@;H[C$BF9ArA>7uTB+UIr(MZ^$q=S/,3
%5@6OLj=UY-=-iI"q-M/`'u)C:c_#.U./El&LO&(Lh-4fIiPW:_?6R'j4?oqG=T@o&jT<$8>9Ao$)*pJIePE#?IHc1:qN0G^(V_&a
%(2D`tkH!dt$Q%pAq,8;Iq!o@I#M!G=TmQRpH98UFo5qTLHrAd4e.K'".Y&_iD.VTW]mB/I?mr^1>^q1pW;C5qBWKmG,M,FjKbAtT
%+56HX;hq#3HNdZ?<Vf[#\1kY!]dddYPBE)3_:lB+EY2jCl*I46e,.kFY:+BjjpG]SnTf91ktsJb2Cb]7FuFB=><8%=[ADI>\+8PS
%FuH8#*IT]74T)e1+Gj"7koG"7H1=bt8`A)X\10)tABU[ZJf];U;IacMWhQ/hK6CNb!otCb.9p,D3b5YhmN>"`)9;]'fRI1V+)1Z!
%NRIC(1G=S:hGpdcJ8TBt]@A2]2D;aQIco`k'"kTO;K(S?3="Xp)4Ig=mDd,C]3g#m?XGB$m8(aMbDgGME%OHen>`"F91>?2S`RQZ
%eFmGGfC,?Z?Am.E[@ZNqGH9?kHK0E0GBEZ>+geMf,TCE^Si,CBj[[MTF7.uanhFDCj\al;g:?:Ao1AKMnS8BfD-eu]=F1#+[BSlA
%_tKEAZb1bWiWIp3DoFNuni6A]U!eeKH^$TOqHS6Zf9b*fFUQ4nlmAg\gsXdE=,X1aH#5oU<)!7gK;ZFU()U6ie#dCu^!bnu+33?]
%doVD.^"=VI!+9a_X5JG2>2AP8KDhr8Yk*1Er],2tD6(HF^"g*i[F^*`<;H5/m(puB]`+mSRQKjV=^`b]N&D-j>d(Ue.utOj<(24b
%^&"S!f*U.(+6[@(Y7L9Jo(=NHZLG6&D1-fj_9^[nr-Wji=0dmF]_(1%9/uYM.PKR1cu78?]h#glqlh3C/oSP[l[AVnQ>0W*eY9MN
%`7sHnqY('(<HIYQObYlF?/&]`n<3g!P!>c*&0'3q_s;HQ)[[^?I/>MaFh*^2!/_81et>T!a'2dGr!M;\H!]4\>D"Eo?GYCZ>hBKS
%M36`[Lj)2uahC41+.(p?rB._5+7ThTjm8mhU&h&&!s]39'aj-Y6Uin)S'mm#3RO2/&::'p.K(od,CDa9!=3Q.e)NCRZEoHaOnQr/
%)%&P2,!mqr]T\EKJ8a+"Dq-<LjCgIar*m`q]"]Jm7(H`J7;tTCJZlGMR.NQ>cGYlg'1sEbLdNens7RRU3<c%`JW1$L'QE&C$EaXc
%Zkj'kLlJp7G8PK:Qh6Z0;Yhn<[2>HJ2sa/Zhee(]^Si@h1/j0[]e?T%n=h6cQ(aG;BL]P9a:!bpQ/M.hO9e[:@=tM4_E3n`1&O<]
%<FK9@@m/4(_^7sTUc^,T;%eOA>e^WL&/9S9^iZ4&"%M7g(.oKmIMWa9DA3CD&qk;3n?<b'i?0;)(_e=D;)o.%+GBj]P>0";81OfE
%W^p=;)Fo`HV&-S@:d8JQ[fU5U:80B+e(i@Jm07Z2?@Nq76"G"RW$@atCVY1DYuCY1qf/H[s(V1)$dMdXiK,TT"S\p@[=8&3h*n%2
%p!cfI52CiNBKPZF#"S.(>Nubc2p<X1g?L7!Wqm2FA32fE;n]+GT8Hk?Vr.=P2+2-brA9I60Q_^IiSg]BL_laJ=F^?q0jh$5GJ;G/
%[BCOTqIujtZe(ha/&#>+4NMAh4D[DXr=c+-p,.`CqV!_#ZadF8^lCg]&.N,/4iGahT3W.`VkopiXp=(Zl')"2'F0GaNdg'_2kQT_
%2Mp9[req$I9.qBg*])G&p9Qi?K043hDrT_S5OFf-r#9qVd*44)q%Ph1g?>_9MLK'q(damtX)^deYk?B5$r(Y(d`CO&@#MRJc;PV)
%^W[]9rf]NDM*T2)Qe+hW=W%QYLPLI)@5uX=LP".s+n*,JgVrcnS\sWurQeju90WalCX`(MoC1t0&gi`"dHL<!]?/%Oh80nN?W5!2
%S5(KZ8?1[gnrm-K:u7X*R^qhG%hCscQ@?b#pGK^D/9!IpqlEsR<3JMa_2gqrlkR^S@R-1uI;%"!"3qKNe`.IhTdo\i2JNMnY]M*s
%G:l(7;,*FE=P5Hq(O=r4ZjVn<o=Roce=>Ooo&kG]ab.ji=QMR325bjT<Sbf!(fpRd`jaKrqcKl#<3PVV[^DfI;'XYi?eC@<@RjsW
%Fo13k)m)=Xmn46p_.[C5GIUNK%[-O[D61LamkI7Vp@.n@(Q1F$aM0obFNt5hbe*OaqmHE>Z/ESfh"#d'IJM/lffadQ)d:cuXa\1W
%XIu,2Kh\0-k^?^WmBuMgo2[NJl-J4/V"/uVJe@tZ2<V)Z0?\qlbRXWneoEmTE:c!6[U0!E$8g']Xe)Y"P4<W'h'DYWTPL^HrM^t#
%e(')fjiRH9#XqNb,C!e/o2iOs&#g;r5I[A7pmSrQ?JH&!jB-(0KDTTEjQf*<0@]E>ILOdbs0ejh]ZcWj=$Ia'Nd0I9?Fg",]_&_(
%Hb0U(IcKgiN2-n1pP@Sh%pO;tjZhWc36>UhAsfKTgZ=qXl3T>.1r[r]#D,gAr-DM+MBgX'X-]==8SX3u5bBC(^jmbM>V-)O$?+NM
%$#8`EL$a29PF1u=ea7Xr<k/'4!-NL/^W@$gD)[oUq"Wr"n+u.,CG5o.pXao-WW[p9O*`n]XED?7'HdfSTGn[hMs&dj2C%IEX`d4h
%r4K:(XT0HL8h4-F=]XThhIt9fdF.=s-^O&+(p?^VkDfmrLW/UGFa8DsbuH>8_F!Ksl/5(8%mK'qQg/3ue!dn^SG0\q1i/070PO^!
%YAqL$)h-i6*Ah)"*%bJMho#Y]q5q0?h-;OZ]?4@9?oWMPc-"I=3-U$"^g.'Q_R%+uAU-:[fN\:&4^;iP.\/`S0&Z+qD<9$]C9;T$
%o]Sfp]qGPPBD:W;_o)'0K1?1.e,<Mfe*Ucklp@@*=;M?H^ddcg9S^<9-;/Nr:>RTP/e8nkS@-?/p9N;n]mX'HcS)I)XhJ+CFSGd(
%nro.3?#Zh9Wp0uY/A9\b;_;%R]k:d*JDoK3$lk=g6(QW/8AX?0kEj$:Dk_eJ.0Uc1g^!MRIU2u9f5WT90M^b_ddm@<e'FLSeX%fL
%\aAdX<ApBicW?*.Q29G@jinMgjo4GFP>^Mm,J1J!H2l7G?hdr6mqhB=VcC:4M9Aejp?+eulf1SDJB53koa;&^CdBRjna-)5qYTl.
%H/s'?oc/6m9,h6ZPNOt'op<q%qoZJ<f(+:SCY<s!Hb4U:TQnMIOWN5`i`9^,!IF0E2\n;H:32DSGCDB@``lr)Q`[E;QRB=)k]1Z%
%GAsqg6ZpR4@*cZmh0GG6-`_soQ/`rDk_:(HAro*s2.LrBfN1<.p(QUfY4;AQO7HJbdS])ejU9,im:'YcHIAE5&Q*h]WCU2l:n.c?
%!Z]%q]$l'%+oc_Zkq"cb*D%@=KaH_cX/kp$Q`W3WGL*bM8nX4PJQ:R%#^edbd_YH.-]JcPo_!iW+nt("hNgs\`Vj'ehF?\]H?8oG
%2(6f9,up"W\>&3rd?So7e:p.':VbA^hZ12o?A>N_$b^sf\?rmF,,KWl;]@rM@DRJ6cm^P0Fm)OQ`Hd6Jjjn/Flh^L6h/5W!^\,8<
%X\W:<K[D'7$^GKTUc%c+3B>r0\\mju>4MO<lT,6(G'inLhHO.m^@#>TaGkfsg*YIDViSuS]_<*\\2W@8jk;$\gZM"jV3U^[n`%C,
%7u0kT/#A-pA1a^mgq#tA,:^1'_)nDigtI2N!Gq)fAJ"7T)c8Ir!WDlmOSN1I%r]_onr58HSKGQ\[pGFkl0I3ZQf@g<,9&NJh5n:B
%T"^p"-k$P8>Pr(S`"I'Bq9@+M2(L9INIAAAChXl>'3[H>&b"X%Wg)D/CBWNIWS\F["O;Y#SCr<obT/N`Ml!cOdhhOlTSg/@mD7GL
%]e*6EfA1mMdlPf=dG-^k2ig1V",:Qa5<F@\G97tM$H9.Ek?;=Rp8?bR?Q2T>0Afp/SGh`#VnBOQiJ!s?a/33ZdjTQ2qO`:bo1^`8
%r(fVPp>V>F0PtI?gMc``c1:f`=oTpq(7jRHjsE,Ych$g=YkIb9h#?&(DnoMun#BljQb*HGiV4RW2#-Ig:V"BLep4f.fCPI$,06fN
%iFb#R@DDTu]Nj-rA"e@!*/DP+?0%$+(655H]u*<8<q,N=7]&t.'UuQP&=N4[46=rZKCdH@$6]r#)qk`llcD)qr,iBXr^T07JK,\:
%!NE/U@"h@Yb$UWV0^pK]/a)+gNUR:FQ`]NX^h`PX:e0R8on.m`/i\F47nNC#$Ab]PW/j"%()e,"`?77HCN&[or."iSQ4A4JYFk^!
%&+?X",.l5kQ)X?UVR6.gZ'A:I+8&e<NF9+F#ZDlRe7qU@lUA:NY@gN$r:f[Wlc%-6gMV"HEO!`i^ukLjUJ8LnX8>k@SsHsK2XcR,
%[sGp/r-kJQ)5oLkB=Umt2siuegO;t)?[H?I"5]PKb(\!GhWI.@ot&Z9jVQ$4%2GIL[;rYFk3H0Rr9^P)%IX3GF1<'nb:pb#V^3H?
%(::-g(e-'.iGLet]%c$WjjSPL\Pf'ABX./nXF+;7UjcdfOI8l_-C>CgcWQ;N2a.+aqg$KCTR1ph8J)1tIUd5ih>kE"<NCsXg)lfu
%93r?>UHnbae1CR/^@p.U$BhahVn@T+?p[W$K[?mp$u`PeVm.VsOprs<VS$l<+1bONoph@5So,8n"okUt[._/<ZFaXr#5*?hUO-FJ
%UlD,2.:UcEFGKfjjQP?N2MQ4E:g^VKc4@$U.st^M\nVMVs(LXcY#KOO]ZV<30<?g.+NE5[-2GT]loi@Y9ki9(0U-<Js(&spMlfcZ
%/DO*IrhXgqdnUroaE@XFd`2UgX5`1.V,*A_:OPrHHVHCDjppggkq!Fb-JC(?GM>XLVb]4ZW)qk`)QZ&)<QKCX+ZKHBH22dHkk+,J
%9QO)eIt/]T[?NbO2fWgqGmA@7&uh+%a*PJ6X<2;,Ef])=%[oK:YfTeX:DfqB3h1-nFZ>h.(K&W'Mjs^7o5;>>*454kZY9'_JZu3Q
%!0b(!MW^%-4[N@u$)=EYY;Zf,GDfhBBCgP:h7\g:3GE:n(!H$g:G`TQe@;i5R=C]QkiAj@_]e*><D?"o"8B42a/)Ds:[g+0h&]Nu
%DQ4oMp>c75UNmYmg>;PPA"5SZ"#5,WmH[S,FLlLaDa2N)F6AI]\;>r\HXF6Tjl.0&LrUE!8V8qHelT?T\fbn:54lGf0:fT1J*rUE
%D_.,[Dn(.`-!T<2k1;s>_.(o,btiY!,EXpIhE_VBVTCXM2#iEqBEi's8$A4Om_S3C5I:'b=$.ud*o10Ka0h\'<$Pd-=T56c#E$a3
%K<*:;p6D4*gJrufF<;U1f"cC#"';buc?^e;i^s9->^q0Hc$Y95j$J4&ln>a%]heBpB]l;:]?b[sIUH1sh;U#e@l6K8$X]Jh",Ped
%"8:Vu+SHUE$bC2(L,\RCWO0:uJ`E=$%dMa4XoEY=jSf+l%-J$gB-nDY:-F`-L],[&F7edIh/=Q5=ga#[&KNa`OfkOs7>?1>VHdfu
%YXP*@SXu8&XOhf@/U"Ik@7s%-A#Wr.!YV#8\R-n[mPZ$/b%821*>Fum2q[8UZ,ts].ogJqKgO5L"p2S`e\OBt)VohM8dg4-Dq8^_
%@_j2ncs7gciBm>@IF5Y)4,=;YQbmmpp04ZOIO]b'/Z^CeEsu8^+s;uZ,Gi3BW*R$l`Dn66W-Htf)qE#Gi=Rd)8$,r$l-#CJjP&F/
%Nj6m]J:S7f.7[N`Ch<FJ*F0N%.U(fbB"A8Z?Ni!5f:pN(9F^IuW^O:_a8CTW;(Q?^gU)GCl3jll+uT;dY`#ar+W1cW(946:>HLQ+
%]TF[UTp@kD#b1P\K[Yr6VR%hM+he/N(6"":=ba*ek>\5gUK&J7_@0*#`"B'DCdCKb$qjQ#m#n3%Fadf1\gF)i^;[0oq91W>j:5rY
%_I12VYm-e+@Oa-BE<b0t(d,up;qIGeDuaJ<'FP+H7No>X,,\J<J5L\fcI>fY3G'VL!+3/bR35TXS'i!!TZ1T=(bdX`7hs0)MN8Sc
%nC&!?d*GNgSlD:Z-4c;dPqc018[A%=H7BelD-07L/ZFD8#E1^\"r2bcV-Rkr>&>'16O+k0/.n-XJd^*C%]`cfJ`o'QHX@0[:(>4j
%d+-I:lFq`[Ckf!jLKR>`kA,*,RfS[2\FrDHs*98j<[)n(,ul&$A(&_drigUt$+f51UO.N<VPHHY_$[l-m94#P@e\7h<$gr!ToLl.
%<Fk:/iA@=iINQsl+d;!N-n#O,gO"R$rt6.*7\Cd]@3r'4Q#6uc(o[qJ_]\l$Z[J*bn4!m'_DSZI#IEA*No%clQm9IR\BRJH/37kj
%n`,AYNrbj102X,sBYt\F]I*/['DE'[SMgF>,>hq5bZq"#4S-0Hrm.7n^B<D58Q8feLuNB0UIoeVJ17c+`?>\3$I)&*D@<aQ"X_dF
%CN=.Xc.Je[rS`VI75qAlULe\kG&S\n9/;-;H)h'.ONFU0g%*;HbtS#:<LSnALCS?@58P;VO2=V*XeAETM8$Mo)@DmP2h@@,\=$#>
%;:TV_5%%Tfr>`)5cN"WPaMBRC^_uFgfJ\%70S.AH$?S5T9Yo]hqs3kZQcJCJ8u$cuA9A_M!20brh;IM&GCA'3C\88\*6%,I-_O@^
%<3$Pe&Y`'"Ng.e0Dd^>FhugGQL+Wj_Mf"&N$^?VQi#8JK"drtZ04[g_S=?S2%g0I4H"p):CSX'/ZgUao$i$qX>j6Q1H!hF/DqIuH
%FoG34I)kEI)/b0m$S>lKfpspH<$\kR1q]L/A4D'3fkJfD(4_hF`.N9'`QUq$G2XlTaAQp0.9u[DmYubTTAhX\ku0o5r-e$p*rX\H
%\X%IgBi]:,_pdipr.o3r#Oo8FKg+f?Sja_?fDgOf]eoD'8!e?kf<_>gAX7Hm[oqM&3cg;DD9^8XT'&CjiON+7bj:#5*I?GfZ]7O\
%<ab3)<[52W%ds):JG.t"q&jE)0&r]1:$>`bq"]<?!_bdk7WpKH7-mc3[b0USnKFM!<'AF/fi.Q+NBac_T_6OMPN`L'$t/]fN<lZh
%i'K]CXQu11f/np4Q=a_L7n:L?gWUQSKZ8.X"[5FR8'F\+a6.$FU;3L!o>C^JKT72sXUj]l:2/,qbHh3o0^8B!!=egKh-]*5A9ic"
%7TO_UMdkj\%F;9m$Cn2KO4RkFNe>[V1U+[!ZCXdlKE@;?!AQtCaV$#`"bnWk<shVL!#!;@1>T$DG\4V(6>F"UTd_X1&]]hHJ/l.t
%Q2iN[BR<2MK!q.k2'Yj.%j/0XRIL?Fi:D-2q2jaA$NacUnH*019md4^X<jTRD0uh0XMFA3i&$RLVDuJ;KLdhu&ufDT?nk?=E2d6`
%+gbCFZ_p768N7/9dnAm8L]B3o`!U#sj43lY4I]@ad\^CRl!::NN9_f<^#g//3AEOR>^W:7:95o.O6C1B!UjO2Ukn_Qi%nJ0091hR
%JLRiq*"S-/YXMS4>i!X;drOFOU6"i6nDAYY0u.K@@(:<5)6hE7F?p9RN%2(]lMtLX:I,AbJ.A9)84lh!Jh'MB?6K(]4&<ZslE90q
%50U)5K,VeJ_C)d,<#]+nK1MZPo)pbq4^l!gQ3\UN9"e!`@f0o48Ro\]SLj;9S"jEG=[Uh5)r)DW'LjMoDUp^'<tm&WJUgil_Kk"W
%f[55Cb-G8>-k[$R*"@8sY+]o*E]mL.6S/<$a"i=XWD.rQA=I0t!UjOrGSjSQ\C?#u$nq^ncjmt=gA%lTB$(E%3hce\"VPDS9;+0G
%%!3M(.2)Io^VqE',9=jFb?P\h1rf\'"Hs1FB0s5AO:nAiUr:.U2=L/r70hu%)iFB0)j]5IqhBO7ct^\==9k"`GDQLe-lUMK$O]3l
%#Z9rpCe4kA7>um$hSj`eG^&Te0=1F!oAQ&Un_\fFI@oo7@G!Dq">d2n?,JP?@E(_X[qWjuR[NBP`lpD^n;6Q/3:+0=j&YQWScp`-
%EB?q2f>_I'O26kJ/oK4"_iSNs?@j1&Z*6RSrg"SfIGC\?a"bmpNOU"L@F[9U@E(_P[qWjuQpL@Xa3?RRX%l4@h_F/cO'=L%kiCK9
%Jf.)"6[/BNbW,'#lt2c"MlQONE)^o(nkeANl&LmK*6mRd3'Nj(fQ8gj0Z;??LqY`@jognM/#s7re((>^X=g::KJ(9iC`CTgbOcak
%DqgT*QC]rRc/HJ^^b(`U8qDs^!<K@W'M*9^D'eg/IQYELcu$XP>gP:#Hl1qVY"U'"dR#Gf1aaEn#[7AKM;oiqLb?].L7-#cKD#=h
%(plZ'@0*?ELNi03dNU(C%^cS*l:OtTM+>43!oCuMnZY+]D>C\[6/8LI)e/,(C7TS:)FQOfC&uro9p/e!$9`@S8LWMFN#rQKK,MP2
%E=F'l(3fk5B`U1ONpR.X;@?0;ZmFDUVCYOel-(OI0n)5YQ8%:s$Wpef#Pa/t<tBn>>N+55"YfX2+k`-XS?)q/BgMjhj7[llE@7$F
%%DY.NHO'_[A'9g6GTLs!B#Tu;+k<^iH/ABs-CGhe1Y3-")o3.)SH(XXO:=BGpD&3p-mP&+PQQrDMus^h(j?I4/;(M8-GfR.$']rp
%c]t*cmnn[Z0lB=:<?`Q70MQ8p'm)03ka;`f!.S"8*h\Cm#CtG5oFYA&\NiE)kF,S;7,VoNRF:jn;XclI>9lH99NP"$#n)=u/O:^;
%#R(r6^t/^aD'VqKoJ,_gJM')WYa7!!*=X%eh]`6mj-K:A^FpdgRu_S`Cc`%O+Q1h]j?"]NkUQf>HugMUPQ3#81ej#ILd%\56r`q)
%iZUmXE3nJl(uq7lmpc-PL<;)A<Z5kG%NtM#A]MpNU5.nXKTMimRRRqR,J'7_JH5J]gG]coJJ$7r8AY1jDNUUdjn/aC37+hX!4BTD
%6$M)eHm&XAPO]0WO(jpe-Yp>#JsC:pjNu"N8AY1jrc&)0I;#4n72oYbLL`QmEeU[+SjYdo5[,'p?trW]/",j$k[Q)26ig3k#Y5"C
%JC:UE55ZHJ=;OnL1_^cM*&fH.JI\'N+E900.5^,84gcTKF5S@lLNbK?!b$]`@@7Fd0XGXVg[4`+_>BU7OmqR_2a)^'*]+[JJ5QBE
%cu@eDHjM-I'.>.&R!+m:JR!Ma]d.R)RA:l_-ACYnqSs3;N_FnG%HNntn^Rh`-cG#Ui`Wi\?Ra>F*",^F8lGos\X&g`_#'Kk&Q->#
%ZOZL<-t-X<9BN%"NtSOP.5VqMN$-)!bofadckOYr+G668LhS5EMmnE4,l7!_VHk;M3"V+<5RAeG7`$2S.<lq5/J<:Ug64Hb'RW%a
%L<!*m'LK<4a-CjB<.)B\Vp!b7$%5LX9]-%ecV1X2?IlCC`7s/o"n,sd`t?M>R[PI57@IgJ^1peDaM$`(&p\cV`2QT(5,Qa:hQE)A
%Fq`T%7e'<k`8q2LN!`T$S4I,u<+*sHT<V4#oPc+,lc*Vr_3h1A8:WXFCc_Yr(WKK3JMs7uBbpn*CRM=CUOnsm1sQ#J15PY%>80?j
%/LRD*Sd@9MgkVft(6@E$YT-=]d@>jkhYrb_!oU+^G0Dk]i9=us;:"]mJ[^,Uj2F"=_Sd]VS!3uA\>CcX3eXh%^qLDuOY_=$!mem:
%.rqqmC^M!55a8.d$=k7--l]oi$Cmrla]sPRPaQZ:o7';ghj4X:_n!Q0AY]h'fj]EFBs:8E6d*qP&U/m3326UG<OmW'CeDa5%<?&Q
%66FZ)'>HmA1k[JVi_@;Bo<eN@.=PVN_ATS4B&iMU0o5*K()#Ha>-GIl,Zb=p4\LSPT1fWgc>&*HF-=nj1s3aTO[?t=lAhHd0uTei
%_M$rR,/l=.s/(G-ieH4sj!W$iM2EXHD*#j[-WXVd4_5h.Crj^ZQCLj8d)0^.Tt*;R"k04[AYu,5fq'&0S^;+%"ULd#bS6:9=ZG[&
%9.8_HgaX@kehJ-lNX*S$W5im?FI\bq-\)SF7-&B@KKa8e%h()7,W'HeZ^nlA\3QIlX[9)IrS[m&n1M_@L$<.X>A).*#Z+-rJ?fTF
%(es0;m1GbE<=<b[]j))O2W]N1H3rb[(Uo8+GV6KP6lZXD9pM,s#,nUH[gl6(Ec=eT4/%3!0n)73HK`QbpXJH\VMdOV0[_Eo>^..g
%15dQ]U3JJ9V"LOQT@!S>i]sf@,H'[X^g]>[L&o-H#M_^4NGu[(B`1sdE,^\WS."93.Vn2-BfkX6.JYBjV@l/4gE/KeL7@j\N.R(i
%-14U!i1`3>&.QsK\)Gg<S0SoRBan8J5EF]19'g!a8:]H*3A1%9^eGK:KY)YG[`O*Kj]!2l4N;2X-A'qa_*HRB.,\Cd.N754RrZ**
%$EfLK>WGqe/\hP0nfD`a>Wl>mPgIIQiW4M#AL+M_S:!?_5s:9-ADAGRR-HejKJ(9*"tgO_qm.-.933ce/1aJ*khJb;1c`6>/V"Ea
%]_A//KNm,_0i4s0>K+J$lAj);X3b&.`.a)M'Yj\q<t2)[&]!//&dik"[u,nD@@Nj="[nf6bWMj.-Fap=M&A34Y=\Mo0#ip*%db19
%$_?G%7/3hsF9-Yj!$Yeg&;B:i*&HY:;PbP#L!/ufhSZI)J_SA$><,8g6(5V.feG$7]"HNb!*7-'?q<Tbn)610!,03W`-J'89Hl-M
%"Ne6XS\PTfTZiYj84!QjWYT\DT-WgT^^HD?V&$k^/mUZK-!U]kNg9,e`f!;3Ke)jk)t2c?FBWK)o+GI4+@if7*P#D`9h['D!04H'
%:<QRZj9#A1+]:VD![P)r/n%[\!2)@B!Y@4>>_T::V7X5VJ.XFgO=jj]h]rU9%:#2:g-2@K!a2qmm1"ap2UF08UFHkl?O3tB8lI(o
%HnJ_*@B(\&@jLPRB@qrHNfg`eAL_`^Smc#c)m73g$Zt<W$o:nBTV2KVH2HVsWJu0V0O/?6cF]E)AJli?h?d8^-jA7sQEZ&YmSFON
%iUJP?DdgO9>bEtBDA#;=j:b4H*_-=n;fh"_H*o(QCV!!PH/?Mbd2;aM?j;"$>]n:'h^A]j=uT/e*L\OpbqJ&qaFNNrL3HN.H5M.I
%/,+3A/0!(714:@UM(pQc&k7+!3%TT<c-V#=RPKHC,eQ,Qmpl9?aN\!!h!NOQRjNgC`#*_P/)11l/O5(:9EQ_<Tq)^<S;Htprm>(j
%mR$TfQJ8^!qnu;mDopBs/\j4j&mV7^M_5)WnH.+Yq!jHX],7u1HcjJ?[,a\2BZ*W7..NoXY]02s&DXK=Me)3/W/5^QIX<G$G;3n]
%lOp`J4kqF)TKCGRJRMYgiF5`"es)J>30sE*d)BjhD/lbuL(VrL6ZBP.N.DY(M+jA:"mEsq#rf)-du)6GNI>*fSkF>:]7?S,dr6Oi
%\.(C5Esjq&rH0&3HFQZgDUR8e,]:LS;<``II=B4kM`u%/L4_!%VfJc&=pL_M<:OmoE7W!F>&^]UE35O9_+anZV![VQE7)^C>&YJK
%FL`WcC8`;Ep='N403`DC`N<<_]S.bXA5`pp%&eK>B)3MUcF^Sd$Z=pV>pI1=K5gG-J(oYJ5/qKXs(>Pd;;[ka]7Jp9?\[NOFXu7u
%;(9;K:[oI@$j6Ds4(/LNfu;US*Ng!n\6@?,\&4cNY]GlH#mtDJhG08#U!aVtDG(Y2d)Ge-OP=hbD!ROU>i[(fqSLN`4^8"(('&f\
%-`O7,L#u:q=;(HI59=il0#P%MB<+_Dk<"*#`l,.!WRaZBRKRnBBaM8"PY$ge0#io@\2tN'.$c5ns+MD?6'L6oKSs]3!kJVJI%r=t
%<st4&$%7aS%ll!Lh&=b(2eg0h^8P823Qf9P=^Y\':'S$s;g-a@jJn#h5/rY=gmsA70B%>LE2,(.[e)74U)!`Z\eEub$Sa#;68>0p
%g[iV/T&caFZs$Km@7Vahlg[-R:trX%2M@M;":$D5-OG2pAWeLtF9^E2Jt!A,fS55RQu>n1E1aLjc&PUg>VFku/`+OX'<'sIis.Hi
%%<&VQ(_b\a_&3J,6m(G9`HYt2A</p2&H[S(.t%2L;Ljh&OnN't8dE4ghG:eF.@1@VR,25-P=!;`I!hR!?Qk+HDrOHq9S!$'g'Pn&
%6^h_O"QdF4PXlTZD9A.TGtIF6g1A.;k?B7"9FIaSOT^mD$`)^/giBi=SD3t7*8>][X+,%,W[k5(kn4c)2:N944$k7A_XTOXO(f:?
%'hfXGk?Dq(^o0k1)&iMr.<lr`B/W^30l*a+#r2Omie7mk;@3h;)W`:'CZ>>p#m%!gA(kJq!\bo8XC,l(m*5<+H+uZQhT'`]"Q#Fl
%$-GOU.-Dm)#?o%7M$n&sprG<UM*ek9BpT,B]Efn,A3*l>o+FaZ09Ce[1&XIrgj4^t0a[G4EYf[ZI*7aAXBGVK3sf+4Tb?U]b^Cl2
%0pNrWJ8&V<,(il1@u*_$E8R8E+pIFF$I+;,,Yj>_b=PZ\$&jt3Ps>U*CHHPDXkFI9Z/l+bKKc8=-62M!A.i(b)"3`Wn_NbbKbV1\
%WKmj[hhI%$_U`+Je<?-7"]:UB03*B_bl9"da:<.]9s[OObp.`p5pj7GDX0k@oB)k,I8'Z;,'TYF3HbiZ^(2"0'itmMC-cBIUY:rd
%HZWEt"h]nq'G1LB>aOST$)GA%CuNr.^I8Ld`tXu%&4kTH_R,7)6?kK;dRkVb=@5II'(?'Q;JqE3qj;PpE:H6':')k8f(&,%L3^O!
%$IQn9b61Raf+XANlF<:NTH*TII<apRBhF/sekVm"k[VbH!iJ=g>(Xj!`(\EL0U][@$Jri'DsghUDTd%cjp(`*C?"28d/,P>J-6-S
%5VgErZ_2k+S,h*Jd7u"W^CQ[>7.P_7"hs_E?Yn5b^YZVY'_S+EMHkQ,<[,=9@ie_)@OK#%k']u'.i&gM@43,SV:hMDR&$&:r1>r3
%F>K&$Y[Kg`XcPNtjcaSLr1@US<$O,I>7"Xu!@oF8^703GSp_jn?a4Ul)Qs?RnpgF>+FRP=AXa&JT(&pCGsB^dPQ.uP6D7=F9\WfC
%e@0^-&2^\la\03S'499kX*5ojVpC&b-\ejn7oG95&=[tCJSpkQn(TVCie!l?WA.5<MZ"Y*(YPXg^=22fn``t,.bJGqbgqmF`0p-e
%7psjB%954,Y>h%>6[*[k;,"2+j2WTP$Mo\1U(tP\#sp&IGpXjd<Y\19N2gO3GiF\WW%0XmbLp*n=[c:.W^![;NadU6J841I+bb,/
%C=U,q+,Wn:T),;s2&@dmPa(GfL5[M*M3#4Ld8qq=>u>PU[3C_$l&'BtZ"mJ3`'?BcrIqd&4%&CK!n,+LO'8lA5?b?YFr>Mf0d39o
%$m^:I&@<nQd&ZBn(IG]<KthN,$I)]q%Dn?LWu_k@UYX9!:gOc^WX+0N[(`b:e.SaN]$%T`&%YuPBT0uVm#6Z;:<.Bj:,&`o)NH9+
%\/KsAKflM7\3ttbAmnFN0BI<k!@d`4?n%TQ28m[`Bbtci)E><M6OSSE9>I_T_"?\.r!VeT+GlGSM"=dURTK#?@XI'/T``jDNB\4e
%J#+0.$<uoM$[73;.9]rt5[kjdLVN,)4b/Nl<_[!6kb_f6kGi>&s''WE\Ff.J!&UmbN<:M^O2a0+<"er5_>^qOK%W#AWiU_YIhc@:
%1%LGR,f'3Ci*T%BDZY=Y<PWkp"<je\oAhkK=2:[?OM'4RC'&9h3n]m'2=u,J#ZJaFHJiLqUTS][O`N/mAoA%Qb0Rkl'qVk8mo.0,
%C=():F_`tp8++rI!;ig!_iYK]OU]0lEF'/A_^WZ3k#Z;OX$`)hnMOBt#PJu&#`;QW*Bf7.]80\AW3>@9rN2Pn?9ZP)<Wo(F$$,]C
%F.H8H0kB(>7n028B]tTBf[($aJGtgmi@(Y_R]YP9,*&^tTVC`@PHAVTJ54VpPJk!]nic7nJXTHQVGRc=P]3Z=*qgoH=s3E?:sA"t
%831U"@pS1hM':hQ/SI>3H)[8K"o#L3O$s*K(T6r>2jWTc0c!F!XU>7#5!5V4!XNlZXk!PD*Z35&pB<hRb$*_%``YHR!]!l=ABPh_
%<+gO)]#oC;;rCmuf+Vd.E,R1'lW(a2kd2<sncf+YFFj$]X9&C]rD'<ijeYqiE'd"i`n!Ef:h$pRTO$&7FE\O;/k,8OP3*#Nkn+JQ
%ftRcbfh,M3K)Za^iN3q"\u6rV_\eAK)B#2UO\V@!XOj')#:sR<KW#09H9ZEiU"3j=FRMeM/E=BW@2U,XT%GqYkgobH^gQikUX5]n
%UG*SeIGH#>$"oOuI6PH=!'-fG:'Q(_:1-"NajD>Cdb>a@g+Klspj9p-R3^Dj,EsV!]T3mBNfPVp,<_R61iIo</SXMSDOOD!E&'Z5
%>Tj+C>u`jq<WT$m"eEu$EF'/DT_gc\+>pm6b-WbN0SS,E<ClO'TXf0YitrqO'i66UKUon6mb9FE^H=C@75sA0omib)l91Ibp=0q/
%f!5ZR#V]Z#YtYg20R4gqS\R"@%hAa2Y/sK>6bOn.:HGSsED;&S?GnS>">mT3m7N=QIDOfG_a\#OkOlVCOKOS__.'T^L1!I2b[&)$
%j]*H,1q.XfU,6!^j"Fup%2j@cZ\[=\FgU#Sgi/3[#$ccle(S^qDa]IJCOnAfFpA=(?sZ?CZKs?lql]-&ITamNA$)*,]Em<X.D'59
%jN)P\M)W_7</_f&b68X4ODp!P.Sb?TBkI.?:mLriH6KpnbrS8nk&h?0M6J0[d3K@IOE("?$TS(p@#>d$^!CGI&QL[A6@WIAX@<Nt
%36L6%<31&q$a/oN-0+nX#`8;B]nFSKH+rZh_u\@:]Sigo&TA)Z)J3]gU(`[tg$aS?j,TU<T(XoRjBM,%\'U9/ZH7V'b#6VY#h7WZ
%89'M%rRjLr#YW0ce*R%I7>Eu)M];]p_nU&DkDnW\r;_bN)&_@V[,['pe!jU&'rupJYXOp7NZV]c04,G%n7[fM3u@=d6E1L?%tYm9
%20Fge6@"\r='$qb7<?i?MpYTDk@^U3!#eY!Mion5Lh0lL+^#<qOZ<hPZ_A+1B?P26\5eU^&kj+<70F<MhmE`#++hg.@tBs/MEr'l
%Ib(Nf?46f=N;F:EK.elIGOteJaP=bDCD2OGGH>aP?#3gU^'&oX@a(n>1o"T,n5dXY-GD*J_V=oeKR_S_oT+@gHTTU#Nlo$Y9ci8I
%Krd7=3Mj.rN"SI7*SlmWRhEHn']-kp`Wn^il;HUCBcfsspQ!*9DufTOl-68Mbmm*X(Uf72-0+d#;!?QTXg=MS2fFKN"UX7RrqlF>
%,mOkkGH-3q`#&s)VTT"K2[W>KEm]7^ptUkt;o8&fjB]u]1#E]@i[oPq2m3Qjn;YdUHd-B*o\0R\Tuq;"]L-8p?bcu<c0s\kZP*JO
%rmoQ('"P"eCg+MP$rB0]]tT84N.D5ZD)17A._p#Xi/Bu8A_5qA,@RO%,"oloA)K$k]qO<tnaja)'ak9/gu\pV.WFa6#Jn%.2N4Zt
%g!H$Rgc.4+H90K.I>[hmA$@n+]G/nE!'m1p\PFmpn.UQ]!EoQq+t<V;1E*);i,T=e;1Bsh@&Z4Vgc7,TmY]8V@$*(,[2?$*#kHVB
%*PT"GN#sS_5B1KN*?j*>q>gU<8>E*Ip6YuGo:;Ol.>EYNF##rPXItWUk_m6uTBaL$*&9;C2kfbT_X<UH<XJFU/]*`lo^r#5igQfp
%<s.[gSo`^F_#`XPm&c8sg?pN/P]<H:"/DM.UX:*0,fXMZ7F,O.s1GU'1o<-(9?)s+:npKB^/[g`Y&["j,_WW#[3jd5AQ/uC#`W?n
%Dc-[-!'9-+UB0`<=tEKL3mm'ONR=E2A;tFJ%@2"/)K[*[\Jjr2FPRH/.fWi4b5#$2f(o`(DMp2[go/66PiT>a*JP,%][eL)<=q7>
%pNubPc0<1i//^CH0d95AYr;)Zk-Hc\*F@K<FF$5r9sFt&`f4`[S[c5CNs;,_Zs`XUJ6+e6UP.c/&Hlu2=f-_E3paIm.(PC8R?ln&
%2UPM]i<'Eu`Sk=L[%!(?i%Ra?X"m#UViM-C#dQp00r*;KQZ>O^^kkJA7T#8T$OHjQenH!ST7a?djk1TN;]@JeO"F)@$k)aq.W3<B
%Bd666,7+5%W;0TO;F;%8I7W`(<34+5'\Mgk16/DdNH2Z3_R(N]CoJ"c^?-A>&iH%AMi"OBW55R>$e6G9lnV>:d?#PPf@JokQolC_
%WSbiU7HgK%=:I]4=@K<G@RUF?2/+W[a49[(+8]VML+f8i5[MXtF&Xh(U4j0B\&!t<b_Z`q8>=$LiNs(0)-eK6eQNqC;,LQVnplm[
%cFgkKJc8?U^,;rp&aQ'4_NJnD%3R*c\QE&K/`J:lGt<M.'eP)81YtK$$g(D%14I[FI7ZE#"%)R"^-j*<Pa*XN1T=0.j-EnAJ#A2i
%QaNqTeIf-SG/=l3>RM5dcI_;DdGu)qkZF5W7K<i,Vc)dJ,</f4&5EM$Q_ePT\8<>DO_8@o4.[U#XpB0j71sQLGV8BWVt$)EooFAS
%`=$f+"W7rD(KtGOE^-)f3(JqGaVDQKIW38YFbCU6.n%/dYo>iFrF!Ss=VB$:hLCk>X:of#]W%3Gm?nh&3qGOe+H4rS:$%CMYJ4@-
%5`sCY=eF83E\s13!AHBN"NQIb1%kB]IjF$_d3ZQ._QubLMH/\5"fS74h\cf0>MZ]j+e!,9k;<;;>3\6@_TDsF+W,kYj6R$n)VE+W
%D*iluTntMqJ9n^`a'R@boG[gN_sG(`X8nm\ZU's6:AYX2$lTAk0rhgqA;$uLjdP+)g<e1KbLCZ%O!Wg]4b.:7PMc#*q\^D^F5QU,
%($<EVe9tgq8*6&)6'sFQ)kYGb)Bo4i6XBrQ4,S1*^8Nm;I@4^hZ9RYAV[.C%DHn=DN>5TK*\G6nEI:G)*iUap:PUmHKtSKs'uLDc
%__p5Df;V7RO<i0HDU"%q:Mc[4)<^[c^7)%K*cH\S=!(9AdpJ[0;+Z-qV)6"3G[p!93$G/#cDH>Pj(b7$)fA;i-*;5a6pTV1hB#[]
%ZmHo1R"N=6,DX4pKnQ^(33P\9#4hCh`jcA!7l\&A[WRudp1W[93!`)KKo\_TDqi$&roYjRD5esjL#Pt2.HI<-,(=9p%_WQ>pU;=H
%+[QU+YX01uX<U*PGs+]-]qUu.$^pfEi@Fg7f:t.%_?DjA6D3R?<-*a.rL55$aH1CBO#uXr^=cPJaL&>/Dn=dRQh4qaHcikKIOCYX
%Z=1LF(hH-mHt^9mN'$Dc))@QSXJa<"S`f#?CAl5&0+iE^DesQ<&(iHn[aQduqhYJ`1@DO.!OZX*@Dbr7+Io[q;o5)+S8;>C.mrpQ
%=<iEd*s"U3i_.:^<nu_q;Ka:FnDVCU;'-\G.H7iH^UF\+>qJX?[![i^Z53KH"Qf2\_ia=f7][pnjOUS%f;q*B+F8YoAK2fY15`Q<
%l*&'ckqC4geU(KOs,^8Fg`$:Ym!Q4kS:GY"PBdsa>`1_k/$;A#.<.MR7\C"&flgZW>tt7VWsC+^`1=&6Te&i.#%>Y6Y=Bce0IIBS
%_3N@a!R$e+>92Z(r;Nk5%su+>d>AUaNLMj4;oEr=aRmd#%M!BV[4;9-[FVD-7o^i-<6>=D$;%-O-aYd$H$.q2*7k6LFlV9Pi5&T8
%`"<R@LqCB]1h7<q&X<[LcR8.&bmFs@'rbcd33UB$rn#`C"X"-Cb_BrW&EX9M3Gttq5&f7WVe]$5C6$=..H.usq/O.s[@VR#Yk^Ge
%-g-ZF8Z!K%j[I3"G*4<K-;pMiPSc.sl!+96d:G_cK/+Hij`9@,/F/,K`R1OgGVO/?[Oc$Ekk5c#_N]&K090o8grt#^U[;@G<CP^S
%]-;:>gTtj-h\t0ur+kplKaA#S56..8D7eqp0?CPlE/Ai9N$qcPiOpTolKOTZ4]/_lnT/=GhW[ooQA.p/V6cIW6Xmg(DF\*!d6UFD
%_l!Vd*'#tD:#W7tl$h1s;oHpeXof>jchV&d\'3Y@&Sr358kG;[71o$**;6uIQ;EgZer]FC)5<RV^k!JaY"5R]mY>(&AN\=Q80e(P
%<Z:peU2W+0rBPQG3I>L`km$4Ld6U^Ldq;(\l4*2F;,KuqSEPeUj4Q4t`"a+^"7KMA(e]Jc3&IBPBXc&+=bJ6`iDTfGh7Xd$&jR7<
%9)#Z`Qm*TdN?I]TW`9QoFO[I`&mJ]NV+Vf=,0X_g?b^V2F@Ba'nLidWdmLOKU=+!7qOsi;\f^U_PjgeV+`5/73p"$g&;]I`0KOc$
%@$KFP@>"jfNb$fG4F8]B[\L_/4r433`W7`bFG&`p`m:1`o;-;r%!6C\a]K-/J$JIb7_!]&cB5$;-VoJMd_^`i*'fq>0Tb2H%9((6
%2iWq"<n@1[>S4oCG(1[]@teIM9/Qah%E.?ZXD$i4cON3-`ZqC:C4A`ZiF$ar;`/V\l\["KJ`]:Y([ACG;Zc81pTXAo?CP0#`lJC\
%c=V]JM0SfSnF<M.]_@'a6=)\#'9Od]5BoYjQsVV7"p"Wp0pW%#XLgF@76uZ?FjLimoI0fs[V.7QX:"*=ee;!#o=#<e>#m0C0dPFV
%#<\oVoA2L\6\PM5.*4E:'qVKPV/hpma;L_@kttG?(gZ*"h:rOQ@`iqgd85fjp-L_7!GLI41p741hoXDF2pjh4DW"g=dq;(_C('Jn
%O\fSg*9i=(oo#G(,JjG+Z^+(1d0<u0%A_">BW,,9ok/Bn'(PTCd84<)ZBnQ+dJ^!kQAGFHOV>&G+ug_<g#.FJ2T%*lf#*Qm9Ffhm
%69s3--7Dmqa`JM%CWLb[o_>@8&?"d+d1s$qC>a=!T?n=Fc\W2E$[`,[QWF]u9K@]X8bo2`o/`st&HZgH%-"9iOm9n=3*o7t'Bd;H
%>lbYfDCCI230(ZH#sIhSPY`O-d3HGiA"F]URBTkcYN^oUl`2j;##VIb6W1<(B"MS9ECtW.'r]8VMU<0$m\ep!352:@^5W8S2X?pN
%Nk;fuG,bgK>dumB7h2%&!iaZi5ON8eJbk\q[NXZH4i4ksF^T1ldGl]VLHV2$@]@\K!^fs^SSWi6bS@B6rjV0CnFVDrWu@H.)jrT)
%WeM\GChS%OH<:s_>BKr2<nYM:d]1Cc3+O&7XkD(gU.8u=-NEZu^jVG;X$XJmp8LDIN;,I+1ldUFhs&E/GgDgWU?T^94%$rgC=%MX
%/bjhO>aijLZU=(b^E@/Jbpnh7lnC/)*7og$%[:uS19ue]NlXc$Nof6e$E"2do&X6]bmArOI)=c0go<e2II(dK!V[jp1i#F*0fJ`l
%`d2!e6'rj6<<EM+L(]NL"5Ok':YT$W`Zh-P?S_sT_Kd.%#=#Hra#TEmLkmulo0^Y<^C_#&a2]%9.QRdu[q-Q2,9WHA8if@Ki#"HX
%(QW2F(.SLl$<p;#!#E`RX;DE=raZS;KKHRIJGb89&p.INSRYYW!=?dD*rOku-eV,(Lg.8Pjm6B6"oXqSJh\&5Mk%B3=Pp_F8k[*J
%2$1Y20-p+5,qi"No!NmO;^BL3<tf6pbIf]G<[a`mNUN#$,O\P5-q<P:f<'1;N0E=E7A,XAnD=0$grL?!QAf&@^h(ae?&o![K/86,
%TY+@6L''kPS+1oa33EHX=j9i_Z!PsHApPdR3mCu$aWAQ";$:&B>bg5:<?E?@#,-&@P5Fl"0@pXb&e%YqZkuB3`GB@LHnF"sgo:Hk
%?ue0<DChN>\ht8n<P,(qI\g#FTpR%l>T">+;)))U&e1D:_QgY\lLu#)#$egG_O$4fH>Kd9LU4oS?*6e*"0AfH!cCjJ[B%`rE(f/V
%%@mnsXF)`.9?(Znc!b]FPkO``8!UqrTIIRL9&XTWRk.7PWk>pdhB5K0B=m.c)H2;:A/2OPTH0C8K!-Jm;<(Bt$8a!#CK??I-(I32
%$dM4.6(PD*.`;hN(7Z'!&Ocsjk3%r?E.X53$LWY)o3)FD7XB,0.):j"'%Qe1-j1Ne<,71f"O7rJ<X]l/NNg37,hfsG3tE'8#I)Ci
%];l4ecVBq0=O@,CCtDEa1=#4%5T:#d*W00F&3Iu4%1nG)2ZgdAV7"/hN1*rIpF5)!`\&qa)/,i4GuKM>W%aRgp9q]a$n7`C[YiPT
%!LE?$0&jM^iq1OKN-P4tL`IB&S)QXK67Q%Oa'ZTe8e$>YqtDDrk'd1^*"uA807Gk<*ebS9cd,;[P]<T--WB.7V^lO]*>.Vj:Y>._
%j%^gof""e@o@LDhpaPe#qhYnl12\u/"2_e>7NDA0`>eN5&YCiH1ue#U<Gr`E;-1FO0]H$JSOOU2S`Ao9D6-6UC4F*X0,\t;EGTmV
%!bB06.VR;'=Rd]s\/#$XJ5#"ebpuRtQ\KE@$7q;`i/4=oZC)A/9*nAH73!CbQ*<2tK-_n,@@(r$;A%'?&Eo-,RC%iOKGVp)'4!AR
%lQKY-_nR*,PuDXg"r;:s>TuU-W9_Am7Z%q"(>Or"`%oX(_.ZEX"djKr-Fbk3WWo4(_]Wo/UZ)D8Q/@^mQAG-9#[#M'Lm/auLiJd>
%Yft(eb`>3.K7RD4.9>)WMF@L4161[oU;QJX7+-9I-@"#L5UNkH93#EF#r''G5\aIHcDr+-8N=>X<C9=[01EA]30.,S4C[P8CdG<5
%.%Xp62(]^?S]d'UgM3F3m<0n(Cs0'iIY@:/d<RE<&H_&m,J,/>`/sL[&!Om1J3Q"p"*FfH`-2<+#1&2/:o[[W5uP#1G8[;!O,)+`
%nA^_d1V+dC.MiitYUcT0dp6s::3>!;/4N-/(]a_^->&h=Vcab[hm6lVI83alZl/@4ERZ_#8%N0PGk@Ls^pWi`mg-M(V3n@'d<*[+
%B&u")c^++j3C+PoN5^3?TZg$89]l(nKkDCGBBQY$j$(>7\XKKe'>[kOhE[YUCY1].q.`qJ@?TFh9Grn],-%&QqfAkW?%M%GJG+HA
%'iW*Sc%\&1_.b@&^IhiQQoWf*'<9@Se+tuJiNm)XI88/^9=]Y>`f4k'*5MAI="G68SeH@sQ:FZs(U%0In#Zn&#E<J!J[>,f)%W>Q
%\8[+7QqUD:0)(+Br.2#<1*42q#VZO]EUa5A9gjOshI/:8]USsG.o$i3FZUkjP46EcTj$,UU$tKNX':\ni=GRuPjgef+`5.#0!4KR
%5Z?N0N`OZCJ2A+_crHSU&eoM>W[6WWZN6,&-tTp_K;1XkHKp]CQkCH')s4K]h?t2)DN$G=UDjQ\,V)Urra)@DjC.N!ZQ[es+WE<p
%TrLgECufg7_j'ZgNC0p8BEiZ&%0RTNOieWC,/=70YJ7<!Lfg"fnm06[kD*fLHdN_9m9N#8q8t>ScamT.GbDlLNC7>;N]P^3JlYJO
%"p>D%TW?2]2q%EBDd\<YVp>Z;NAtiu7<mA&eXA\fMCIT=F+Vt.i0P%XDl'S`)2eUJcuU1_AlWN.%9=!6),Hk<oi4>d9P/Rtc=**a
%+6\S2j7uo9i.58WQY`>A,Wpe&#-/$t7K8_;Nad\i90nfuANY!jW+M&f--bW\!/b`Gb@b*8AN\=UW(,2tY#;5hl!*'L2dg;3*de)Y
%=0]n$hZ[,*Qgs].;,E_<)dSS44UUc*7pRi\4F0b5:MdUngGSt)YSIHbHj!,El.]mX9h#XF),Hk<aCFP%a_\/N]O`k5].92+qmM[*
%0MU'T//T09!($lC'g^[f!kLlE3><jPbCsCJ'28d/S/e0n"%"pkHS9J*OLW6Td._b&;1p:-?e<5p\I*a5_i%GR[pB=DC&1h@JM't,
%\EZ6DKI,Z81ZG14+?N\QW.r:tP=n-F.ulqQQ%55p%YGPlTo=Y"c2s-sV7jf6-q;b%C:4JF/dY=D&YF.JR7-aABKiqrqOc=LhqjHY
%@)#'/AIoX`'2@dl<R;b9pOJc4KsmCJI)X77g(87^)ABJjA0<lI4F!S"OF]$E+/%[Ncl1P4T\4Pmi&?9Bq;8.R2)Z5QW@!TV0>=g7
%7j'YplBGc+8RmKm0t?,@!GZBAI2!;L^%8*gdD=S+%:CrLJ_@F*T@ZBuL,'Wc#3&S&75Tq'A"ThL6jCp2_C<r1YfCVtEN9j7VrVZm
%JbX[#nU8m4nTdiMMDQ0d5\sUJNiSk8HL`Vi]qGJg[sOSk'S&oVe0np/;>\7]$-H/]q`[/nLsHXu]",'DCe`e%%,DfR9Q4hT*ons5
%<]'p[Y)B!.VcuEnL')-Xc5I1gTK-dIVMt+m#^"KSUc(uL',2eI\P)$s3DJ];cWo?B-\,"7Z%!R0>R^kg;ZMTo[hK#D;ZNK3J_liG
%gR=oW.ou1O_D<bU\#Ma-<Z%&t[?`l0Gn+&,f.T\oULlAi]+!Vp-0%``E3'im3N^>hh8XE\03"XgpZB%p!&Q8>kLC,;P*1pOaLUR;
%Dc-dW3HqVMd!jQuPHJ'9%Ng<('sqN,W^f<kib7NVcr3RHP_J]5J.]3?V[s9R'QL/lSh=aDc;r2deIf-e#L.CBP'_+b&1BP+`c4-U
%A5=(,Z=U*OpeRln8UN0hKSI0mdn>BpFgs.FcqR0QXa1\KQtki9ghRCMe-%g?W"S?5c1Qd/-\dRaouJgAep-*o(Td/"'8GtqGYiHq
%9W[cO1@ABh(HRS]bRkf2[gW/*CoDR/18c_9G[m-p&SKX=oA]c?p]#7BSS7),U"uieT^`TbpIa>,9LqGfWd)eIa$NMAe<^fO3Tb1K
%=$*$7RS+;$P3t<UQEER?]r7o('U?q/OaS9o!cCk,$H@u,3k$IO>cJ&pX,orXMA<ocV9H.T.alB4DP1)DTi[(`<s19^/acm]*LpE*
%;54H)8@i?"YJH#C*A;#0#,s\qDn;K:BLpq:1TDeK[94ZHDq!X5^;'^8htT4dc=SO-!$HRl\P_2;BV_Xe1)2;OK%gqO8H`k/6!,nf
%0#c;D?uYti0o]*]"T>A1OG*@"S*&W4\^2g,^g7WIJg'1P-6Y/.-:ar^DgGf[4'29U7s&9T]4"%G(!lIpfT:)RO7VjQ]jJRH)`ga;
%Y?%[GY$6R:am,*LO]g)BYp>7S)*IODFI_Or?7=INa<3IidHo1qJe^=A-R18L0a30X8TW2cgQ6D]%n<_<9_4N8+Tqoq3hTY8j]YdM
%3$$$hp-f5k:8_=2WhQeW3.HBci#:8JhAL[1+`PGM;&QK(@H6uWo0qJmRF=]EbQd#=EF+P,>XPif%c.UQ-O;[cjKA)O>nb;V7h3]T
%:+kLGf!b$?_Kfq;YVe+,`Nsna&9&gC699P2>m,r">b%dd=H-Tlct.D=kOmbWUZetbnjY/93;>G_oBr@ZABqk>IDlPI@ccN\aLL\4
%Hj@Mk8!I@SL(20R*JaN>B#CO*)f7Pc);S`lB#A&W]0L^m@`)?gNA_cb/-e?dBi@_rF]E_Ga)*eo\CH>_Fr-ob`36N?&L0JNgh=[3
%h+9nTD6+?),6$.8\)L&tSQ6`BSQ+Lq`gV)#,[L;('ji_6[Gj1'fA26m9?hL=rlBn&,*(FIT8.>SBCG7JmTJM9[=gk-S=Zbe,D&R^
%SM2R_jGi19$lR(j>NNQXmN)gfZN_Yu(L^%Rqd;*sbc%pHmTI/Xj'!kt0tQ3'd^\eC^mI!4<(_&#,1++r.$S=4f>Y['*(._k4Tp/6
%H[)+kJ@"ZM;2PQ+65p-F^bKVT\<I?J]8Z?-#l7X.ara\q'c]"j]*,%4;_LHVn=&.uMA'5?Hjn^t*7mN2<qZR%b&Qd"@n()LQ^eDp
%AHF(E\C3;c^]O'mhN2_`%fmd<76a<l*&ASNjPI#Qe%fKSHR_cU"dBpG]86>Zji>&h"+[h6c"i,@fu7cPKP=!m$1Uin:^KaQM':oA
%/g^at6`48Z38?r2o(:mMP1p:mO0hQ:j'$Fp1d$-r0LVFSTH8h>lA2"jf0ZSoibM1JdM5^#l)m!+-#eL8hWfk+'+g+OTF4Y1gTK(D
%Zn0DW5tf/FB*>5j><l4GUO/!OiqVB%?l@:^&\(R.I7iF`js9@s'+b_Z"+&q/fd-@:&Fo*9J_Oi/D)[eX/2oTLJ'o!/`6E2&UQ@p3
%`L1Y)$BBo(]p!(gof^dg4;rDM\:EX/d1Gih$)3kkO^Sf[Sj5i$]Ou`D'iW*SD$Dq>9]NE'2dtPZajSW9J8uk#0%?ET.+\n*lm:ZE
%1BIp(@UN;(0*DP#l%pkLfe[*MamVk)a6jLM"Xl^1M8&j%YjM(#&uLJ_:C4sa\D:CVYo:Mt07TWBVMN:],)iEUr6S3NE[EKd==E/0
%&\oHnK;EX2VuZG9VUHc:\p"0NS/nX&rRDqG::7Zh'R/g%IUEK.ZPI;W1'4_?\Nh[@Ebq$gGa,#+qk0\cUt[qC$$c)IJ@=,M+BHi=
%84D$(\m\3UoN[aoD0mp8g(.cS.frkg%HJ&3K28"P\+>+E>X1i0YfpUsPNr_MpV"6oq*0AL@,.8,HOFbf!l6[a/hOT1512-1`[FS1
%Z^mjWQm*S33E.es9BUoS'+QZ;kt"lL)%X(hWf\#nP=@d`T2LqW'B&FVePI(HD8GM19>o:l6q02k*OcB%,ul_`URmi.*^(b;jBT%!
%1u;smCI2$XWENTW:?DO:6c@HO6q<#9k-D[jPj\OH-^KSOmii1.1BNBGm&Z/[1KKCW&,"a'jG=2#':pN[Ua?lIa9eT0M6)@AN1L;'
%S!]4X`K]mXS"UaW#]ZUYBUptTbL6SVm-o(aAlOl[DY;>;nFZO,QoG2P$>S\BH$u<-`0BfUq;@C(<K.mTrN!;Cfa'_,m.ai<.]>AP
%+A<@XT+[r=$H4]bIWXHWnb3,K0h'm,LRa&P6\C$[*+m#A*jBeD0`[7YpkYFT%^d*R!I=>8FDT$Ciq3#E/)Z4t_<;50&7cT+@TT)<
%0cOh:SL_;X7MjP]NT!\J+aDqFX(o/&<Tqq"$j(+`GiG7gW%1!'fU^P-LkbNskB4a8*&F&Q#d%>doE*Kq5?!\\%j=@#-A]Kq'nAUj
%^R5ooSiA)]lAC*GFj>9]XQXi]XB=M0]&K2K)B4E9Y#GI+2QTtfl_OnYG3;s_bmLH94LYb;\*.hj>f!;GhGg</!6i;$]rIF5I0OAQ
%c9u)!n`>sB4mi/ceH(T6euq-]Tfl!X[X89qR1.GH;a][U",$WE3Zt0R$OeFB(,091)[?W#1(H_#CrdT^A;nFcIpNA7ksD,1F-5Vu
%"+FZq7Wp?Jn&WH94)>d4%74[)SKZun2<_t&"X8&0&^N-"CPk@b<=Wr9eVKQo#%>Y6Y(ses+e;hD:BW'RIAlRQRK18/S^#<I&-9jB
%r*@7C>*N)^4r\7P3@Xc,M?&]U1E'IhDr*,U&\"d&E9T*a!!\j%T=q5e`!N8#d7q5SCG7@QkI"]rZ$B=1,WZ,])s=QC063K]e2#n3
%262P#Kk_0rN8o3i\.t#6_'M:!0ME6WQ8o=ZXs*kRN";eC'5BMu/_:PRWu;!M'o!KS+;=*!70%!=^BSIKj0bp,KM07c>0tAE6t7o5
%+NV']gUhpI3G:lg#>,gGc>18;4V0Ob(VbP(@3S[MVP=I)QcXT5Aqb).hh&Sb\5a&#7jiJ;lfJ8"9T\8j'_H<_gWYQSN>+u>ADF1T
%5g:$Z4Ff[DfP>C4L=E<p5RlFbI%MUCX!+uR0T7H%5`@s=`;fln8PKd`FLotqAjsn<oCd(C\5SFgUa5C<4cj5,ctdP,qHS6c1)PTi
%*[O1nXa1]6(i)6QMfZm_cn@_b`d#icn"/tqL5]?'a+3e:QFR5%RCAJB9%Pn8R0Qnl/K9?lj/a<VS)E6VZ0]Q%0k.3+'#UQA9C5lI
%5#ug7[phc2IO@.9L5aU,R`!cU)9E<rmAutIi1;A!TdBo2pFaYC'NU&CVNkMQ%2n=FXiRH:Chc%$(,..?F?;r-]ZqgJ"!aknU5f*=
%A&pX1a)PoE)#M)r?U5dM-)be4R/W,FRZr#20qqsY85T.8iVYi,5bI7liB%iY;SZ2;a!F<t;$8q#oY;!jMA;(ejAg'<33S+15/lL+
%==8=s//=A'n5G!je9Xk2:oj^@,Gb+X0&ukI,)@CE7pa!["dK5B;^p8"#p_4()[^WfE,5md@>[%J#"+-@OeT-kP2KC/V6PmhYpJsI
%ac%EA]\,hl!m[8rJIA/o35">l,RGr'#'C\gh]qV?`1RDaA26)09\`(,=$p6f$!Slt_?tPki19-j5R:K&Wk""P6P/!Yo7U]1HosEI
%.lH`iXa7m8e%I*J,8P[K\C6*9$lu6OCJ14*;K;@S$bf$aC;CnjII_9lkqZ.9fnb\?plod!"fL0/F8W*te/kOOEl*E(&N<n_LeAGK
%K%H;L+cE^WDSh`n4)K4Y\m1o:eVMAt=0Nc*i_.:n7\#M4h&3_#[%XqN&9sfbnL<M.&cZR\;E/sR^pond*sIurFctg`#k8WJ>BJ,I
%rcGOcKIPsVE3%JU^^!M1L&abM""[j4MND1e-fo->@TD>a1_O,]N8o3im*foqcq^o599!$e\KbfTH$,BU,HO!-,8cWoOE"S;L4(!>
%9MpECUu24^K$UA$_r!($NP`fTitcgZW?pQ:(6&(me*@-H:B720H>udueRem9$87sQ=F"`)aWO7pa7W9fDE-3(5*u_0'SNri_Beq=
%RJ4XjXuQN)\Eo;U/E4;\%/VkV04'oLo+ur,3.uE<eS%:$gOc1S'W4W+>UfQZM7E"VIb\L:B]1qc_pRMOcn[hUCL:PKNIc0FZtD)>
%=cZ:6+le^a,m@c[YBFS@Gg806`7Ljl8.6(%/]A'8X.^Jc.H@f4oIsqeT'J`17TZ7e\+<,$@`g[d'h@Eih'$g_#'pbaKbDS%4/2$,
%7BLLk>XVf9_rh//k@4/)S7m]ehpKGmUar=$B?pnBo*/]Ed#G+g=TaQ>FoJ+I'f[/[QLXT-&ML*(]dn'>98:RdJZae;8,;NL4E];s
%4DrG0d)"I\@V;Pb'`,-S(CGgpaF7pGGiTQ9mAElhj`7h6j%AJ<!?_<:/!c,!RLM,\n6&co63h9PFTXscbbRj>e>tb[,hb!p4t#9H
%;k@CI'b8DN*pJP2j4SJT&+dnF*-h;m:j#Kg3WrKi8t;,ZbBWlR5Y\%bQqUC/k@0h&+6\S2j7-?1@%>"[*J8p@K;I"ALK+Ho6dJ&8
%_MORT'h@gIiJI.n[?A*NnjQQZgQC-n@r6XD5>2C01Dm-OF=WF.5h)JV?Ndf8'9L]g:)`)EFd2UV=V;c>)q$6+G!'P_,>$nYQV[Hd
%8pKuER*TYs0/OC.1"HI9@-$fl`MpZ-C\3WLlofVP<&ulNb=7e!Fj7.Qhq\fA_Xf\r_)9%;DTP/m_&>nXTk_FZI4'JXAqeZ>Osn)g
%Gi\d!bm^dF<mBh8:NoHT8:T2*;oSnKL2,ctEbE2P@&6DBBha*k]Hor&9\ZTO['O:*I81IjI.]s1jB'EB7q2@XY*^sc4X\62F>F\&
%)Ps%-`IXq4IPK7HG3\O0o[&ckn2Z&ukM@bRfnbWo9]l(n`K]ojX[M)ABHE4:ljZ5aCSf2YWsAa":^33uJqG=SbE288.AE7k$EeKG
%.tE\taXa!+`K]mXZQY<%L`2<YWX^4]*#FL]"QY*t8job!I2*%u11WLq:,G"#E+MD=0c_C-i)5$P'hcQQk6.mflE7fF;P5$c)N+^K
%0FB;6@caRXg$#+Uj5G&'+dUIm-Bf-b4r>X<#J+Be\8NlXN&jB:#(FOGZp^4a8&5cL6:+g!-7DUpJVaTXdZj7>amhqe+El3KUE=/,
%cj9<:ee(CQVe@Q8^_HteQr8MPV_Ja7&88W$-Hd:2MA6aE>Vl^b`Y3"'7pU\=pD0g'Z%)S@_p@Y+UOZ9'+l\[FTES#Ge-_2=lAACB
%HR$>7d![KFK<SlKEDCo2'sp)TeIrf:<%A1KSt>`NL':"qju8g-"Y3"g8g,shmg1CgS-c)QAc-9#:b<9gW%h_:7M_/I+2%*%Yanj&
%7#UjYi"PH-ctjo#n-pA;`W&sZB`8>)"ud<Ae]&DRdD9gQf%*f%Rt3r7ptr%QXr#2sj"Oe"h)5bJklC/GVYX>QEEN.blQ@$:WK9)/
%r=Uq6Rc(n8'Wi\rL&q+eWR4PHhej6MWtm[sP\d:L+Fj*?B`cM<!B*B+oo5LgL5=l)..Eq[FdTVS0hUL"`bAY7cknq+S^iOIk-M`E
%j&S<nnXg9?/0l9_2RJoL)!0Z`X7f.lkO<qcEN:-`6b_mK7_0"!?CE&\XPXuW5mh4HIFr,$f0doX``]]jI[pI3iII6h@9O<G&4+ol
%`<h&ur,ue133J!&+NcqSiSmT>as[?,OtEUZi6itJFc'287Fm!`=u(!GK+?=l_ln0'Oa,2t\XGds)[0)3Yo9fP"r>aPEN:-%pm/pE
%OH%Aq=QA@:\'l7VJC"V_q\4$V%7++<oh'#T:gERAA*;-;"PV6YD\AKRmI<s/KYGU=<KDNm>2JoPP\W#'TIm8OW0ZFB?H'rm&2I=.
%^/#1`+Yc*NDQ]mY7(.gpd`E_9_ia.*)m&"c161[o!/SeeQ*&5a_D9!gIuq#P+jfnE2@iPe;60i,6nV3GN'$^*k!imBms6)]Rfafk
%!=>]VqkBNPqaL,])V(!jWu_P?i*:Q`>hnG80ch4;ie"2,=LD4)hAD;"j4<lXY^YTG503$_BIsaU4&n(;6(g;;Ya5)!EE8''Zc?7e
%$$kKiW$F)W*(hmbVs&<#o"Z!@lL:Zc&=/:HZ]o$S!E\[CVMB("kurELS>YM8`n*r($H:WXVImn/X2j]#\b?5S<hX$#.qO`J0C5Ab
%L^=LU.'!3HM?%:L6rYU9E-O2D__YgC+';Y;k1Nq(V@pKk._T)VD3[2F,1'Vi7Xi?WX:eutK0`TpNp?_cq76fpWQnMqPK`CqFia#;
%Y!TqS7hSN1/%WUF0er-M-0%2doD9gH1U3!1(7H1FeFK,9?\$eNGlW_`Yon[F,[7A>DlNrJm4ut667Q;D`dsQ/6-TJkNaS!`>gQK2
%VM]o9L%qM[.i]McHuWM)SC[j6E,GBa!52;6S;\^g:HD2sa&ZEY&,3?A<s^,(IjoGR8@X#0`UX)c/2e94(l?X>j+-:9F2r!S]pO\-
%PEb54PAnAX;p"q2-/lKm+hkfMQBe=9P(Fqb&@q.F%=f7'+-$oR6IGaaI5o*$Nj&B'Ce2(R-/tf$X>DLaa4uYNb00)$6q94C%Z2qM
%i=,Ub=OFG"2&V&nj6dd#`o[#24jJR_-6@t)iHh0#%<rP6ee8*:W%Q`eMA8ApZa^co)<[&H!ub^;b(`E/50a>E,@4E[iO$L_6:D`j
%r<g2ME@T&7kkk*#iOfrf'rI[@&Tsi`?E]hV[o%(dZ^E#enJ]G_#V0*3\Zj8nOE'/'HTS^s>j$TVj1g*=\*`Ba?I!UiLcTA4m9#qn
%1]\>7j^hDrMD+u'L4nT"=80m>[F/hQ<X4k]ll%GCarg<lk;/ZQ^V32@kGmf6P7>r"f\C?!cd+tE5h?bT5V)6'W"^'Bp>\!R=\6Jb
%%KLEC]'nGCCVQc9?=VmH:Sto8U82NghF'?Q9cD`*cJF:eEPM+J>B6D8*>]ijOA8JN>jpIZcY!).m@JV$;%c^+*Djir>tNmj\l\q\
%c5ep^%qc&^8saCi)`7H_Kg5a,;LQ=+6M!qW5O\O%mk!GtgEYStP&Tj+58m\o5f$9D"g8H;9S"[6V?g6L,NGBNiBrZQ2bXO5]A`@l
%5h7_rnHi_cBldclq[Ri5:mOKL*,_kf73MK\8lg[kYq!geCLnkE)%W5I\s7C;pZrX\..B.gq9Wg.$VZL'OSPpiXE1Wbl_9=f-/%L=
%.H>AC*5NS\BhKi)i/NHLWV*qA$c<K6TX?HlJ=#t`0dW@WL0srZ?OiPt2K40AUUgBY+CMrTj5prr3$kIo:jAaG6R1OCIes3Z^Q#sH
%M#Bm[X\H>ck=7%<)f\p[-akYPV*F23h8_b"#HsjXkKnnMnLU8B<Yo:k&7JfPH*o+'C![7&gf!`Q\HW`1@"-O$hoD#0.lUW3?5aRh
%+>2<]VF4DMR-]Z/KN;)HKbDd0n!p-h'VT$:F5j^`Z3$VDUo`h8-<GRoJIoPkKa$VO/,SZSqgn:n!NDF7PkB2ka1'8_E)#gTQe@NM
%g!8gk<m)UC,f&+Nf4t[ugj8Wk,,X`(qs'C&(859J&G]5hIM"Kgq$/`40-ik&&)9)r!hI-E]We-K%fd>oqh$g*[[M!U`&U8;/7$9D
%J<,:1P?CCN8fSMFi,sV;*#$E9?N_3lVge/9`[.5el[E#q':XgC8Vb5UIX4u)<(+=hHo.)coa<8eL)0T(C</A]hE8-&W"C,\'b1Z<
%J5dI'Z6IG\:XSGh[6O_i1o$_McO:-C]f^eKQDCc+p!bs-7(tUi#GcO8iWH@d?Uo;@kAR+#6CI0/7/<Mni*tC281Q4R\orcAfq#,L
%R&3!N's!4>+[/.016.DC!4_=%g`!1*Ee/%3q3&>q#dBW(&g>UNY=S/8@TDsZ*84.i1=#3:YjArE`1"4:;F15tlpNmT7)=dY"L;]=
%!)9d<Ktb5dQnj]fOm.f)^W0SM7A*J-p#+S08M(<4Xs-8!!:_S%YbH#Z'&mTG33NPsB<A6cTR,+FYY=A1=*-LrqVK@#Z'RD@`JFf'
%q,2FR&oh09PS(;^Xu*g9Ke(@,:FblqB[OSW,UGlmfNC449=)L,C42]ucDuNKO<FX/C0$U0F,t`U7qeH7>dYd&BhB/U0VZ0ce-0F@
%q;:B)3EECORpEUU`"WXgN`S9ehu(QI0,_6&n8[/U]*5A<c4_>GO"C'jEN96je(d;J/@_TYM>,pQ$U/.WBu.(/8T(K4e&ZnK[.7!$
%p_7_GrPi.khB-U4Bg6_Aan:Jk?SZLVi3_)>ITt?G]#43*:)NILi^O#6*]gl@^]Q&FeW117jF>s8hd!:X_^fi^1`X,C@;Cl)!233_
%:!1V4_VY`l$e^n_:)3"5hB5K(a2b`amRs%0T]jrrh2k^td_#sNrE/*]#h7KRO-mciDE#+4D$&"`OKQQPh.M/s.jCC]<\LLR"3PA[
%ThkmWf[@=N2(O>?E2&mHj1HECO`!MhG!E_g<'q4"N`3As2X9bK$uhO@,Ll/<^J=LC21Q@SbZRk@+(L]Jg>$b^*0GAsZE=:[-B,5t
%X2?eF]]a<rJ0Esc*i%@hT*H7&j(h+a+:,UPi)$3tX<mqhIXP7UO@%9KG!j,l/c7-pOhWtQ/%GCK/`N%iGb)EDia[ooi-e]g?!(*+
%CruSK-/uXkpi-PtEj]cp6J@0Pj,9Z**!-sEo%0*JOH)tC7LU/qoI4q4rOsfg,&o)fkk'+2P0FjgE=nX9ODi!;'k(*^]]?E6+lfr9
%oZ23Yg>?8OE]jK+0nL$Q4OFm:`p'Wc4!t[.r+s99^:;=]m.ZNR_`_:bU%]s3DY2;=naJPi]s`W*F9V'E.?u,`0kEIo:=,[Fs((SS
%K%JjiF@8I"=?#lKCQ([Z(c%[H-YUh-mh&0%3WWc0R*6Z9MCIRtpX\M+7#q'PY]R:o73^]!FtT'"jTlP$`mCX^,!ejM8ill&iJI.n
%[?@[SJHH@(5JTe0(ZA0d@7kd9_,,!%H]eaKk[)%ZR6sD#@GmF;f>iVnMf/14Pjn1q!5JmF:"JT!\q"gMaX@$@,s6H2o^VJnN*^2)
%.E^.A">YLj.&XF@^5(ZX=:uZ=)]G7c]O`<<?!!b/,JU]0QA"F>*-gL_A^0/5]f2cp0mjEZ,eTgcJq&Kk!#D#'5V,ee#ZJ_fkD*e!
%;VLq]W\pXmW!%?neeM-'!tC!",gGAhE"6&Y<-dJ$"I]>;(/Bk<X9rgJhWgd`j6:WZd^ao@+gf6[H0=\5camT.Gk@Nij,#AS*RW9P
%Z3F8u+K^2,OgVno,A9OW/K#(k'6k<[U;T5CB^<_Zme^-g9GroK8nu*@Z*/G3]W0L8rma[7CTV^3?kn6oU%nLBX$db.Fp8j?SiB/\
%1G`E"][7ImL!Cb(camT.Gb3SbNU3U]`:XDC^8O0<WR7.7-b.)q.")\K)iYnB17gZWqC=t:8"__Wkh1!N/!c-,cO!bWM'#3O^4!fW
%VS+3^%AUS'-ruot>A*TTP4A$%JJdR7%?jA@NVMKH>qonQIk)smcfo3d2r8$&d>tuD[?<Ke=VEQBT6NpU<d:k0pfp2+,H$?4Apr4L
%fnrsCJ:_a9_e370AN\=U80]jM4(H5ZIBcg.f-AW_JHm:B(Y5\Con9miVMp;V$.:e*baIl+qGHBsRErHRb'<WM5YWTFZd^"XBnqp1
%TEof3@H]\q$JA+hlCfZel#S&^HEW(F7,Cc.m7:;P)>@to7nW=VqX#$7Ks][]8Gjq;"K?[3Oh2@%=+i(R/?-_uaYp+)=Oo+bM=]c&
%Y!>BE()/IA._f`W9VnB.'q`g/e.<9U`\HC&`E3V#78HRW`dg>F*FU9t@cj)>&(EZuDr2B2-VfF=mfch0`d=fHKAa9/o6TB29UJ,M
%84X4g;DT%e>OZ^1]-sX"63-:XLgQok!@=M`R;`!F3>$_Q'+f;_i5:pZ6dG/O2tqF2[gQZnc!3Y]V>1`-kc6IOEfnd!o!r/JnnCt+
%Bs6;PR)7d2LCUH3CL)CcdT*O05ZYI>n)hSM.ft\td5`W!W[OrX6c?*A!6C'A)KfhHGeak6n+ui0USM!<NE'f9\5a'N;RGQq4[r^1
%CH/tef[d-U_NZoG**374m--k!ks0e6jNe;U`c]GgJN^<-J9un.it&I_L40NeDZlAGWue2>&t>R"K)4.4p9%e"V_uGnd;Z=rc&cpO
%%g;[QKPdmpZq!SPYHrH']hK/Z$gT8YMHM)BOAGP(N#VF,$%STlo;&oA_6=3JWZo77/(hIPc1SA\(c$!ZUKn-@],h+e8GdXj=X%b[
%pZ;[&DqJV@f)lTUr;p$4Ni6`A!;eY:2+q-9a#Ql8.)sArXGRb.04HXA;oX)GJFcSQ7SH6j`2Uf0^h9Eii7M-(*LJUP8>l6)>[X<m
%Qi_/*JkjZEoj*DB2fHE$W:.)H2^q]*elXRC988+([>9@t223=%@43!\JQt$\id>[G$D&ps*7od[+hc0r\\""@)3_SL#ri#8ZcIQq
%#T]9qlFP$;BS4Xfq!L++nhrA([GJ5O>dq-aNA2>d</jSL=TP25AV2[Jgo:Tb,=8bl"'+[j$!Io@(tO]*!$ko/5#2LJ[0UldRNk#O
%@uM"MG`R]S'OZrC8\7EIYJQu4RT$q.KQb3HEN:#:jVb9g2\oQI;?Tc-7ZM1@>)VB+c-l%nEN9ibk/A/GL[1I<D^tm[&p`SS:+.,.
%L%'6t\#tYjj^YF^5fZco;jou61N[Ddj7u1leLom`*q.ai(T>hd$o\@k@mI6$85R'<";IL?i%DtU/s4Qk_NaTFkaX:TE301"%&LOK
%$Q(=3h+_9*RMd,L#Tcrq55=1/_/+f`\>mJS^(>C/%/OVD[oV)uJXn<1BYk]:YTj"W8m7a;*q\X8I44&E<p-<4J*X$6:E(fbn682A
%5L=\K[CqpsYQUK2A'eh6--Th![ci[U.dtndoIgc:b[G&N"R9*-&>kCJog!*B_PPD>*ZeBEIR[5Mn>Plp^>X9&'4_M=``YHRs!l#3
%i.g8rPq)9(VI[%Nk:EmTmt;>,BkYStEC`R3@>as3)D=%on'/gU:D[rD-4BnII;6$Gq_jG;_h41Lhr6iK#4,*(7dDR16ZUr%D;`Z"
%9A_&UcJckSVnRSJKhV25SrWFrWm5:,-\R`YBuVoWip`a1=!oVSWRO7KdU%o9LVm1e`[IK(CpWb>1@?-R5ZaafN+j&X+;^%"#*cdm
%`jc1G9Q0l=b4ph2j,l?oNEJbqMHZe&H<`A@2b!fRn&66PDTTD.GWahsC=oF%#f4-$RX%#7Uq2Tg#]qiT'kA1HDg6Z);=J"dFWMuD
%b+Ykb0`WEkE<ALl6SN'+Vq)X^G5s^I*ae54X^t8>\;mcEb_&9G0/o>M@Md3Bqo/tSbd0a*16.rZhaR1"o&4dM6:5=OYcE>lXaDOE
%@tj5T[KogOI;6P-jHPVN89@aHeJJa[A7bi:2c]s01DXEA\5<]M<-/O!UKUl9kp35YU'USV_jB]>`@>inW%I%!2<ZTQOc-fMJP\NH
%N6so#\1^=LUDRj-(1G@q;%;#G&bnS)/PaSc^_J_Xepco(BN138Y_Hl6\5/+S?BY+U:UN*TK!U\9;M9W,e%W4**h=4_7@5iJ<!2(I
%Xr=&9O-@B+.RNF(;UXFd#`!,a6Z'rT;%;<BP;>\g!`[p^TO$$K:%sVZ)6gb,$l3e]LOD)j"g/>[-O*Hb1%_\"n?AS2)tqWP]BT(m
%cBC(I/0cETqO:^io&$IeOTQ[c*)P2>Ku8Y,`oSjNhe?bh+'W^dC8)te(a;]c/Y61Md*jb3W2:2PD2fCYDZ^B^Z>3-^:T2(BPYd=[
%6C5UqKjDK6'uI$%$i`!"-QkHXa1ENIJ^.V)#Pjs16kLGm;hF%.Ph8EpetS.Hiod0N(f+OM0U@#.q%qO&S8D0]P6VBZdR%qG#YSYZ
%$k^Of5c',a$nR1WUGK<n7J,=0iesLaeE>KB4(fRe:E8oABdYG4Vf`!^DnOG6Bq<ft3]M6]2%g"-J$hk^7m%6b(5c$aYJL\%&oh.a
%"JqGG(M];%9j;d-NO8"nfm./0mkMUXcWUUPk`M&LGJXu4>)P-W=2K&j"BjJu/>k!PN9lPe[B70<b,)1V`@9.lamW&lLuVY=W&V8s
%<0OD#<.lmW:P4jUD6*-!^4NG'`@25^N49OeLtd+"4Ys2d4HuPSCX0G?]$gGR<JW$01gY:<r\<l;F=h2Zi3=C>?q/:S6j+=u61Ql"
%qC7SJr?>VA[5%=>'L?qN>#bZglMAI,HEq(O]t+.q067AiZ3$TWRYt`p^,2oI^bC^t'mDsA(O-#D3u^#8@=T^Q/;L_bkKkrGB(si6
%F=]%TV1/:d&\kHj2+Jc<B9TLa&HYR+k):Y:W"<:ooV1Zl<N7?A)cdN/-D3a@LK0$?O*K3u6LCH='V`@'eZ`otJ<UL,[CJ5^``Frb
%aN/PeF15UI-Zus?l0f5Wd$)9p]Qu?IUWaOdb;:RHh%s^;#Dc-ph,F8,U4V)#Z@!mAKFCg_!OL*BZ('hN7R1!!ST3B?k<M`P]ObkF
%:l+#[JH,IP%-_W'+p9.$Ka3!Jcbb(O\\3.?"]J%N?&`dNpt7elK<QVk?0l3OEE>)*f=$(oWddm@^5u+\qd`fB3K[Z_hAA[:DVb)Z
%H.tOJ:"D)`J<ToJVGOB8EO:-_&AJfR;>eTU^K:YU_pKT#)<["Rk@lS/L=GPbHsA?Zk1garcK]IA-!:a#RK,2.c?!3p_L#bc#%>V5
%5,PQB(FFCIC\Wdn`)WdAW*RJ>9.OjRI7FW\>L-6:&+sPt"hjLlY!Rdfb:E!B0LdlWM4-Dc3j\iPJ#D,,Zi<uaN@[lG-J/lL?4Fj*
%PdD3'?.ia3d]Kpf\BI':s&"H3h'%dp@>2d<#(*dH**7b&W\2heg=/q[o25\RE6a1.FhPT3pYe6mS-[)I\03&c#XcIS/Po<MY/%O3
%<mAo$:o2hu2e$^k1&R#]@%?=<IUe)VR,-PPN:SC.TO,H7W00&<^ZsV46qG@WCF\7]kh%X@6:=Ol4p_KF)Shrtj_DjrX2c6GN8CXR
%UCD8J(;/>bN&%+*KE5F8mPNiCFk_-;N>pUZJ,7*4?gM\fhlpS/n^0msC#DN]J&$N>N#V0Yf]rA9JUB9&n9f<7IUKon`3&_PVqC,0
%f63T@;pTmhOo:jaDRJA!iO-CfC"c7U5@V@e*It8!Cb?@B=-W$?Pt&sYr;;EI?8@P1msF@;_)pYo_PQ\VZRN(K3khcHrRJlBWsKNe
%"+9QH:07+tZ@-'mNfS;h!.J0S^;^c0E;%i/(ArF;=q$jMb&cncd%&)pFu0J'`,RYT#7AVdcPE=s9eC>10?[^!jC)(&E;Sf^=.JK3
%)#:2D9/s*X*kV>"bEgl)"iPaaCfbIei8#2plrSjK%9B*:<XC5;`?7hlkOh*RZF8+MU2OgBiC+$;J$("hkW0?2#m5I<HX3lXrZn*U
%$lS7$E#14t[gC0pa71-UA0P'*=1J!+Wt_8#`Y<X/YQ@K7j&'#9c6(UKONJ=#3f7@kj'%(t>@mB:K_-ZZS'OX?IUr]L8'XE,ADDAK
%5Nt:jdi6dK#4]Z,3&8&k$:;96JO<;l*M3^.UkgTW,WsMW"@)oC,6PX2Zh\F9(K#I0Ll4t5aEOUXG-&YsT]5+F':+I'*n*K'3]@`1
%]rpcd0`Zem5LC-C`9EjQ4!Wt_d+O*<)3J;,lJ<%.^iZpkL;*1(#BE2Mdq;(C4f`b$-h*)Y_MOkO,+^qB3\oKLQ-g2Wgl-,9K"4"6
%.8C%+*`bL!&Po#2372B^>2gR0)V4Ha\miglft2B7L<)B)!;AqtJ`,@LF"kC\q)(q]#1h:I@/q@OCp\qM7nsWG9Yg@VC30TOJb_5%
%8OlG\&%!1RO`4..CifbeY!P"W!B;$Gm*r-#!lSDm6c@G$6pXhrDY+(75SA_@8P`"l:S&/;K2IEl$NioeB_=]gBq?km&SPbN)Hak_
%-Ns(<NQs;E%A4T)WVlauQnf_tL#i4?M"7"@\8+;=mW*B>AD(,IqksNEc5Pht]K""lfEFBWI_</)GJ9LqI7I[U5L9p>_"5d(1icj>
%?-%@G^el7p<:YH:J$ccfY6B8+Y^iXt#1Q]i:UB8C!9OtZmKXNsm+F(bftR*qaCV;>-Zkg9Ou]B6G^t'.K-9W-&"X6W2n6TTa8qf/
%]jW/#^E]V/kO0B.Q"\`#Zm=L*F6-eH]O!YU;)MbrJ.u?IF"/hMFV<2*&W`G(WgWPA;lN5^A@b]s&,MK]Qm*Sb0=[-S(?^pkI_`U?
%??-NU5E$eJ_9f[+C@0c"(@g`/!R";\m)G"JYO"9hl_C&=,+^qBOSn&2Q%<"OY"/Nc*O"rnjdA+tg0sfsDMWQ6N(A&2n@Q)]@Rqq/
%dM5^#o61dBF#pFMB^NIAjp9&!Kb9dl:ZIEg.R:0*bR#dJ"qG3%6p,LEW:l9GJnjo\i.bM:]I-h"")Wc2/k#Q&]_00E.>?4n1h"m`
%%*$A8g1J%gI>W:CN#6[\>jb'WpfC>.(SC?<'_1N-5mtKKI:\@BJ'K@hhoQEjIP]TGJAoE_G(tgNc\Op.LU^R3!?>A9DCp@6/#J:&
%G**He,?>oec1VVM^tC(bd%d@&/o/O]!LhE'+IkP*0K>GCQghr8nPMLn[AiWn0^=b0T@XUGc\;uC!dmG9"/fSD-AP,..^q*n"f5OR
%pU#bmriR(]BXCA;kq:qOe)>q>!6TLpYD$SQ?\qk':[!S[Vh7`JTXDM.K<YYf)3r!J97/HqKTK%Eeqfn,W(PmJX9])Vi`,^C:-eAm
%i7'[0#Bs$$2<9-4HlGTZ\N.Du[ToG&7oWr#[`YqYdKCJmbV-MaPt1SWrVI4IM]-ltl&\o`Y7,*H:Fk$G7a<[<">iqq:)#5.-KJ`S
%aLG62r,Q'#riN^r"Q?R_9h67V[5Blic7:SZgo<kl"W+<2^oM(S`Zs[iD9[s>@<U4H9H!$d#d<MH5]6&T-J1?8'Z_S;V1/s,TjPPI
%r'3F(H)4UHRYgC31M#:?LVluc7mddio(QE!jOVG89t(lMWpFCT6l]81\C-e/[oGD2U9jMTNVg2CRjQKFbc;FYk(MYW51^_tDH4Th
%;J<ZX%bh!@]AD(Z+^&Q5=-8JP(NH>geCknC0c2aF>3!9%GPuorqAbS>Ec9T!S6#e]1+p6:ED?t55)42O>_iC>37cspE1Zk>Y;eC-
%BEs/D73#AR+K'%H+RnGLQ1,Tai[)/]hB"KSG;Vr>Ak'V1bPV!]$Fj"<4E#5$Q#8&a693Rs'+-2imnFh+>A=+$"l-'Z=\rlJ!27u%
%T`N#>b!$.R@#H"^qN_)+"cs@=<V-Rr8lM7Xg'XH@S.hR;V,e1idO.gDRM>g;7(HUCSU++R947e/emkBOZs=3dnA&K#]"+c+=SD2V
%`3!e(=,kHCNhQQchXud])oFtbU:4qIa-(FI%iCp&qf$f!(_6T_YW7&lcHFfG9`RYH+R1@U79'c*ADF1TKP`/m*lt>Ci/Mpa6P9Y@
%`@>0?76=r#\5a'nPrStR[hb=?@L\)_XYOZOilelG%EBdSf$uK?Hb?UE!;0Bp71OS9A1VacWZE#7VhhZo=S7Qs!fBF>?ZX/RqG&CU
%0+!Mf\2B0/7D:H*!cBW<[MHY1ltTi1E[jE,F%(.B^lAjc!BL#@$]`]d>+.iSEc`#sY5#T'T>cDG)V[JNTSXR(QU:@9Ja8:iWU<)6
%0So<cYt>+#DMJ6[Ks)aZP4m;up&>9j<KZ:up+3q2M_8pAnt!A-B:d;(;1ZKq)HhG\_J-L5@Bcq=&__!XA0lp!<!+M+\u:s-i+)kI
%7'>R)N:TM>A=tVqm^jB.6'jsL-3W&=I+he_!o/C.[u35H`Gr7<P]6;`:W@tmK*lhAH"C4r+_%JBjAr>p+O0_)hN2a6O0[,;k]_ig
%AbXtHKqTj.@cn-&Hq)Wk2NWe*%<LM4]sBqQh%_1f+Ba"[8J"^c=I_jF;hU+iLqMRN.ff=M(5@Y:C'YI(5]K?<LSDSu@-'Q?4c2MR
%KDO@'ou\NF0CFK>j893QYZqMU9rPrfZnJ*,#!V+jpH0ofoA*G%_K+]fVBOp2('<Sqko>9opP'G>TOd`OO9sn-WncEa'fKPSiG6Op
%Dm8?6V.)sV*E]#P<$8!B[mUf8%e74##U^l_3_kGc7,3!X]E.@,Q7R1#np*%?r=*Q9"8b5mghFOnMR%!<BL>Ll9L1Q4^jo5[G8bE#
%gh/ejBfdocCHaT59>mA*S.(f9X8LqGSYj(W9<162i(M(l#2H!?6.cW+::qP"f8nSQ.H!tu9ie@&<DDq?RAObA4CQ!kN'$Dcp,_Bj
%DSHQ+2tu_fp3VWUDSLZ:g=J<)8'/>N:p66Kff]@R'LEdj:'pu3EM=\QDu8]Hi:ojDPYbVl/#2G;VAF-%.Il4q'C^`gUo'1sgPP*J
%+lg'RN5^JYD1'M7S=j3+?VpPM8JAs6E%)MHfL[1Zmo.#I*>jS?e\0A5%I=K%'CR6_=qQK@fJ1(4G4gegA&pX5#6Su)AC?A=qD"l!
%-snUBq3j!V-Fq_C.m0l1@M#Dqo6Nt&@31f2*9bY7?9$6[b#t$f5RKu3"B)<j&LL)Mfk$[<X>(:<34Hu(VI4`/pf3ge-Rcj17)`e3
%`QHZkQJI@ON;JXqa2,K?`QAcsiXJ9^.P@<o]n^jPk*q;""ZFHU^JFQaoI($I$jLU6?iLI=F%m.RU\Kei&]D_k=90M6:]H0.e*bYj
%-pGupQ%Jb%nA&;]@@_kC-S?"/46#UcW+.h*rIC&=;G'=h;!X4VopSl)\H\E5bBWlBaObLUhA$@C.JZM9A:Ch0m[PDpkVC1nCOJ:e
%Z:(H4n9j):'Kk/+ZNOnY17gZW3\^t'%NZ=B5$8*]]=VOo\CnE8'ZgUO\3&P<"N^ma,mRIX&HW9A`_D%#;>/Z^KIPrD;a`L,/j)5&
%'@[BBJ9LdONYiBMBJNO#iLc@O1eLtU-cP9P<7=CXooYONdQ.fRPjn=uJ5Val)BD]%_>-W'9Grn_&S8Viqn46DcrFWUX,cC#c,DK5
%=HU+$q&5QXLX-9310iOan=Wl5`A3b:h\B)0j#7R(1BSG8$:XkP'?Pup8p@SMb'1.DTdt<r1Wf^SoEJ_rGiAkRbsZjL*RTYl8oD[n
%qN66:"?b"<W&A)h-dEVBD/%.*Dfc$u_8t/0[BB!t>HgRi^r%N%64+?<SLB34F%ALB&Q?QQVo*akoD<W#0CO2WX7)XWG\i,C.(JZ(
%r`Kl*4s(=??T&T\kZ*#bXlL"7`0Bch]gL.X0Sb!YH\V[&_(q,u!)7^]>u[ohh_`YC5XWO9-\uM%ZHeW\',BsX41`lOoY_I65_Gb"
%/)ofqmJVQh;@H*k17/edglVeQ5oM<e&"aCZkk_blA,l,"Nm("!&alWKHZi$>fpU_a[(_7hb6h(!W&$CjX%^-A[!HE.Gl!pYe:Gk0
%_o#u&Fb[U-JZb@qT"g<l^'s-Yh8+7CRtA[6hHgot[P2akQ=<9E:Tp8q@*!TR'N*+C3e>ZlGSbQ>^=*Vb`$ODo7ROQq_;Y;IUh<)A
%WT03=*aUQm.5AdJ`QBc/UF"pa'-^_=9RBPXh4'Vf53n(Tj4RA*dg<m<UE^[oO"hOnJTi/1V:)FpM9/d/9c6a!'*oP!"s+i1koPFb
%07TWFVMtEGOgCE^#l;\qK-p+0AF<V6!*paIjGPf[3)se0N0q(IGiIfZU`U/Fl.L9S3&R-ur:kYh59.Z?WoXBaQ4<,Z^k'D%'E#D8
%+L_=m#p7Y\$ngq#-/aWdiQ(hh!2hptrBQ9-Pn3]trGWJA$Y<0K56r]C/#^uEb<lQ;]]^t[7+%`0AE9'j6cKce`(+*!CW"=];R=6R
%e;?)sV^oKp@<982b?[`6Hm&n@$_WLklKHFa?#`3>2c"9X`%>^t.&`8?'YI=RU.SiEDeuR6TtP,t2c-?4N@BF1]80\A.'s8.1"626
%QOefh"`[ZLa;;:Oeri=d12bWpXr#bq_gtlaB+7AZ;;:QaFkn$u.HA&^!bk[!ccB6b$6?/KZAUlPRXdB.BRkK\#k0h6q\4%N)E>'B
%)$SREK"-9G.T:)to^Li,]t(;PgWbh">RuMm<>/i>=+H1FQ)\bh3)'Cq="k2`BYP!S\':"SWugfm.S&[dk$fjFe,[XX2c.4<_KL4n
%0LX]rL.AJU!Fo/\g6F3PJFgao9$Jj4ro1'=QnltQ+m<1keB3S;$L!EAEgHsL<tPH)`LFMPeZUBUS^?dQaR`+n6d]nIa2Vak_3grd
%"bA1fmgV4bZm1",JBMc]^J=khl9J'dM.<`r%S3he\5c6'elUS1^=mi$g9JJ[KKGHl,@KZ?Tl)CYb6AYb"kXVUF"0XR#>OOdcKcUW
%2_C'^`=5qI!P1qp)AN9\?dSl#Bsb9p\I<=!DUlVQ`J5P*<GO+X]B#?^e,\'$1`@=[OCSp"Lca.[ek2rpecNWmfbfYTW39S<#-,!6
%@kad9j'!inW&C/V$ka]0;@U-A*%e/s5l1$UZkP!T9DrQl`iXPtR$MXRJNR]XJ(0.6A8368Ob,S"NmKE=<]qYNM_uQcasBCa+FQ7c
%3&$E+2&oQ5Xc$Zhq,hDPaB^R'hNj/:FD=QAR1I:U?R!dqEBaY0EeUSt=@91JW&bM9EDZaV+YH#d2\^h'RP+5VkbU*B<<[Us630DS
%1KYB"_&J&&7^e)`ZU24u/FheY5c1;q@$gq6V#\i*!-'Fh%;Uslq/E+467/1blV;CI9C!$f""@Kf>Dc7=pDOH@F$-U^A70r8+MX"i
%pGKQ9q*5.86U)j.YEN\r,&-NQj7Rd!^A+<Z/1`"SO&+VObi&CO;RBB:;d5G%Qo/<*W$SF.CIgFc`UECurWJZ-!!`MoFU_X@$rVm(
%$gNF35^8b$`A/T[4J5[h@)#g;i`>OQ@ECJmX<TPTO/W6N4sr)1nCY6/#Y;L=?^`/uYNqS`-\oU(!"J9=NiR^ZoJSfHBm<a&m8]e!
%g@Qf;XFi7jGJMF($+^a=VuRO&6'r;QgF[lh,l1SdnZlF#SZh<YGCgk]5h$.FN?U>cMfM`rX8r1d7B9_6Gu#/H*"X8B"QTo#H$(WT
%glPF,M%ld/Pn3r50.#D,P=MEkg:o9IkER1UT>TAkOOl2B,%THl$p20*#aTmRnt!ui&1DkD#e6?:+1t7VH\+]9a"(6Gl'fkq[h8M@
%05I$`JR:?i0Qog,aXKtM:[^I6KIPonV^K1S[$$PH;,%VA$fJ">,n:s#J_XEP!&?ZVFW/6Adr!n1S_]BI?4VNsX?m+3#$OpW8S&gq
%LcWU>)Y+o!2d$.SKi>eGYo/3@ipJg]W>sXBGa]Lj=%?Lm\see5!lF,F+TNlmi)pdBSFP\1@i'.a3eC'&b=p?C:5'3tA8h=O\.PVY
%J_q6[3-a_/6&QJWRQAK_(c(Nh*VO34JF-:GdOr>m>oYAa(4#CIYXo+2$\CX[.9<g]6a$]&agc8P^#-).hseCjn_ZS/gXhWDc1m_F
%(fR!04'c@k`D_3*Gti1oM@itk"c0ib3.>Ub^O0%>Y.f%kXG$[(lP'VAWT.8"M`k'gDdrj?`;(=Q=o"Db![Y.q3'SLM%&!#Z/s0md
%6ASVqoUtW<a%"<'!ctRbKIPq^4TMN_X.`#ad!.J@aKMNraqUn.F*BGH;o[-e=4;@Z=5,F39k;[)hZ]PkYA7'-kZ<1:$3P6\`(qQ?
%@Y;5MbMQ[@/gGLmrT=&DjG<-77)u%7&`s]Y)r][soDIVir8%qUZ_K:uLnS#c)%_RrPZVZ>Ypct^;/8I<UEY_N:BJfDLZ9TGn$AcA
%-*H7F6]%m+.ZTAG45HcKGk2eXo>=CO]_fEM\1JT]n!=*)IJInAf>kL]6i[&U+u=#-BQo",)kSMX4*?'hd;e6"k]")FN4)d@r2ZL=
%]b*lpGX=d9nQk3]bebdc@&A[2d"#LoCkjt'M[8WXBrFkTD]=`@(r&B%CJZS\n)<mJ`],8<6:2'58:Tqc=c'd@+)EF?<s-hLT!"2=
%(i>=!Ymn^79aQ"RbZ,irfA`eA@5J`GP_-0?4m$7`IP<)G`0#$Od4tN7]..U_9gg_SdYn3G,A+g>G"K2`BP8o@EH$dpBcA(]9&6CH
%(p?8O*rlk"cF\6u^s<sd;!D@aqX0HB^Tsn0dh/OAG4U7QX]r@h$$VC;]Q^MpZO8aQ;FX4WHc0n@(-)dW2e.VR#sWEC&qJNUV@t)[
%>;Tq2h*-0>liV^qWho*In8lmlVqqsV+a*EGhqmkdk5<AAIq0IY,KjAeq2FL'[XXqINuiH$-&`_aH"a4W%C"%r8#Ze,+HCkg/0IW-
%27-I@DH*ATA;@kbl8@,._o)]c2$"8haV]pJH"d`9P&[*4B[h8lhCCsi=-l:7-MU[*5WIS'\ld@%h?ban7Q&Q,*fSK;'h&Ced@`k!
%97?8N'Y"LQ=G/-`7Q'B@ej;8aUAt>8W_,\blI<\"s$[O%@U4pq`f4^U/$a.pK(hfg,_>ZXJCosp?ciUG%_l:R12^'$`/M3S2"3%c
%K<^IAT(Gsb7]2Gq/id'f.H<lTkQX`8_`f".d<`o4df`kOEB25!=HNo*ehAZn8(H8ddSNa]"BuRWG1\1KG6o@19o-]bPXiRW!W@u:
%=n&/ECo?MrE_*OJC+3CF9\3V91-@7#18;^b`9f(,b?'MsY?tEmTL1?$@ECJl]OYfK/!jC*)O[P_`l$K=;;m_!Z`F=[G5t]K8n^[(
%74['\)%qr[JXs+AAR!V]_Y9"Q2.,/:dR"Te:.q;cZbeU7U8Y??33>[9#fg,&[W<*>:^]5.4XFag@XSb-2$I+h@2*)t.k>%!33GZd
%A(XeK)kaC96pjjL\gBstdH,[g+bTi[n1&0,X$C9fNo>F3Y`.%Ge.0jIX'Bmp\KYd]BYp$@j=5+4=:HU1N`'GiL9M"*$%f75+lg'N
%J4psOR^hEK?JZaNiH:`lL<3_9#U.Q2nZora<G2gX%)3BV`c3jUD(-8<0J1m-$bX@+`3A#<ZG;/*0Y_.L$S1!GOt:Q>`b@<on<MIY
%(<(m-ZG9,H&r/_cGg9N.-iu"SZG[KYL--MX_iSlm?M[0As8!i$hu<S(cN!i-rmUoBohYV]kJ)KC7N_Wt^]*I>s8:dRqPXAdgRnNB
%[t""1s8&YnoB0K[oM>Ji.=_=5,5q(nJ,SuRrpP@9l^r\&fDkZmrtf&3,Q>O:rS;u$0E:9Ts5s=^[/>pg~>
%AI9_PrivateDataEnd
